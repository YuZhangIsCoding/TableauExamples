<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.19.0212.1311                               -->
<workbook original-version='18.1' source-build='2018.2.7 (20182.19.0212.1311)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
  </document-format-change-manifest>
  <repository-location id='Hospital_15517529077820' path='/workbooks' revision='1.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Nashville Hospital Names' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;'>
        <calculation class='tableau' formula='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;' />
        <members>
          <member value='&quot;METRO NASHVILLE GENERAL HOSPITAL&quot;' />
          <member value='&quot;SAINT THOMAS HOSPITAL FOR SPECIALTY SURGERY&quot;' />
          <member value='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;' />
          <member value='&quot;SAINT THOMAS WEST HOSPITAL&quot;' />
          <member value='&quot;TRISTAR CENTENNIAL MEDICAL CENTER&quot;' />
          <member value='&quot;TRISTAR SKYLINE MEDICAL CENTER&quot;' />
          <member value='&quot;TRISTAR SOUTHERN HILLS MEDICAL CENTER&quot;' />
          <member value='&quot;VANDERBILT UNIVERSITY MEDICAL CENTER&quot;' />
        </members>
      </column>
      <column caption='Upper Limit' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='200.0'>
        <calculation class='tableau' formula='200.0' />
      </column>
      <column caption='Stats Type' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Discharges&quot;'>
        <calculation class='tableau' formula='&quot;Discharges&quot;' />
        <members>
          <member value='&quot;Discharges&quot;' />
          <member value='&quot;Medicare payment&quot;' />
          <member value='&quot;Total payment&quot;' />
        </members>
      </column>
      <column caption='Top N Hospital' datatype='integer' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
      </column>
      <column caption='Bin Size' datatype='real' name='[VUMC Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
        <calculation class='tableau' formula='10.0' />
        <range granularity='5.0' min='0.0' />
      </column>
    </datasource>
    <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' inline='true' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='textscan.1lsqdgd0w6pb9816c97iv0e5lire'>
            <connection class='textscan' directory='/Users/yuzhang/DS/Hospital' filename='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1lsqdgd0w6pb9816c97iv0e5lire' name='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv' table='[Medicare_Provider_Charge_Inpatient_DRGALL_FY2016#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='DRG Definition' ordinal='0' />
            <column datatype='integer' name='Provider Id' ordinal='1' />
            <column datatype='string' name='Provider Name' ordinal='2' />
            <column datatype='string' name='Provider Street Address' ordinal='3' />
            <column datatype='string' name='Provider City' ordinal='4' />
            <column datatype='string' name='Provider State' ordinal='5' />
            <column datatype='integer' name='Provider Zip Code' ordinal='6' />
            <column datatype='string' name='Hospital Referral Region (HRR) Description' ordinal='7' />
            <column datatype='integer' name='Total Discharges' ordinal='8' />
            <column datatype='real' name='Average Covered Charges' ordinal='9' />
            <column datatype='real' name='Average Total Payments' ordinal='10' />
            <column datatype='real' name='Average Medicare Payments' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DRG Definition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DRG Definition]</local-name>
            <parent-name>[Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv]</parent-name>
            <remote-alias>DRG Definition</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provider Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Provider Id]</local-name>
            <parent-name>[Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv]</parent-name>
            <remote-alias>Provider Id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provider Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Provider Name]</local-name>
            <parent-name>[Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv]</parent-name>
            <remote-alias>Provider Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provider Street Address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Provider Street Address]</local-name>
            <parent-name>[Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv]</parent-name>
            <remote-alias>Provider Street Address</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provider City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Provider City]</local-name>
            <parent-name>[Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv]</parent-name>
            <remote-alias>Provider City</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provider State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Provider State]</local-name>
            <parent-name>[Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv]</parent-name>
            <remote-alias>Provider State</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Provider Zip Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Provider Zip Code]</local-name>
            <parent-name>[Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv]</parent-name>
            <remote-alias>Provider Zip Code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospital Referral Region (HRR) Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Hospital Referral Region (HRR) Description]</local-name>
            <parent-name>[Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv]</parent-name>
            <remote-alias>Hospital Referral Region (HRR) Description</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Discharges</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Discharges]</local-name>
            <parent-name>[Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv]</parent-name>
            <remote-alias>Total Discharges</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Covered Charges</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Covered Charges]</local-name>
            <parent-name>[Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv]</parent-name>
            <remote-alias>Average Covered Charges</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Total Payments</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Total Payments]</local-name>
            <parent-name>[Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv]</parent-name>
            <remote-alias>Average Total Payments</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Medicare Payments</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average Medicare Payments]</local-name>
            <parent-name>[Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv]</parent-name>
            <remote-alias>Average Medicare Payments</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_47147092333625362:qk]&quot;' value='Total Payment' />
          <alias key='&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Hospital covered charges (copy):qk]&quot;' value='Medicare Payment' />
        </aliases>
      </column>
      <column caption='Bin End Values other' datatype='string' name='[Bin End Values (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [CBINS (copy)] &lt; 200&#10;THEN&#10;STR([Capped Bins (copy)])+&apos;-&apos;+STR(INT([CBINS (copy)]+[Parameters].[VUMC Parameter]-1))&#10;ELSE&#10;STR([Capped Bins (copy)])&#10;END' />
      </column>
      <column aggregation='Sum' caption='CBINS other' datatype='real' name='[CBINS (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT([Calculation1 (copy)]/[Parameters].[VUMC Parameter])*[Parameters].[VUMC Parameter]' />
      </column>
      <column caption='Other Hospital' datatype='integer' name='[Calculation1 (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Provider Name] == [Parameters].[Parameter 1]&#10;THEN [Total Discharges]&#10;END' />
      </column>
      <column caption='VUMC' datatype='integer' name='[Calculation_1187120747774832641]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Provider Name] == &apos;VANDERBILT UNIVERSITY MEDICAL CENTER&apos;&#10;THEN &#10;[Total Discharges]&#10;END' />
      </column>
      <column caption='Nashville Hospitals' datatype='string' name='[Calculation_1187120747796152328]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Provider City]==&apos;NASHVILLE&apos; AND&#10;[Provider State]==&apos;TN&apos;&#10;THEN [Provider Name]&#10;END' />
      </column>
      <column caption='Total Payment' datatype='real' name='[Calculation_1187120747802767369]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Provider State]: SUM([Average Total Payments]*[Total Discharges])}/({ FIXED [Provider State]: SUM([Total Discharges])})' />
      </column>
      <column aggregation='Sum' caption='CBINS' datatype='real' name='[Calculation_47147092239908864]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT([Calculation_1187120747774832641]/[Parameters].[VUMC Parameter])*[Parameters].[VUMC Parameter]' />
      </column>
      <column caption='Bin End Values' datatype='string' name='[Calculation_47147092241047553]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_47147092239908864] &lt; 200&#10;THEN&#10;STR([Calculation_47147092242702338])+&apos;-&apos;+STR(INT([Calculation_47147092239908864]+[Parameters].[VUMC Parameter]-1))&#10;ELSE&#10;STR([Calculation_47147092242702338])&#10;END' />
      </column>
      <column caption='Capped Bins' datatype='string' name='[Calculation_47147092242702338]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_47147092239908864] &lt; [Parameters].[Parameter 2]&#10;THEN STR([Calculation_47147092239908864])&#10;ELSE&#10;&apos;&gt;=&apos;+STR([Parameters].[Parameter 2])&#10;END' />
      </column>
      <column aggregation='Attribute' caption='Discharge of Selected Hospital' datatype='integer' name='[Calculation_47147092264488965]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ EXCLUDE [Provider Name] : SUM([zzzz (copy)]) }' />
      </column>
      <column caption='Difference from selected' datatype='integer' name='[Calculation_47147092264902662]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Total Discharges])-SUM([Calculation_47147092264488965])' />
      </column>
      <column caption='All payments' datatype='real' name='[Calculation_47147092290310154]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Average Total Payments]*[Total Discharges])' />
      </column>
      <column caption='Medicare payment/Total payment' datatype='real' default-format='p0.0%' name='[Calculation_47147092305801227]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Total Payment by State (copy)]/[Calculation_1187120747802767369]' />
      </column>
      <column caption='Rank Discharge' datatype='integer' name='[Calculation_47147092324999182]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='RANK(SUM([Total Discharges]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank to show' datatype='boolean' name='[Calculation_47147092327211024]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_47147092324999182] &lt;= [Parameters].[Parameter 4]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Hospital average total payment' datatype='real' name='[Calculation_47147092333625362]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Provider Name]: SUM([Average Total Payments]*[Total Discharges])}/({ FIXED [Provider Name]: SUM([Total Discharges])})' />
      </column>
      <column caption='All discharges' datatype='integer' name='[Calculation_47147092359307288]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Total Discharges])' />
      </column>
      <column caption='Color for bars' datatype='boolean' name='[Calculation_47147092374011929]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Provider Name] == [Parameters].[Parameter 1]&#10;then TRUE&#10;ELSE FALSE&#10;END' />
      </column>
      <column caption='Capped Bins other' datatype='string' name='[Capped Bins (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [CBINS (copy)] &lt; [Parameters].[Parameter 2]&#10;THEN STR([CBINS (copy)])&#10;ELSE&#10;&apos;&gt;=&apos;+STR([Parameters].[Parameter 2])&#10;END' />
      </column>
      <column caption='Hospital average medicare payment' datatype='real' name='[Hospital covered charges (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Provider Name]: SUM([Average Medicare Payments]*[Total Discharges])}/({ FIXED [Provider Name]: SUM([Total Discharges])})' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='VUMC type' datatype='real' name='[Other Hospital type (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 3] == &apos;Discharges&apos;&#10;THEN { FIXED [DRG Definition]: SUM([VUMC (copy)])}&#10;ELSE { FIXED [DRG Definition]:SUM([VUMC (copy)])}/{ FIXED [DRG Definition]: SUM([Total Discharges])}&#10;END' />
      </column>
      <column caption='City' datatype='string' name='[Provider City (copy)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Provider City]' />
      </column>
      <column datatype='string' name='[Provider City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Provider Id]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Provider Name]' role='dimension' type='nominal' />
      <column datatype='string' name='[Provider State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' default-format='*00000' name='[Provider Zip Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
      <column caption='Medicare Payment' datatype='real' name='[Total Payment by State (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Provider State]: SUM([Average Medicare Payments]*[Total Discharges])}/({ FIXED [Provider State]: SUM([Total Discharges])})' />
      </column>
      <column caption='VUMC Metric' datatype='real' name='[VUMC (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Provider Name] == &apos;VANDERBILT UNIVERSITY MEDICAL CENTER&apos; THEN&#10;IF [Parameters].[Parameter 3] == &apos;Medicare payment&apos;&#10;THEN [Average Medicare Payments]*[Total Discharges]&#10;ELSEIF [Parameters].[Parameter 3] == &apos;Discharges&apos;&#10;THEN [Total Discharges]&#10;ELSEIF [Parameters].[Parameter 3] == &apos;Total payment&apos;&#10;THEN [Average Total Payments]*[Total Discharges]&#10;END&#10;END' />
      </column>
      <column caption='Other Hospital Metric' datatype='real' name='[VUMC metric (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Provider Name] == [Parameters].[Parameter 1] THEN&#10;IF [Parameters].[Parameter 3] == &apos;Medicare payment&apos;&#10;THEN [Average Medicare Payments]*[Total Discharges]&#10;ELSEIF [Parameters].[Parameter 3] == &apos;Discharges&apos;&#10;THEN [Total Discharges]&#10;ELSEIF [Parameters].[Parameter 3] == &apos;Total payment&apos;&#10;THEN [Average Total Payments]*[Total Discharges]&#10;END&#10;END' />
      </column>
      <column caption='Other Hospital type' datatype='real' name='[VUMC type (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 3] == &apos;Discharges&apos;&#10;THEN { FIXED [DRG Definition]: SUM([VUMC metric (copy)])}&#10;ELSE { FIXED [DRG Definition]:SUM([VUMC metric (copy)])}/{ FIXED [DRG Definition]: SUM([Total Discharges])}&#10;END' />
      </column>
      <column caption='Selected Hospital' datatype='integer' name='[zzzz (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Provider Name] == [Parameters].[Parameter 1]&#10;THEN&#10;[Total Discharges]&#10;ELSE 0&#10;END' />
      </column>
      <column-instance column='[Calculation_1187120747802767369]' derivation='Attribute' name='[attr:Calculation_1187120747802767369:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_47147092305801227]' derivation='Attribute' name='[attr:Calculation_47147092305801227:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_47147092374011929]' derivation='None' name='[none:Calculation_47147092374011929:nk]' pivot='key' type='nominal' />
      <column-instance column='[Provider City]' derivation='None' name='[none:Provider City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Provider State]' derivation='None' name='[none:Provider State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_47147092305801227]' derivation='Sum' name='[sum:Calculation_47147092305801227:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_47147092333625362]' derivation='Sum' name='[sum:Calculation_47147092333625362:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hospital covered charges (copy)]' derivation='Sum' name='[sum:Hospital covered charges (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Discharges]' derivation='Sum' name='[sum:Total Discharges:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Payment by State (copy)]' derivation='Sum' name='[sum:Total Payment by State (copy):qk]' pivot='key' type='quantitative' />
      <group caption='Action (Provider City)' hidden='true' name='[Action (Provider City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Provider City]' />
        </groupfilter>
      </group>
      <group caption='Action (Provider State)' hidden='true' name='[Action (Provider State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Provider State]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Color for bars,Provider Name)' hidden='true' name='[Tooltip (Color for bars,Provider Name)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_47147092374011929]' />
          <groupfilter function='level-members' level='[Provider Name]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Provider Name)' hidden='true' name='[Tooltip (Provider Name)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Provider Name]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Provider Name,Provider State)' hidden='true' name='[Tooltip (Provider Name,Provider State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Provider Name]' />
          <groupfilter function='level-members' level='[Provider State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location'>
          <field>[Provider State]</field>
          <field>[Provider City]</field>
          <field>[Provider Zip Code]</field>
          <field>[Provider Street Address]</field>
        </drill-path>
        <drill-path name='Provider'>
          <field>[Provider Id]</field>
          <field>[Provider Name]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/yuzhang/Documents/My Tableau Repository/Datasources/Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/05/2019 02:26:08 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='197283' timestamp-start='2019-03-05 02:26:08.983' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>DRG Definition</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DRG Definition]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DRG Definition</remote-alias>
              <ordinal>0</ordinal>
              <family>Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Provider Id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Provider Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Provider Id</remote-alias>
              <ordinal>1</ordinal>
              <family>Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>633</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Provider Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Provider Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Provider Name</remote-alias>
              <ordinal>2</ordinal>
              <family>Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>625</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Provider Street Address</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Provider Street Address]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Provider Street Address</remote-alias>
              <ordinal>3</ordinal>
              <family>Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>633</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Provider City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Provider City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Provider City</remote-alias>
              <ordinal>4</ordinal>
              <family>Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>414</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Provider State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Provider State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Provider State</remote-alias>
              <ordinal>5</ordinal>
              <family>Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Provider Zip Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Provider Zip Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Provider Zip Code</remote-alias>
              <ordinal>6</ordinal>
              <family>Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>582</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hospital Referral Region (HRR) Description</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Hospital Referral Region (HRR) Description]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hospital Referral Region (HRR) Description</remote-alias>
              <ordinal>7</ordinal>
              <family>Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>132</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total Discharges</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total Discharges]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total Discharges</remote-alias>
              <ordinal>8</ordinal>
              <family>Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>124</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Covered Charges</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Covered Charges]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Covered Charges</remote-alias>
              <ordinal>9</ordinal>
              <family>Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>197283</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Total Payments</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Total Payments]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Total Payments</remote-alias>
              <ordinal>10</ordinal>
              <family>Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>197283</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Medicare Payments</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average Medicare Payments]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Medicare Payments</remote-alias>
              <ordinal>11</ordinal>
              <family>Medicare_Provider_Charge_Inpatient_DRGALL_FY2016.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>197283</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.365672' measure-ordering='alphabetic' measure-percentage='0.366915' parameter-percentage='0.267413' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Provider City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ADRIAN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ALMA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ANNISTON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ATLANTA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BANNING&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BAYONNE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BELTON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BIG STONE GAP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BOCA RATON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BRATTLEBORO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BROOKLYN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CAIRO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CARLSBAD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CHALMETTE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CHICO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CLERMONT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;COLUMBUS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CORONADO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CROWN POINT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DANBURY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DEMOREST&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DOUGLASVILLE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DYER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EDISON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ELKIN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ERWIN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FALLS CHURCH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FLEMINGTON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FORT MOHAVE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FREEPORT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GARDENA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GLEN ROSE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GRAND RAPIDS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GREER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HAMPTON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HAVRE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HIALEAH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HOLYOKE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HUNTINGTON PARK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JACKSON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JOLIET&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KENANSVILLE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KINSTON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LACONIA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LAPEER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LEESVILLE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LIMA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LONG BEACH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LULING&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MANHATTAN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MARQUETTE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MAYFIELD HEIGHTS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MEDINA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MIAMI LAKES&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MINNEAPOLIS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MONTEZUMA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MOUNT KISCO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NANTUCKET&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NEW CASTLE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NEWPORT NEWS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NORTHAMPTON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ODESSA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ORANGE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OXFORD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PAOLI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PEARLAND&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PICKENS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;POCAHONTAS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PORTLAND&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PROVIDENCE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RAYVILLE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RICHLANDS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ROCKLEDGE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ROXBORO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SAINT PAUL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SAN MATEO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SAULT SAINTE MARIE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SEMINOLE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SHIPROCK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SMYRNA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SOUTHAVEN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;STAMFORD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;STURGIS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SYLMAR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TAWAS CITY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TIFTON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TRINITY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;UNION CITY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VENICE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WAGONER&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WATERTOWN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WELLSVILLE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WEST PLAINS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WILKES BARRE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WISCONSIN RAPIDS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;YANKTON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ABBEVILLE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALBUQUERQUE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ANACORTES&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ARLINGTON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AYER&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BATH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BELCOURT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BETHESDA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BLUE RIDGE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BOWLING GREEN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BRISTOL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BURIEN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CANONSBURG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CASTRO VALLEY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CHESAPEAKE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CLAREMORE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;COEUR D&apos;ALENE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;COOS BAY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CRAWFORDSVILLE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CYPRESS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DEKALB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DICKSON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DUMAS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EASTLAND&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ELIZABETH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ENCINO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EVERGREEN PARK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FERGUS FALLS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FORREST CITY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FORT WORTH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GALENA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GIG HARBOR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GRAFTON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GREENEVILLE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GUYMON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HARRISBURG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HEMET&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HOBOKEN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HOWELL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;INVERNESS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JENA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KANE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KILMARNOCK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LA GRANGE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LAKELAND&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LAWRENCEVILLE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LEWISTON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LOCKPORT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LOVELAND&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MAGNOLIA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MARIANNA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MASON CITY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MCKINNEY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MESA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MILLEDGEVILLE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MODESTO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MORRISTOWN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MURRIETA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NEENAH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NEWARK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NORTH KANSAS CITY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OAK PARK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OMAHA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OSWEGO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PALMER&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PASADENA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PETERSBURG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PLAINSBORO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PORT HURON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PRESCOTT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RACINE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RESTON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ROARING SPRING&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ROOSEVELT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SAINT AUGUSTINE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SAN DIEGO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SANTA CRUZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SEBASTOPOL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SHELBY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SIMPSONVILLE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SOUTH HAVEN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SPRINGDALE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;STEVENS POINT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SUN CITY WEST&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TAMPA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;THIBODAUX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TOWANDA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TUSCALOOSA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VALLEJO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;VINELAND&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WARRENSVILLE HEIGHTS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WAYNESBURG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WEST GROVE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WHITE PLAINS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WINDBER&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WORTHINGTON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ABINGTON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALICE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ANDERSON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ASHEVILLE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BAKERSFIELD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BAY CITY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BELLEVILLE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BEVERLY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BLYTHE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BRADFORD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BRONX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BURNSVILLE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CAPE MAY COURT HOUSE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CEDAR RAPIDS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CHEVERLY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CLAXTON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;COLORADO SPRINGS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CORDELE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CRISFIELD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DAKOTA DUNES&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DELAWARE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DONALSONVILLE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DUNN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EDEN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ELK CITY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ENTERPRISE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FAIRFIELD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FISHERSVILLE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FORT DODGE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FRANKLIN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GALLUP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GLASGOW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GRAND FORKS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GREENSBURG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HALEYVILLE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HARTSVILLE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HEREFORD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HOLLISTER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HUNTERSVILLE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IRVING&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JESUP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KAUFMAN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;KINGSPORT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LA PALMA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LANGHORNE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LEAWOOD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LIBERAL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LOMA LINDA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LUBBOCK&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MANAHAWKIN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MARION&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MATTOON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MEADVILLE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MEXIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MILWAUKIE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MONTCLAIR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MOUNDRIDGE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MUSKOGEE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NEW BERN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NEWBURYPORT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NORTH PLATTE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OCALA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ONTARIO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OWASSO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PANAMA CITY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PATERSON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PHILLIPSBURG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PLANTATION&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PORT SAINT LUCIE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PRICE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RANCHO MIRAGE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RICE LAKE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ROCK HILL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ROSLYN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAINT JOSEPH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAN JOSE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SANTA ROSA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SEGUIN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SHERMAN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SLIDELL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SOUTH SAN FRANCISCO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ST GEORGE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;STOCKTON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SUPPLY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TARPON SPRINGS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;THORNTON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TRANSFER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TYLER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VAN NUYS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VISALIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WASHINGTON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WEIRTON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WEST ISLIP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WHITTIER&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WINNSBORO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WYOMISSING&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AKRON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ALTUS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;APACHE JUNCTION&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ATTLEBORO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BARRINGTON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BEAUMONT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BENSALEM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BIRMINGHAM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BOLIVAR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BREMERTON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BROWNSVILLE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CAMBRIDGE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CARROLL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CHARDON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CHINO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CLINTON TOWNSHIP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CONNELLSVILLE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CORTLANDT MANOR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CUERO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DAVENPORT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DENVILLE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DOYLESTOWN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EASLEY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EL CAMPO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ELLSWORTH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EUFAULA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FARIBAULT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FLOWER MOUND&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FORT PIERCE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FRIDLEY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GARY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GLENS FALLS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GRASS VALLEY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GRINNELL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HANOVER&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HAYMARKET&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HILLSBORO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HONOLULU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IDABEL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JAMESTOWN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JOURDANTON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KENNETT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KITTANNING&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LAKE CHARLES&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LAS CRUCES&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LENEXA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LITHONIA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LORAIN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LYNWOOD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MANNING&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MARSHFIELD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MC KENZIE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MEMPHIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MIDDLEBURG HEIGHTS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MISHAWAKA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MOORESVILLE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MOUNTAIN HOME&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NASHUA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NEW LENOX&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NO LITTLE ROCK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NORWALK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OKLAHOMA CITY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OREGON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PAINTSVILLE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PARAMUS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PEMBROKE PINES&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PINE RIDGE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;POMPANO BEACH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;POTSDAM&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PULASKI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RED WING&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RIO GRANDE CITY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ROCKWALL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RUSTON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SALINA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SAN TAN VALLEY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SCOTTSBLUFF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SEWICKLEY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SIERRA VISTA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SOMERSET&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SPARKS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;STATEN ISLAND&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SUGAR LAND&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TACOMA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TEMECULA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TOMBALL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TUBA CITY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;URBANA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VERO BEACH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WALLA WALLA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WATSONVILLE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WEST ALLIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WESTFIELD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WILLIAMSPORT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WOODLAND HILLS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;YPSILANTI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AHOSKIE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ALPENA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ANSON&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ATLANTIC CITY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BARABOO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BAYTOWN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BEMIDJI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BILLINGS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BOGALUSA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BRAWLEY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BROOKSVILLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CALDWELL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CARMEL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CHAMBERSBURG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CHILDRESS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CLEVELAND&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;COMMERCE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CORPUS CHRISTI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CROWNPOINT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DANSVILLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DENISON&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DOVER&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DYERSBURG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EDMOND&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ELKINS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ESCONDIDO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FALMOUTH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FLINT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FORT MORGAN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FREMONT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GARDNER&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GLENDALE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GRANITE CITY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GRENADA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HANCOCK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HAVRE DE GRACE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HIBBING&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HOMER&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HUNTSVILLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JACKSONVILLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JONESBORO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KENDALLVILLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KIRKLAND&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LAFAYETTE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LARAMIE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LEHIGH ACRES&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LINCOLN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LONG BRANCH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LUMBERTON&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MANISTEE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MARRERO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MAYSVILLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MELBOURNE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MIAMISBURG&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MINOT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MONTGOMERY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MOUNT PLEASANT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NAPA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NEW HAVEN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NEWTON&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NORTHFIELD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OGDEN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ORANGE CITY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;OXNARD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PAPILLION&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PEARSALL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PIERRE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;POCATELLO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PORTSMOUTH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PROVO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;READING&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RICHMOND&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ROCKPORT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ROYAL OAK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SAINT PETERS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SAN PEDRO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SAVANNAH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SENATOBIA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SHOW LOW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SNELLVILLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SOUTHBRIDGE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;STANFORD&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;STUTTGART&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SYLVA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TAYLOR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TITUSVILLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TROPHY CLUB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UNION SPRINGS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VENTURA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WAHIAWA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WATERVILLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WENATCHEE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WEST POINT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WILKES-BARRE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WOODBRIDGE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;YONKERS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ADA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALLEN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ANDOVER&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ASHLAND&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BALDWIN PARK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BAY MINETTE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BELLEVUE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BIDDEFORD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BLYTHEVILLE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BRAINERD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BRONXVILLE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BUTLER&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CARBONDALE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CENTRALIA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CHEYENNE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CLEARFIELD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;COLTON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CORINTH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CROCKETT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DALLAS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DELRAY BEACH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DONIPHAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DURANGO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EDGEWOOD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ELK GROVE VILLAGE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EPHRATA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FAIRHOPE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FITZGERALD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FORT KENT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FREDERICK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GALVESTON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GLEN BURNIE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GRAND HAVEN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GREENVILLE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HAMILTON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HARVEY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HERMITAGE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HOLLY SPRINGS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HUNTINGDON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ISSAQUAH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JOHNS CREEK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KEALAKEKUA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KINGSTON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LA PLATA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LANHAM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LEBANON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LIBERTY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LOMPOC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LUCEDALE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MANASSAS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MARKSVILLE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MAUMEE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MECHANICSVILLE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MEXICO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MINDEN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MONTEBELLO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MOUNT AIRY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MYRTLE BEACH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NEW BRAUNFELS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NEWNAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NORTH PROVIDENCE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;OCEANSIDE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;OPELIKA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;OWATONNA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PANGUITCH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PAULS VALLEY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PHOENIX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PLATTSBURGH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PORTAGE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PRINCE FREDERICK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RANDALLSTOWN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RICHARDSON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ROCK ISLAND&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ROSWELL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SAINT LOUIS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SAN LEANDRO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SARANAC LAKE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SELLERSVILLE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SHERMAN OAKS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SMITHFIELD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SOUTH WEYMOUTH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ST JOSEPH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;STONY BROOK&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SWAINSBORO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TARZANA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;THOUSAND OAKS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TRAVERSE CITY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UKIAH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VAN WERT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W CONCORD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WATER VALLEY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WELCH&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WEST JORDAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WICHITA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WINONA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WYTHEVILLE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ALBEMARLE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AMORY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ARDMORE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AVENTURA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BATAVIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BEEVILLE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BESSEMER&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BLOOMSBURG&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BOULDER&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BRIGHAM CITY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BULLHEAD CITY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CANANDAIGUA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CASPER&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CHELSEA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CLACKAMAS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COBLESKILL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COON RAPIDS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;COVINA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CUYAHOGA FALLS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DEFIANCE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DETROIT LAKES&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DULLES&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EAST ORANGE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ELDRIDGE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EMPORIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EVERETT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FEDERAL WAY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FONTANA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FORT WASHINGTON&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GAINESVILLE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GERMANTOWN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GOODYEAR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GREEN VALLEY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GULF BREEZE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HARRIMAN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HAZLETON&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HOBART&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HOUMA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;INDIO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JEFFERSONVILLE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KALISPELL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KEY WEST&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LA CROSSE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LAKE SAINT LOUIS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LAWRENCE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LEWES&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LLANO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LOUISA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MADISONVILLE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MARBLE FALLS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MARYSVILLE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MCHENRY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MERIDEN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MILAN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MOBERLY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MORGANTOWN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MURRAY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NATRONA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NEW SMYRNA BEACH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NORRISTOWN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OAK GROVE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OLYMPIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OSAGE BEACH&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PALM SPRINGS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PARMA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PERU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PLACENTIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PORT ARTHUR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PRATT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;QUAKERTOWN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RENO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ROANOKE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ROME&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SAGINAW&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SAN ANTONIO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SANTA BARBARA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SEATTLE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SHEBOYGAN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SILVIS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SOUTH CHARLESTON&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SPOKANE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;STERLING&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SUN CITY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TALLASSEE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;THE VILLAGES&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TORRANCE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TUPELO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VALENCIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VILLE PLATTE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WARREN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WAYNE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WEST COLUMBIA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WHEAT RIDGE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WILSON&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WOOSTER&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ZEELAND&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ABERDEEN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALEXANDER CITY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ANAHEIM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ARLINGTON HEIGHTS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AZLE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BATON ROUGE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BELLAIRE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BETHLEHEM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BLUE SPRINGS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BOYNTON BEACH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BRISTOW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BURLESON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CANTON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CEDAR CITY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CHESTER&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CLARION&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;COFFEYVILLE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CORAL GABLES&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CRESCENT CITY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DADE CITY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DEL RIO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DILLON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DUNCAN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EASTMAN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ELIZABETH CITY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ENGLEWOOD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EXETER&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FERNANDINA BEACH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FORT ATKINSON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FOUNTAIN VALLEY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GALESBURG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GILBERT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GRAHAM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GREENFIELD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HACKENSACK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HARRISON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HENDERSON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HOFFMAN ESTATES&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HUDSON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IOWA CITY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JENNINGS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KANKAKEE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KING CITY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LA JOLLA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LAKEWAY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LAWTON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LEWISTOWN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LODI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LOW MOOR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MALONE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MARIETTA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MASSENA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MCMINNVILLE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MESQUITE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MILLERSBURG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MONONGAHELA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MOSES LAKE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MUSCATINE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NEPTUNE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NEWBERG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NORTH LAS VEGAS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OAK RIDGE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ONANCOCK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OTTAWA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PALMERTON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PASCAGOULA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PETOSKEY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PLAINVIEW&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PORT JEFFERSON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PRESCOTT VALLEY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RAEFORD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;REXBURG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ROBBINSDALE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ROSEBUD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SAINT CHARLES&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SAN DIMAS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SANTA FE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SEBRING&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SHELBYVILLE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SIOUX CITY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SOUTH HILL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SPRINGFIELD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;STILLWATER&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SUN VALLEY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TAOS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;THOMASTON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TOWN AND COUNTRY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TUSTIN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VALLEY STREAM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VINITA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WARRENTON&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WEATHERFORD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WEST HARTFORD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WHITERIVER&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WINDER&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WYANDOTTE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ALAMOSA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AMERICUS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ARCADIA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AUSTELL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BARTOW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BECKLEY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BERWICK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BLAIRSVILLE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BOSSIER CITY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BRIDGEPORT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BRYN MAWR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAMPBELLSVILLE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CARTHAGE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CHATSWORTH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CINCINNATI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COALINGA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CONYERS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COTTONWOOD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CUMMING&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DEARBORN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DES MOINES&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DUBOIS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EAST MEADOW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EL RENO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ELMIRA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EVANSTON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FAYETTE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FOLSOM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FORT THOMAS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GADSDEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GEORGETOWN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GOLDSBORO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GREELEY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GROVE HILL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HARLAN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HAZARD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HINSDALE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HORNELL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;INDIANAPOLIS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JEFFERSON CITY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KAILUA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KERRVILLE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KOKOMO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LAKE JACKSON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LAURINBURG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LEONARDTOWN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LIVINGSTON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LOS ANGELES&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MADERA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MAPLE GROVE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MARTINSBURG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MCALLEN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MEQUON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MIDLOTHIAN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MISSOULA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MORGAN CITY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MUNSTER&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NATCHITOCHES&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NEW PORT RICHEY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NORMAL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NYACK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OLIVE BRANCH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ORO VALLEY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PALM BEACH GARDENS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PARKER&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PERRY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PITTSBURGH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;POPLAR BLUFF&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;POWAY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PUTNAM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;REDWOOD CITY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RIVERSIDE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ROLLA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SAFETY HARBOR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SALT LAKE CITY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SANFORD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SEAFORD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SHAWNEE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SILVER SPRING&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SOUTH BEND&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SPENCER&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;STEAMBOAT SPRINGS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SUMMIT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TALLADEGA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TEXARKANA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TOPEKA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TULSA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VAIL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VIDALIA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WARE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WAXAHACHIE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WEST BURLINGTON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WESTWOOD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WILLMAR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WOODWARD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ZACHARY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ADDISON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ALLENTOWN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ANN ARBOR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ASHTABULA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BALTIMORE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BAY SAINT LOUIS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BELLINGHAM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BIG RAPIDS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BOARDMAN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BRANDON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BROOKHAVEN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BUTTE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CARIBOU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CENTRE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CHICAGO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CLEARWATER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;COLUMBIA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CORNING&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CROSSVILLE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DALTON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DELTA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DOTHAN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DURANT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EDINA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ELKHART&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ERIE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FAIRMONT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FLAGSTAFF&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FORT LAUDERDALE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FREDERICKSBURG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GARDEN CITY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GLEN COVE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GRAND ISLAND&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GREENWICH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HAMLET&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HASTINGS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HERRIN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HOLLYWOOD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HUNTINGTON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ITHACA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JOHNSON CITY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KEARNEY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KINGSVILLE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LA PORTE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LANSDALE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LEES SUMMIT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LIBERTYVILLE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LONDON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LUDINGTON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MANCHESTER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MARLBOROUGH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MAUSTON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MEDFORD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MIAMI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MINEOLA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MONTEREY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MOUNT CLEMENS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NACOGDOCHES&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NEW BRITAIN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NEWPORT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NORTH RICHLAND HILLS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;OCOEE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;OPELOUSAS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;OWENSBORO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PANORAMA CITY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PAWTUCKET&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PHOENIXVILLE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PLEASANTON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PORTALES&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PRINCETON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RAPID CITY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RICHFIELD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ROCK SPRINGS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ROUND ROCK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SAINT LOUIS PARK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SAN LUIS OBISPO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SARASOTA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SELMA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SHERWOOD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SMITHTOWN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SOUTH WILLIAMSON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;STAFFORD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;STRATFORD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SWEETWATER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TAUNTON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;THREE RIVERS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TREMONTON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ULYSSES&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VANCOUVER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WACO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WATERBURY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WELLINGTON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WEST MONROE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WICHITA FALLS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WINSTON-SALEM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;XENIA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ALABASTER&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ALVA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;APPLE VALLEY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AUBURN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BARSTOW&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BEAVER&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BENTON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BISMARCK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BOONE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BRENHAM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BROWNWOOD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CAMDEN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CARROLLTON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CHARLESTON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CHIPPEWA FALLS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CLOVIS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CONNERSVILLE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CORVALLIS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CULLMAN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DAVIS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DERBY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DRAPER&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EAST CHICAGO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EL CENTRO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ELLWOOD CITY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EUGENE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FARMINGTON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FLOWOOD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FORT SCOTT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FRISCO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GASTONIA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GLENWOOD SPRINGS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GRAYLING&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GROSSE POINTE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HARBOR CITY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HAYS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HILLSDALE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HOPE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IDAHO FALLS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JANESVILLE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JUNCTION CITY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KENNEWICK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KLAMATH FALLS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LAKE CITY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LAS VEGAS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LENOIR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LITITZ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LORIS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MACCLENNY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MANSFIELD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MARTIN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MC KINNEY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MENA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MIDDLESBORO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MISSION&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MOREHEAD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MOUNTAIN VIEW&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NASHVILLE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NEW LONDON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NOBLESVILLE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NORWICH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OKMULGEE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OREGON CITY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PALATKA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PARIS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PENNINGTON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PINEHURST&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;POMPTON PLAINS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;POTTSTOWN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PUNTA GORDA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;REDDING&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RIO RANCHO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ROCKY MOUNT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RUTHERFORDTON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SALINAS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SANDERSVILLE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SCOTTSBORO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SEYMOUR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SIKESTON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SOMERVILLE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SPARTA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;STATESBORO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SULPHUR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TAHLEQUAH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TEMPLE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TOMPKINSVILLE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TUCSON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UTICA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VICKSBURG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WALLINGFORD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WAUKEGAN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WEST BEND&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WESTLAKE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WILLIAMSTON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WOODRUFF&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;YUBA CITY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ALAMEDA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AMARILLO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;APPLETON&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AUGUSTA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BARTLESVILLE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BEAVER CREEK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BERKELEY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BLACKSBURG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BOONEVILLE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BREWTON&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BRUNSWICK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CAMERON&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CARSON CITY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CHARLOTTE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CHRISTIANSBURG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CLYDE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CONROE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;COSHOCTON&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CULPEPER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DAYTON&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DERIDDER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DREXEL HILL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EAST CHINA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EL DORADO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ELMER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EUPORA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FARMINGTON HILLS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FLUSHING&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FORT SMITH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FRONT ROYAL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GAYLORD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GLOUCESTER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GREAT BEND&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GROVE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HARDEEVILLE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HAYTI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HILO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HOPEWELL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;INDEPENDENCE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JASPER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JUNEAU&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KENOSHA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KNOX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LAKE FOREST&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LATROBE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LENOIR CITY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LITTLE ROCK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LOS ALAMITOS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MACOMB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MANTECA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MARTINEZ&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MC MINNVILLE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MENLO PARK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MIDDLETOWN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MISSION HILLS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MOREHEAD CITY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MULLINS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NASSAU BAY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NEW MARTINSVILLE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NOCONA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NORWOOD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OLATHE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OREM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PALESTINE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PARK CITY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PENSACOLA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PINEVILLE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PONCA CITY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;POTTSVILLE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PUNXSUTAWNEY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;REDLANDS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RIVERDALE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ROGERS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RUTLAND&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SALISBURY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SANDUSKY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SCOTTSDALE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SHAKOPEE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SILOAM SPRINGS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SONOMA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SPARTANBURG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;STATESVILLE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SULPHUR SPRINGS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TAKOMA PARK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TEMPLETON&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TOMS RIVER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TULARE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UVALDE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VICTORIA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WALNUT CREEK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WAUKESHA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WEST BLOOMFIELD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WESTMINSTER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WILLIMANTIC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WOODSTOCK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;YUKON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ALBANY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AMES&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ARCATA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AUSTIN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BASTROP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BEDFORD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BERWYN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BLOOMINGTON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BOSTON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BRIDGETON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BUFFALO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CANADIAN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CARY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CHATTANOOGA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CIRCLEVILLE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COATESVILLE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COOKEVILLE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;COUNCIL BLUFFS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CUSHING&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DECATUR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DETROIT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DUBUQUE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EAST NORRITON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ELBERTON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ELYRIA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EVANSVILLE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FAYETTEVILLE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FOND DU LAC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FORT WALTON BEACH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GAFFNEY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GEORGIANA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GONZALES&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GREEN BAY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GRUNDY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HARLINGEN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HAZEL CREST&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HIRAM&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HOT SPRINGS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;INDIANOLA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JEFFERSON HILLS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KALAMAZOO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KETTERING&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KYLE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LAKE PROVIDENCE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LAVONIA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LEVELLAND&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LIVONIA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LOS BANOS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MADISON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MAPLEWOOD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MARTINSVILLE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MCCOMB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MERCED&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MIDWEST CITY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MITCHELL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MORGANTON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MURFREESBORO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NATIONAL CITY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NEW ROCHELLE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NORMAN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;O FALLON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OLNEY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OROVILLE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PALM COAST&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PARKERSBURG&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PERTH AMBOY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PITTSFIELD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PORT ANGELES&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PRAIRIE DU SAC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PUYALLUP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;REEDLEY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RIVERTON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ROLLING FORK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SAFFORD&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SAN ANGELO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SANTA ANA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SEARCY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SHAWNEE MISSION&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SILVERTON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SOUTH BOSTON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SPIRIT LAKE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;STEPHENVILLE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SUMTER&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TALLAHASSEE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;THE DALLES&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TOPPENISH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TUNKHANNOCK&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VALDOSTA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VILLA RICA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WARNER ROBINS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WAYCROSS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WEST CHESTER&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WETUMPKA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WILMINGTON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WOONSOCKET&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ZANESVILLE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ALBERT LEA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AMSTERDAM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ARKANSAS CITY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AVON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BATESVILLE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BEL AIR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BETHEL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BLUE ISLAND&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BOUNTIFUL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BRIGHTON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BURBANK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CANON CITY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CASTLE ROCK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CHERAW&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CLARE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COCOA BEACH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COOPERSTOWN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;COVINGTON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CYNTHIANA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DEFUNIAK SPRINGS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DEXTER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DULUTH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EAST STROUDSBURG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ELGIN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ENCINITAS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EVERGREEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FENTON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FOREST HILLS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FORT WAYNE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GALAX&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GETTYSBURG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GOSHEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GREENBRAE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GULFPORT&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HARRIS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HELENA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HOBBS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HOUSTON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;INGLEWOOD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JELLICO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KAMUELA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KILLEEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LA FOLLETTE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LAKE WALES&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LAWRENCEBURG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LEWISBURG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LOCK HAVEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LOUISVILLE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MAGEE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MARGATE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MARYVILLE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MCKEES ROCKS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MERIDIAN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MILFORD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MOBILE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MORRIS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MURRELLS INLET&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NEEDHAM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NEW YORK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NORTH BERGEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OAK LAWN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OLYMPIA FIELDS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OSHKOSH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PALMDALE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PARSONS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PETALUMA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PLACERVILLE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PORT CHARLOTTE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PRATTVILLE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;QUINCY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RENTON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ROANOKE RAPIDS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RONCEVERTE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SAINT ALBANS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SAN BERNARDINO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SANTA CLARA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SEBASTIAN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SHEFFIELD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SIMI VALLEY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SOUTH EL MONTE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SPRING VALLEY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;STEUBENVILLE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SUN CITY CENTER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TAMARAC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;THE WOODLANDS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TORRINGTON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TURLOCK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VALHALLA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VINCENNES&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WARRENSBURG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WAYNESBORO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WEST COVINA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WHEELING&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WINCHESTER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WORCESTER&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ZEPHYRHILLS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AIEA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ALTON&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ANTIOCH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ATLANTIS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BARDSTOWN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BEACHWOOD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BEND&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BILOXI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BOISE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BRECKENRIDGE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BROWNFIELD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CALHOUN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CARMICHAEL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CHANDLER&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CHILLICOTHE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CLIFTON SPRINGS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;COMMERCE TOWNSHIP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CORSICANA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CRYSTAL CITY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DANVILLE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DENTON&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DOWNERS GROVE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EAGLE PASS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EDMONDS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ELKO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ESPANOLA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FAR ROCKAWAY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FLORENCE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FORT MYERS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FRENCH CAMP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GARFIELD HEIGHTS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GLENDALE HEIGHTS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GRANTS PASS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GRESHAM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HANFORD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HAWAIIAN GARDENS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HICKORY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HOMESTEAD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HUTCHINSON&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JACKSONVILLE BEACH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JOPLIN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KENMORE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KIRKSVILLE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LAGRANGE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LAREDO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LEHIGHTON&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LINCOLNTON&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LONGMONT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LUVERNE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MANITOWOC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MARSHALL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MAYWOOD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MELROSE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MICHIGAN CITY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MIRAMAR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MONTICELLO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MOUNT STERLING&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NAPERVILLE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NEW HYDE PARK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NIAGARA FALLS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NORTHRIDGE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OGDENSBURG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ORANGE PARK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OZARK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PARADISE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PEKIN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PIKEVILLE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;POINT PLEASANT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;POST FALLS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PRYOR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RED BANK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RICHMOND HEIGHTS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ROCKVILLE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ROYERSFORD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SAINT PETERSBURG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SAN RAFAEL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SAYRE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SENECA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SHREVEPORT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SOLDOTNA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SOUTHFIELD&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;STARKVILLE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SUFFERN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SYLVANIA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TAZEWELL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TOCCOA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TROY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;UNIONTOWN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VERNAL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WAILUKU&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WATERVLIET&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WESLACO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WESTERLY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WILLIAMSBURG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WOODBURY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;YORK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ADEL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ALLIANCE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ANNAPOLIS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ATHENS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BANGOR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BAY SHORE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BELOIT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BIG SPRING&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BOAZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BRANSON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BROOKINGS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CADILLAC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CARLISLE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CENTREVILLE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CHICKASHA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CLEBURNE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;COLUMBIA CITY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CORONA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CROWLEY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DALY CITY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DEMOPOLIS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DOUGLAS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DURHAM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EDINBURG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ELKHORN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ERIN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FALL RIVER&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FLEMINGSBURG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FORT MADISON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FREEHOLD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GARDEN GROVE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GLEN DALE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GRAND JUNCTION&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GREENWOOD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HAMMOND&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HATTIESBURG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HERSHEY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HOLMDEL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HUNTINGTON BEACH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IUKA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JOHNSTOWN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KEENE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KINGWOOD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LACOMBE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LANSING&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LEESBURG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LIHUE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LONE TREE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LUFKIN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MANHASSET&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MARLIN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MAYFIELD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MEDIA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MIAMI BEACH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MINERAL WELLS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MONTEREY PARK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MOUNT HOLLY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NAMPA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NEW BRUNSWICK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NEWPORT BEACH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NORTH WILKESBORO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OCONOMOWOC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OPP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OWOSSO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PAOLA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PAYSON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PICAYUNE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PLYMOUTH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PORTERVILLE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PROCTORVILLE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RAVENNA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RICHLAND&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ROCKFORD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ROWLETT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SAINT MARYS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SAN MARCOS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SARATOGA SPRINGS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SELMER&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SHILOH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SMITHVILLE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SOUTHAMPTON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;STAFFORD SPRINGS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;STUART&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SYLACAUGA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TAVARES&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TIFFIN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TRENTON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UNION&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VARNVILLE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WACONIA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WATERLOO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WELLSBORO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WEST PALM BEACH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WILBURTON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WINTER HAVEN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;YAKIMA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ABILENE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ALEXANDRIA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ANCHORAGE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ARTESIA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BAD AXE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BATTLE CREEK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BELLE GLADE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BETHPAGE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BLUEFIELD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BOZEMAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BROCKTON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BURLINGAME&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CAPE CORAL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CEDAR FALLS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CHESTERFIELD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CLARKSDALE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;COLDWATER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CORAL SPRINGS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CRESTVIEW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DADEVILLE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DELAND&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DIXON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DUNEDIN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EASTON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ELIZABETHTON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ENID&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FAIRBANKS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FINDLAY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FORT COLLINS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FRAMINGHAM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GALLATIN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GILLETTE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GRANBURY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GREENPORT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HACKETTSTOWN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HARRISONBURG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HENDERSONVILLE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HOLLAND&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HUGO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IRON MOUNTAIN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JERSEY CITY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KANSAS CITY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KINGMAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LA JUNTA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LAKEWOOD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LAYTON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LEWISVILLE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LOGAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LOWELL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MALVERN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MARINA DEL REY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MASSILLON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MCPHERSON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;METAIRIE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MILTON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MONROE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MOULTON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MUSCLE SHOALS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NEVADA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NEWBERRY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NORTH LITTLE ROCK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OAKDALE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ONEIDA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OTTUMWA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PALOS HEIGHTS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PASSAIC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PHENIX CITY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PLANO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PORT JERVIS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PRESQUE ISLE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RAHWAY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RHINEBECK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ROCHESTER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ROSEBURG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SAINT CLOUD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SAN FRANCISCO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SANTA MARIA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SECAUCUS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SHENANDOAH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SIOUX FALLS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SOUTH LAKE TAHOE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SPRINGHILL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;STILWELL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SUNBURY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TAPPAHANNOCK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;THOMASVILLE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TOWSON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TWIN FALLS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VALPARAISO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VIRGINIA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WARSAW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WEBSTER&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WEST HAVERSTRAW&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WHITESBURG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WINFIELD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WYNNEWOOD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ALAMOGORDO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AMERICAN FORK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ARANSAS PASS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AURORA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BARTLETT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BEAVER DAM&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BERLIN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BLACKWELL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BOONVILLE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BRICK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BRYAN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CAMP HILL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CARTERSVILLE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHARLOTTESVILLE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHULA VISTA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;COALDALE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CONWAY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;COSTA MESA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CUMBERLAND&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DAYTONA BEACH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DERRY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DUBLIN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EAST LIVERPOOL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EL PASO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ELMHURST&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EUREKA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FARMVILLE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FOLEY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FORT STOCKTON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FULLERTON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GENEVA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GLOVERSVILLE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GREAT FALLS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GROVE CITY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HARKER HEIGHTS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HAYWARD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HILTON HEAD ISLAND&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HOPKINSVILLE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;INDIANA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JAY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JUPITER&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KEOKUK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KNOXVILLE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LAKE HAVASU CITY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LAUREL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LEOMINSTER&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LITTLETON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LOS ALAMOS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MACON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MANY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MARTINS FERRY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MCALESTER&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MENOMONEE FALLS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MIDLAND&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MISSION VIEJO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MORENO VALLEY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MUNCIE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NATCHEZ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NEW ORLEANS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NORFOLK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NOVATO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OLEAN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ORLANDO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PALM BAY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PARK RIDGE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PEORIA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PITTSBURG&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PONTIAC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;POUGHKEEPSIE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PURCELL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;REDMOND&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RIVERHEAD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ROGERSVILLE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SACRAMENTO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SALLISAW&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SANDY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SCRANTON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SHARON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SILVER CITY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SONORA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SPEARFISH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;STAYTON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SUMMERSVILLE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TALIHINA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TERRE HAUTE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TOOELE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TULLAHOMA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VACAVILLE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VICTORVILLE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WALTERBORO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WAUSAU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WEST BRANCH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WESTON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WILLINGBORO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WOODVILLE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;YUMA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AIKEN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ALTOONA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ANTLERS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ATMORE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BARRE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BEAUFORT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BENNINGTON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BINGHAMTON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BOLINGBROOK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BREESE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BROWNS MILLS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CAMARILLO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CARRIZO SPRINGS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CHAPEL HILL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CHINLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CLINTON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CONCORD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CORTLAND&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CRYSTAL RIVER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DARBY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DENVER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DOWNEY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EAGLEVILLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EFFINGHAM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ELKTON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EUCLID&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FARGO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FLORESVILLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FORT PAYNE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FRESNO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GARLAND&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GLENDORA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GRAPEVINE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GRIFFIN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HANNIBAL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HAWKINSVILLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HIGH POINT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HONESDALE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HYANNIS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JAMAICA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JOSHUA TREE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KENNER&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KISSIMMEE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LAGUNA HILLS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LARGO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LEITCHFIELD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LINDEN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LONGVIEW&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LYNCHBURG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MANKATO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MARSHALLTOWN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MC KEESPORT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MELROSE PARK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MIDDLEBURG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MIRAMAR BEACH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MONTROSE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MOUNT VERNON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NAPLES&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NEW IBERIA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NICEVILLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NORTON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OKEECHOBEE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ORANGEBURG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PADUCAH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PARAGOULD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PELL CITY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PINE BLUFF&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;POMONA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;POTEAU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PUEBLO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RED BLUFF&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RIDGEWOOD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ROCKVILLE CENTRE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RUSSELLVILLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SALEM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SAN RAMON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SCHENECTADY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SEVIERVILLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SIDNEY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SOMERS POINT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SOUTHLAKE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;STATE COLLEGE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SUFFOLK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SYRACUSE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TEANECK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TOLEDO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TUALATIN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;UPLAND&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VERNON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WAKEFIELD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WATSEKA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WESLEY CHAPEL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WESTERVILLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WILLIAMSON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WOODLAND&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;YOUNGSTOWN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ABINGDON&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ALHAMBRA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ANDALUSIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ASHEBORO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BAINBRIDGE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BAXLEY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BELLEFONTAINE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BETTENDORF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BLUFFTON&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BRADENTON&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BROKEN ARROW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BURLINGTON&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CAPE GIRARDEAU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CEDAR PARK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CHESTERTOWN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CLARKSVILLE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;COLLEGE STATION&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CORBIN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CREVE COEUR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DAHLONEGA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DELANO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DODGE CITY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DUNKIRK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EAU CLAIRE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ELIZABETHTOWN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ENNIS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FAIRFAX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FISHERS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FORT DEFIANCE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FRANKFORT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GALLIPOLIS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GILROY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GRAND BLANC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GREENSBORO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HAGERSTOWN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HARTFORD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HENRYETTA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HOLLIS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HUMBLE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IRVINE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JERSEYVILLE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KATY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KINGS MOUNTAIN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LA MESA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LANCASTER&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LEAVENWORTH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LEXINGTON&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LOGANSPORT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LOXAHATCHEE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MAMOU&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MARINETTE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MATTHEWS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MEADOWBROOK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;METHUEN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MILWAUKEE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MONROEVILLE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MOULTRIE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MUSKEGON&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NEW ALBANY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NEWBURGH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NORTH LOGAN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OAKLAND&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ONEONTA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OVERLAND PARK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PAMPA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PATCHOGUE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PHILADELPHIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PLANT CITY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PORT SAINT JOE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PRESTONSBURG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RALEIGH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RHINELANDER&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ROCK CREEK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ROSEVILLE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SAINT HELENA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SAN GABRIEL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SANTA MONICA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SEDALIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SHERIDAN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SLEEPY HOLLOW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SOUTH MIAMI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SPRINGVILLE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;STOCKBRIDGE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SUNNYVALE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TARBORO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;THOMSON&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TRACY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TWO RIVERS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VAN BUREN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VIRGINIA BEACH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WARWICK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WEDOWEE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WEST HILLS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WHITEVILLE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WINNFIELD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WYOMING&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Provider State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_47147092305801227:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_47147092305801227:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Hospital covered charges (copy):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Payment by State (copy):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_47147092333625362:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_47147092374011929:nk]' type='palette'>
            <map to='#5c6068'>
              <bucket>true</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Nashville Hospital Names' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;'>
          <calculation class='tableau' formula='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;' />
        </column>
        <column caption='Upper Limit' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='200.0'>
          <calculation class='tableau' formula='200.0' />
        </column>
        <column caption='Stats Type' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Discharges&quot;'>
          <calculation class='tableau' formula='&quot;Discharges&quot;' />
        </column>
        <column caption='Top N Hospital' datatype='integer' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
        <column caption='Bin Size' datatype='real' name='[VUMC Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
          <calculation class='tableau' formula='10.0' />
          <range granularity='5.0' min='0.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Link to CMS.org' name='[Action1]'>
      <source dashboard='US inpatient payment and discharges' type='sheet' />
      <link caption='' expression='https://www.cms.gov/Research-Statistics-Data-and-Systems/Statistics-Trends-and-Reports/Medicare-Provider-Charge-Data/Inpatient2016.html' />
    </action>
    <action caption='Highlight on state' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Total payment and medicare payment' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total payment and medicare payment' />
      </command>
    </action>
    <action caption='Top N' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total payment and medicare payment' type='sheet'>
        <exclude-sheet name='Top N Hospital' />
      </source>
      <link caption='Top N' delimiter=',' escape='\' expression='tsl:Total%20payment%20and%20medicare%20payment?%5Bfederated.0kpf1x50gp8tuq11mgasg1b2hsgf%5D.%5BProvider%20State%5D~s0=&lt;[Provider State]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Payment per discharge' />
        <param name='target' value='Total payment and medicare payment' />
      </command>
    </action>
    <datasources>
      <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
    </datasources>
    <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
      <column datatype='string' name='[Provider State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Alaska'>
      <table>
        <view>
          <datasources>
            <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
            <column datatype='real' name='[Average Total Payments]' role='measure' type='quantitative' />
            <column caption='Total Payment' datatype='real' name='[Calculation_1187120747802767369]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Provider State]: SUM([Average Total Payments]*[Total Discharges])}/({ FIXED [Provider State]: SUM([Total Discharges])})' />
            </column>
            <column datatype='string' name='[Provider City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Provider State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
            <column-instance column='[Provider City]' derivation='None' name='[none:Provider City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Provider State]' derivation='None' name='[none:Provider State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1187120747802767369]' derivation='Sum' name='[sum:Calculation_1187120747802767369:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Discharges]' derivation='Sum' name='[sum:Total Discharges:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]'>
            <groupfilter function='member' level='[none:Provider State:nk]' member='&quot;AK&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_1187120747802767369:qk]' max='20000.0' min='9800.0' palette='green_gold_10_0' type='interpolated' />
            <encoding attr='size' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' field-type='quantitative' max='80000' max-size='1' min='10' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_1187120747802767369:qk]' />
              <text column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
              <geometry column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' />
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-transparency' value='180' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Latitude (generated)]</rows>
        <cols>([federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)] + [federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Continental US'>
      <table>
        <view>
          <datasources>
            <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
            <column datatype='real' name='[Average Total Payments]' role='measure' type='quantitative' />
            <column caption='Total Payment' datatype='real' name='[Calculation_1187120747802767369]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Provider State]: SUM([Average Total Payments]*[Total Discharges])}/({ FIXED [Provider State]: SUM([Total Discharges])})' />
            </column>
            <column datatype='string' name='[Provider City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Provider State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1187120747802767369]' derivation='Attribute' name='[attr:Calculation_1187120747802767369:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Provider City]' derivation='None' name='[none:Provider City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Provider State]' derivation='None' name='[none:Provider State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Discharges]' derivation='Sum' name='[sum:Total Discharges:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Provider State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Provider State:nk]' member='&quot;AK&quot;' />
                <groupfilter function='member' level='[none:Provider State:nk]' member='&quot;HI&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]</column>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Latitude (generated)]</column>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]' field-type='quantitative' fold='true' max='-5966394.2508055773' min='-15343643.717949495' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]' field-type='quantitative' max='-5966394.2508055773' min='-15343643.717949495' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Latitude (generated)]' field-type='quantitative' max='7220046.8454397758' min='1613031.7001372268' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]' max='20000.0' min='9800.0' palette='green_gold_10_0' symmetric='false' type='interpolated' />
            <encoding attr='size' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' field-type='quantitative' max='80000' max-size='1' min='10' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]' value='Average Total Payment'>
              <formatted-text>
                <run fontalignment='1'>Average Total Payment</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' />
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>City:&#9;&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Discharges:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.86756908893585205' />
                <format attr='mark-color' value='#e15759' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#998f8c' />
                <format attr='mark-transparency' value='180' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]' />
              <text column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
              <geometry column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Payment per discharge:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3513259887695312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Latitude (generated)]</rows>
        <cols>([federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)] + [federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Hawaii'>
      <table>
        <view>
          <datasources>
            <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
            <column datatype='real' name='[Average Total Payments]' role='measure' type='quantitative' />
            <column caption='Total Payment' datatype='real' name='[Calculation_1187120747802767369]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Provider State]: SUM([Average Total Payments]*[Total Discharges])}/({ FIXED [Provider State]: SUM([Total Discharges])})' />
            </column>
            <column datatype='string' name='[Provider City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Provider State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
            <column-instance column='[Provider City]' derivation='None' name='[none:Provider City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Provider State]' derivation='None' name='[none:Provider State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1187120747802767369]' derivation='Sum' name='[sum:Calculation_1187120747802767369:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Discharges]' derivation='Sum' name='[sum:Total Discharges:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]'>
            <groupfilter function='member' level='[none:Provider State:nk]' member='&quot;HI&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_1187120747802767369:qk]' max='20000.0' min='9800.0' palette='green_gold_10_0' type='interpolated' />
            <encoding attr='size' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' field-type='quantitative' max='80000' max-size='1' min='10' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_1187120747802767369:qk]' />
              <text column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
              <geometry column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' />
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-transparency' value='180' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Latitude (generated)]</rows>
        <cols>([federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)] + [federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Hospital Difference'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Discharge difference</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Nashville Hospital Names' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;'>
              <calculation class='tableau' formula='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
            <column caption='Nashville Hospitals' datatype='string' name='[Calculation_1187120747796152328]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Provider City]==&apos;NASHVILLE&apos; AND&#10;[Provider State]==&apos;TN&apos;&#10;THEN [Provider Name]&#10;END' />
            </column>
            <column aggregation='Attribute' caption='Discharge of Selected Hospital' datatype='integer' name='[Calculation_47147092264488965]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ EXCLUDE [Provider Name] : SUM([zzzz (copy)]) }' />
            </column>
            <column caption='Difference from selected' datatype='integer' name='[Calculation_47147092264902662]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Total Discharges])-SUM([Calculation_47147092264488965])' />
            </column>
            <column caption='Color for bars' datatype='boolean' name='[Calculation_47147092374011929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Provider Name] == [Parameters].[Parameter 1]&#10;then TRUE&#10;ELSE FALSE&#10;END' />
            </column>
            <column datatype='string' name='[Provider City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Provider Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Provider State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1187120747796152328]' derivation='None' name='[none:Calculation_1187120747796152328:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_47147092374011929]' derivation='None' name='[none:Calculation_47147092374011929:nk]' pivot='key' type='nominal' />
            <column-instance column='[Provider Name]' derivation='None' name='[none:Provider Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Discharges]' derivation='Sum' name='[sum:Total Discharges:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_47147092264902662]' derivation='User' name='[usr:Calculation_47147092264902662:qk]' pivot='key' type='quantitative' />
            <column caption='Selected Hospital' datatype='integer' name='[zzzz (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Provider Name] == [Parameters].[Parameter 1]&#10;THEN&#10;[Total Discharges]&#10;ELSE 0&#10;END' />
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation_1187120747796152328:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1187120747796152328:nk]' />
              <groupfilter function='member' level='[none:Calculation_1187120747796152328:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]' direction='DESC' using='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092264902662:qk]' />
          <slices>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation_1187120747796152328:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092264902662:qk]' value='Difference'>
              <formatted-text>
                <run fontalignment='1'>Difference</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation_47147092374011929:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Provider Name:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Discharges:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]&gt;</run>
                <run>&#10;&lt;Sheet name=&quot;Hospital payments&quot; maxwidth=&quot;300&quot; maxheight=&quot;300&quot; filter=&quot;&lt;All Fields&gt;&quot;&gt;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#555555' />
                <format attr='mark-transparency' value='231' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092264902662:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092264902662:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>The total discharges between </run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]&gt; and &lt;[Parameters].[Parameter 1]&gt; is &lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092264902662:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]</rows>
        <cols>([federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092264902662:qk] + [federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Hospital payments'>
      <table>
        <view>
          <datasources>
            <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Nashville Hospital Names' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;'>
              <calculation class='tableau' formula='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
            <column datatype='real' name='[Average Medicare Payments]' role='measure' type='quantitative' />
            <column datatype='real' name='[Average Total Payments]' role='measure' type='quantitative' />
            <column caption='Hospital average total payment' datatype='real' name='[Calculation_47147092333625362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Provider Name]: SUM([Average Total Payments]*[Total Discharges])}/({ FIXED [Provider Name]: SUM([Total Discharges])})' />
            </column>
            <column caption='Color for bars' datatype='boolean' name='[Calculation_47147092374011929]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Provider Name] == [Parameters].[Parameter 1]&#10;then TRUE&#10;ELSE FALSE&#10;END' />
            </column>
            <column caption='Hospital average medicare payment' datatype='real' name='[Hospital covered charges (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Provider Name]: SUM([Average Medicare Payments]*[Total Discharges])}/({ FIXED [Provider Name]: SUM([Total Discharges])})' />
            </column>
            <column datatype='string' name='[Provider Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Provider State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
            <column-instance column='[Provider Name]' derivation='None' name='[none:Provider Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_47147092333625362]' derivation='Sum' name='[sum:Calculation_47147092333625362:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hospital covered charges (copy)]' derivation='Sum' name='[sum:Hospital covered charges (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Hospital covered charges (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_47147092333625362:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Tooltip (Color for bars,Provider Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hospital payments]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_47147092374011929]' />
              <groupfilter function='level-members' level='[Provider Name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Tooltip (Provider Name,Provider State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hospital payments]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Provider Name]' />
              <groupfilter function='level-members' level='[Provider State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]</column>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Tooltip (Provider Name,Provider State)]</column>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Tooltip (Color for bars,Provider Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Multiple Values]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]' value='true' />
            <format attr='display' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk] / [federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names])</rows>
        <cols>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='Other Hospital'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Nashville Hospital Names' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;'>
              <calculation class='tableau' formula='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;' />
            </column>
            <column caption='Upper Limit' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
            </column>
            <column caption='Bin Size' datatype='real' name='[VUMC Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
            <column caption='Bin End Values other' datatype='string' name='[Bin End Values (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [CBINS (copy)] &lt; 200&#10;THEN&#10;STR([Capped Bins (copy)])+&apos;-&apos;+STR(INT([CBINS (copy)]+[Parameters].[VUMC Parameter]-1))&#10;ELSE&#10;STR([Capped Bins (copy)])&#10;END' />
            </column>
            <column aggregation='Sum' caption='CBINS other' datatype='real' name='[CBINS (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT([Calculation1 (copy)]/[Parameters].[VUMC Parameter])*[Parameters].[VUMC Parameter]' />
            </column>
            <column caption='Other Hospital' datatype='integer' name='[Calculation1 (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Provider Name] == [Parameters].[Parameter 1]&#10;THEN [Total Discharges]&#10;END' />
            </column>
            <column caption='Capped Bins other' datatype='string' name='[Capped Bins (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [CBINS (copy)] &lt; [Parameters].[Parameter 2]&#10;THEN STR([CBINS (copy)])&#10;ELSE&#10;&apos;&gt;=&apos;+STR([Parameters].[Parameter 2])&#10;END' />
            </column>
            <column datatype='string' name='[Provider Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
            <column-instance column='[Bin End Values (copy)]' derivation='Attribute' name='[attr:Bin End Values (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation1 (copy)]' derivation='Count' name='[cnt:Calculation1 (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1 (copy)]' derivation='None' name='[none:Calculation1 (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Capped Bins (copy)]' derivation='None' name='[none:Capped Bins (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation1 (copy):qk]' included-values='non-null' />
          <slices>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation1 (copy):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[cnt:Calculation1 (copy):qk]' scope='rows' value='Other Hospital' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Bin End Values (copy):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Discharge range:&#9;&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Bin End Values (copy):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Counts:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[cnt:Calculation1 (copy):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9d9a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[cnt:Calculation1 (copy):qk]</rows>
        <cols>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Capped Bins (copy):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Payment per discharge'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total payment and Medicare payment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
            <column datatype='real' name='[Average Medicare Payments]' role='measure' type='quantitative' />
            <column datatype='real' name='[Average Total Payments]' role='measure' type='quantitative' />
            <column caption='Total Payment' datatype='real' name='[Calculation_1187120747802767369]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Provider State]: SUM([Average Total Payments]*[Total Discharges])}/({ FIXED [Provider State]: SUM([Total Discharges])})' />
            </column>
            <column caption='Medicare payment/Total payment' datatype='real' default-format='p0.0%' name='[Calculation_47147092305801227]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Total Payment by State (copy)]/[Calculation_1187120747802767369]' />
            </column>
            <column datatype='string' name='[Provider State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
            <column caption='Medicare Payment' datatype='real' name='[Total Payment by State (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Provider State]: SUM([Average Medicare Payments]*[Total Discharges])}/({ FIXED [Provider State]: SUM([Total Discharges])})' />
            </column>
            <column-instance column='[Calculation_1187120747802767369]' derivation='Attribute' name='[attr:Calculation_1187120747802767369:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_47147092305801227]' derivation='Attribute' name='[attr:Calculation_47147092305801227:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Provider State]' derivation='None' name='[none:Provider State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1187120747802767369]' derivation='Sum' name='[sum:Calculation_1187120747802767369:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Payment by State (copy)]' derivation='Sum' name='[sum:Total Payment by State (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Payment by State (copy):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Payment by State (copy):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' direction='DESC' using='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_1187120747802767369:qk]' />
          <slices>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Multiple Values]' scope='cols' value='Payment' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Multiple Values]' value='n&quot;$&quot;#,##0;-&quot;$&quot;#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]' field-type='nominal' max-size='1' min-size='0.436307' type='catsize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]' value='Payment Type' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Multiple Values]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]' />
              <color column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Provider State:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Multiple Values]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' italic='true'>Click to zoom in map and see top &lt;[Parameters].[Parameter 4]&gt; hosptials with most discharges</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3953038454055786' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_47147092305801227:qk]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_47147092305801227:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Provider State:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Medicare payment/Total payment:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_47147092305801227:qk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' italic='true'>Click to zoom in map and see top &lt;[Parameters].[Parameter 4]&gt; hosptials with most discharges</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='text-orientation' value='0' />
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.3733149766921997' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]</rows>
        <cols>([federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Multiple Values] + [federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_47147092305801227:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Select types'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Discharges: VUMC VS. &lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Nashville Hospital Names' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;'>
              <calculation class='tableau' formula='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;' />
            </column>
            <column caption='Stats Type' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Discharges&quot;'>
              <calculation class='tableau' formula='&quot;Discharges&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
            <column datatype='real' name='[Average Medicare Payments]' role='measure' type='quantitative' />
            <column datatype='real' name='[Average Total Payments]' role='measure' type='quantitative' />
            <column datatype='string' name='[DRG Definition]' role='dimension' type='nominal' />
            <column caption='VUMC type' datatype='real' name='[Other Hospital type (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 3] == &apos;Discharges&apos;&#10;THEN { FIXED [DRG Definition]: SUM([VUMC (copy)])}&#10;ELSE { FIXED [DRG Definition]:SUM([VUMC (copy)])}/{ FIXED [DRG Definition]: SUM([Total Discharges])}&#10;END' />
            </column>
            <column datatype='string' name='[Provider Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
            <column caption='VUMC Metric' datatype='real' name='[VUMC (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Provider Name] == &apos;VANDERBILT UNIVERSITY MEDICAL CENTER&apos; THEN&#10;IF [Parameters].[Parameter 3] == &apos;Medicare payment&apos;&#10;THEN [Average Medicare Payments]*[Total Discharges]&#10;ELSEIF [Parameters].[Parameter 3] == &apos;Discharges&apos;&#10;THEN [Total Discharges]&#10;ELSEIF [Parameters].[Parameter 3] == &apos;Total payment&apos;&#10;THEN [Average Total Payments]*[Total Discharges]&#10;END&#10;END' />
            </column>
            <column caption='Other Hospital Metric' datatype='real' name='[VUMC metric (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Provider Name] == [Parameters].[Parameter 1] THEN&#10;IF [Parameters].[Parameter 3] == &apos;Medicare payment&apos;&#10;THEN [Average Medicare Payments]*[Total Discharges]&#10;ELSEIF [Parameters].[Parameter 3] == &apos;Discharges&apos;&#10;THEN [Total Discharges]&#10;ELSEIF [Parameters].[Parameter 3] == &apos;Total payment&apos;&#10;THEN [Average Total Payments]*[Total Discharges]&#10;END&#10;END' />
            </column>
            <column caption='Other Hospital type' datatype='real' name='[VUMC type (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 3] == &apos;Discharges&apos;&#10;THEN { FIXED [DRG Definition]: SUM([VUMC metric (copy)])}&#10;ELSE { FIXED [DRG Definition]:SUM([VUMC metric (copy)])}/{ FIXED [DRG Definition]: SUM([Total Discharges])}&#10;END' />
            </column>
            <column-instance column='[DRG Definition]' derivation='None' name='[none:DRG Definition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Other Hospital type (copy)]' derivation='Sum' name='[sum:Other Hospital type (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[VUMC (copy)]' derivation='Sum' name='[sum:VUMC (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[VUMC metric (copy)]' derivation='Sum' name='[sum:VUMC metric (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[VUMC type (copy)]' derivation='Sum' name='[sum:VUMC type (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Other Hospital type (copy):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:VUMC type (copy):qk]' included-values='non-null' />
          <slices>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Other Hospital type (copy):qk]</column>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:VUMC type (copy):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:DRG Definition:nk]' value='#333333' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='Nashville Hospitals' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:DRG Definition:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:VUMC metric (copy):qk]</rows>
        <cols>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:VUMC (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top N Hospital'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top &lt;</run>
            <run>[Parameters].[Parameter 4]</run>
            <run>&gt; hospitals with most discharges</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N Hospital' datatype='integer' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
            <column caption='Rank Discharge' datatype='integer' name='[Calculation_47147092324999182]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='RANK(SUM([Total Discharges]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank to show' datatype='boolean' name='[Calculation_47147092327211024]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_47147092324999182] &lt;= [Parameters].[Parameter 4]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Provider Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Provider State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
            <column-instance column='[Provider Name]' derivation='None' name='[none:Provider Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Provider State]' derivation='None' name='[none:Provider State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Discharges]' derivation='Sum' name='[pcto:sum:Total Discharges:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Total Discharges]' derivation='Sum' name='[sum:Total Discharges:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_47147092324999182]' derivation='User' name='[usr:Calculation_47147092324999182:ok:3]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]' ordering-type='Field'>
                <order field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
                <order field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_47147092327211024]' derivation='User' name='[usr:Calculation_47147092327211024:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Calculation_47147092324999182]' level-break='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]' ordering-type='Field'>
                <order field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
                <order field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Action (Provider State)]'>
            <groupfilter function='level-members' level='[Provider State]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <alphabetic-sort column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092327211024:nk:1]'>
            <groupfilter function='member' level='[usr:Calculation_47147092327211024:nk:1]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092327211024:nk:1]</column>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Action (Provider State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[pcto:sum:Total Discharges:qk:2]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092324999182:ok:3]' value='false' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' scope='rows' value='#cbcbcb' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[pcto:sum:Total Discharges:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Provider Name:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Discharges:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rank:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092324999182:ok:3]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;Sheet name=&quot;Hospital payments&quot; maxwidth=&quot;300&quot; maxheight=&quot;300&quot; filter=&quot;&lt;All Fields&gt;&quot;&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ba9582' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk] / ([federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092324999182:ok:3] / [federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]))</rows>
        <cols>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Discharges'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Discharges: VUMC V.S. &lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Nashville Hospital Names' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;'>
              <calculation class='tableau' formula='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
            <column caption='Other Hospital' datatype='integer' name='[Calculation1 (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Provider Name] == [Parameters].[Parameter 1]&#10;THEN [Total Discharges]&#10;END' />
            </column>
            <column caption='VUMC' datatype='integer' name='[Calculation_1187120747774832641]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Provider Name] == &apos;VANDERBILT UNIVERSITY MEDICAL CENTER&apos;&#10;THEN &#10;[Total Discharges]&#10;END' />
            </column>
            <column datatype='string' name='[DRG Definition]' role='dimension' type='nominal' />
            <column datatype='string' name='[Provider Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
            <column-instance column='[DRG Definition]' derivation='None' name='[none:DRG Definition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation1 (copy)]' derivation='Sum' name='[sum:Calculation1 (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1187120747774832641]' derivation='Sum' name='[sum:Calculation_1187120747774832641:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation1 (copy):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_1187120747774832641:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation1 (copy):qk]</column>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_1187120747774832641:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation1 (copy):qk]' scope='cols' value='Other Hospital' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='Select a hospital'>
              <formatted-text>
                <run fontsize='14' italic='true'>Select a hospital</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:DRG Definition:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#1b1b1b' />
                <format attr='mark-transparency' value='180' />
                <format attr='mark-color' value='#f17b79' />
                <format attr='size' value='1.1974033117294312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_1187120747774832641:qk]</rows>
        <cols>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation1 (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Total discharges'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Totol payment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
            <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
            <column-instance column='[Total Discharges]' derivation='Sum' name='[sum:Total Discharges:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='101' />
            <format attr='height' value='35' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.9060773849487305' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Total payments'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Totol payment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
          </datasources>
          <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
            <column datatype='real' name='[Average Total Payments]' role='measure' type='quantitative' />
            <column caption='All payments' datatype='real' name='[Calculation_47147092290310154]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Average Total Payments]*[Total Discharges])' />
            </column>
            <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_47147092290310154]' derivation='User' name='[usr:Calculation_47147092290310154:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='101' />
            <format attr='height' value='33' />
            <format attr='text-format' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092290310154:qk]' value='n&quot;$&quot;#,##0,,,.00B;-&quot;$&quot;#,##0,,,.00B' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092290310154:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.9060773849487305' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='US MAP ZOOM'>
      <table>
        <view>
          <datasources>
            <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
            <column datatype='real' name='[Average Total Payments]' role='measure' type='quantitative' />
            <column caption='Total Payment' datatype='real' name='[Calculation_1187120747802767369]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Provider State]: SUM([Average Total Payments]*[Total Discharges])}/({ FIXED [Provider State]: SUM([Total Discharges])})' />
            </column>
            <column datatype='string' name='[Provider City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Provider State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1187120747802767369]' derivation='Attribute' name='[attr:Calculation_1187120747802767369:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Provider City]' derivation='None' name='[none:Provider City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Provider State]' derivation='None' name='[none:Provider State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Discharges]' derivation='Sum' name='[sum:Total Discharges:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Action (Provider State)]'>
            <groupfilter function='level-members' level='[Provider State]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]</column>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Action (Provider State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]' field-type='quantitative' fold='true' projection='EPSG:3857' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]' max='20000.0' min='9800.0' palette='green_gold_10_0' symmetric='false' type='interpolated' />
            <encoding attr='size' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' field-type='quantitative' max='80000' max-size='1' min='10' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]' value='Average Total Payment'>
              <formatted-text>
                <run fontalignment='1'>Average Total Payment</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' />
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>City:&#9;&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Discharges:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.86756908893585205' />
                <format attr='mark-color' value='#e15759' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#998f8c' />
                <format attr='mark-transparency' value='180' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]' />
              <text column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
              <lod column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]' />
              <geometry column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Payment per discharge:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3513259887695312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Latitude (generated)]</rows>
        <cols>([federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)] + [federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='VUMC'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Medicare_Provider_Charge_Inpatient_DRGALL_FY2016' name='federated.0kpf1x50gp8tuq11mgasg1b2hsgf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Upper Limit' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='200.0'>
              <calculation class='tableau' formula='200.0' />
            </column>
            <column caption='Bin Size' datatype='real' name='[VUMC Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
              <calculation class='tableau' formula='10.0' />
              <range granularity='5.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0kpf1x50gp8tuq11mgasg1b2hsgf'>
            <column caption='VUMC' datatype='integer' name='[Calculation_1187120747774832641]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Provider Name] == &apos;VANDERBILT UNIVERSITY MEDICAL CENTER&apos;&#10;THEN &#10;[Total Discharges]&#10;END' />
            </column>
            <column aggregation='Sum' caption='CBINS' datatype='real' name='[Calculation_47147092239908864]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT([Calculation_1187120747774832641]/[Parameters].[VUMC Parameter])*[Parameters].[VUMC Parameter]' />
            </column>
            <column caption='Bin End Values' datatype='string' name='[Calculation_47147092241047553]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_47147092239908864] &lt; 200&#10;THEN&#10;STR([Calculation_47147092242702338])+&apos;-&apos;+STR(INT([Calculation_47147092239908864]+[Parameters].[VUMC Parameter]-1))&#10;ELSE&#10;STR([Calculation_47147092242702338])&#10;END' />
            </column>
            <column caption='Capped Bins' datatype='string' name='[Calculation_47147092242702338]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_47147092239908864] &lt; [Parameters].[Parameter 2]&#10;THEN STR([Calculation_47147092239908864])&#10;ELSE&#10;&apos;&gt;=&apos;+STR([Parameters].[Parameter 2])&#10;END' />
            </column>
            <column datatype='string' name='[Provider Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total Discharges]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_47147092241047553]' derivation='Attribute' name='[attr:Calculation_47147092241047553:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1187120747774832641]' derivation='Count' name='[cnt:Calculation_1187120747774832641:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_47147092242702338]' derivation='None' name='[none:Calculation_47147092242702338:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1187120747774832641]' derivation='Sum' name='[sum:Calculation_1187120747774832641:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_1187120747774832641:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_1187120747774832641:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[cnt:Calculation_1187120747774832641:qk]' scope='rows' value='VUMC' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_47147092241047553:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Discharge range:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_47147092241047553:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Counts:&#9;</run>
                <run bold='true'>&lt;[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[cnt:Calculation_1187120747774832641:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[cnt:Calculation_1187120747774832641:qk]</rows>
        <cols>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation_47147092242702338:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Inpatient Dat 2016' type='storyboard'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='1' param='vert' removable='false' type='layout-flow' w='99000' x='500' y='889'>
            <zone h='8778' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='99000' x='500' y='889' />
            <zone h='89444' id='5' paired-zone-id='4' removable='false' type='flipboard' w='99000' x='500' y='9667'>
              <flipboard active-id='3' nav-type='number' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='US inpatient payment and discharges' id='1'>
                    <capturedDeltas>
                      <worksheet name='Continental US'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Latitude (generated)]' field-type='quantitative' max='7279628.9722618833' min='1553449.5733151198' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]' field-type='quantitative' max='-5517935.7394231372' min='-15858015.085722689' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            <encoding attr='space' class='1' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]' field-type='quantitative' fold='true' max='-5517935.7394231372' min='-15858015.085722689' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='Total payment and medicare payment' id='2'>
                    <capturedDeltas>
                      <worksheet name='Payment per discharge'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' domain-expand='false' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_47147092305801227:qk]' field-type='quantitative' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='US MAP ZOOM'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point captured-sheet='VUMC and others' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Total payment and medicare payment'>
      <style />
      <size maxheight='800' maxwidth='1550' minheight='800' minwidth='1550' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N Hospital' datatype='integer' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='13' param='horz' type='layout-flow' w='98968' x='516' y='1000'>
            <zone h='98000' id='5' param='horz' type='layout-flow' w='98968' x='516' y='1000'>
              <zone h='98000' id='3' type='layout-basic' w='98968' x='516' y='1000'>
                <zone h='98000' id='1' name='Payment per discharge' w='49484' x='516' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='57630' id='8' name='US MAP ZOOM' show-title='false' w='49484' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='40370' id='11' name='Top N Hospital' w='49484' x='50000' y='58630'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='22361' id='9' name='US MAP ZOOM' pane-specification-id='3' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' type='size' w='8203' x='88203' y='11528' />
        <zone h='8056' id='10' name='US MAP ZOOM' pane-specification-id='4' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]' type='color' w='13047' x='85078' y='3472' />
        <zone h='8750' id='6' name='Payment per discharge' pane-specification-id='3' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]' type='color' w='14297' x='34375' y='1111' />
        <zone custom-title='true' h='6000' id='14' mode='type_in' param='[Parameters].[Parameter 4]' type='paramctrl' w='8065' x='89742' y='59875'>
          <formatted-text>
            <run fontalignment='1'>Top N Hospitals</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='US inpatient payment and discharges'>
      <style />
      <size maxheight='800' maxwidth='1550' minheight='800' minwidth='1550' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98968' x='516' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='98968' x='516' y='1000'>
              <zone h='98000' id='1' name='Continental US' show-title='false' w='98968' x='516' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='19300' id='7' name='Alaska' show-title='false' w='20187' x='13107' y='64051' />
        <zone h='9438' id='9' name='Hawaii' show-title='false' w='12463' x='28555' y='70308' />
        <zone h='4000' id='10' name='Total payments' show-title='false' w='10323' x='16129' y='8000' />
        <zone h='5375' id='12' name='Total discharges' show-title='false' w='11097' x='17806' y='11625' />
        <zone forceUpdate='true' h='13500' id='13' type='text' w='46452' x='6516' y='3250'>
          <formatted-text>
            <run fontcolor='#333333' fontsize='16'>2016 inpatient charge data (Medicare)</run>
            <run>Æ&#10;</run>
            <run fontcolor='#333333' fontsize='16'>Total payments:</run>
            <run>Æ&#10;</run>
            <run fontcolor='#333333' fontsize='16'>Total discharges:</run>
          </formatted-text>
        </zone>
        <zone h='8056' id='6' name='Continental US' pane-specification-id='4' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]' type='color' w='13281' x='84219' y='5417' />
        <zone h='23750' id='8' name='Continental US' pane-specification-id='3' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' type='size' w='8203' x='86875' y='13750' />
      </zones>
    </dashboard>
    <dashboard name='VUMC and others'>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='1' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1550' minheight='800' minwidth='1550' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Nashville Hospital Names' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;'>
          <calculation class='tableau' formula='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;' />
          <members>
            <member value='&quot;METRO NASHVILLE GENERAL HOSPITAL&quot;' />
            <member value='&quot;SAINT THOMAS HOSPITAL FOR SPECIALTY SURGERY&quot;' />
            <member value='&quot;SAINT THOMAS MIDTOWN HOSPITAL&quot;' />
            <member value='&quot;SAINT THOMAS WEST HOSPITAL&quot;' />
            <member value='&quot;TRISTAR CENTENNIAL MEDICAL CENTER&quot;' />
            <member value='&quot;TRISTAR SKYLINE MEDICAL CENTER&quot;' />
            <member value='&quot;TRISTAR SOUTHERN HILLS MEDICAL CENTER&quot;' />
            <member value='&quot;VANDERBILT UNIVERSITY MEDICAL CENTER&quot;' />
          </members>
        </column>
        <column caption='Upper Limit' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='200.0'>
          <calculation class='tableau' formula='200.0' />
        </column>
        <column caption='Bin Size' datatype='real' name='[VUMC Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10.0'>
          <calculation class='tableau' formula='10.0' />
          <range granularity='5.0' min='0.0' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98968' x='516' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='98968' x='516' y='1000'>
              <zone h='40231' id='1' name='Total Discharges' w='49481' x='516' y='9769'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42456' id='7' name='Hospital Difference' w='49487' x='49997' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24497' id='9' name='VUMC' show-title='false' w='49481' x='516' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24503' id='12' name='Other Hospital' show-title='false' w='49481' x='516' y='74497'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone custom-title='true' h='8769' id='6' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='49481' x='516' y='1000'>
                <formatted-text>
                  <run fontsize='12' italic='true'>Select a hospital to compare</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone forceUpdate='' h='55544' id='13' param='https://www.google.com/search?q=&lt;[Parameters].[Parameter 1]&gt;' type='web' w='49487' x='49997' y='43456'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='7917' id='11' mode='type_in' param='[Parameters].[Parameter 2]' type='paramctrl' w='6094' x='42578' y='51806'>
          <formatted-text>
            <run fontalignment='1'>Upper Limit</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='7778' id='10' mode='type_in' param='[Parameters].[VUMC Parameter]' type='paramctrl' w='4766' x='43516' y='75972'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='5000' id='8' name='Hospital Difference' pane-specification-id='6' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092264902662:qk]' type='color' w='17500' x='81016' y='4167' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Select types'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:DRG Definition:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation1 (copy):ok]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_1187120747774832641:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='US inpatient payment and discharges'>
      <viewpoints>
        <viewpoint name='Alaska'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <geo-search-visibility value='1' />
          <map-navigation value='1' />
        </viewpoint>
        <viewpoint name='Continental US'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]</field>
            </color-one-way>
          </highlight>
          <floating-toolbar-visibility value='2' />
          <geo-search-visibility value='1' />
          <map-navigation value='1' />
        </viewpoint>
        <viewpoint name='Hawaii'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <geo-search-visibility value='1' />
          <map-navigation value='1' />
        </viewpoint>
        <viewpoint name='Total discharges' />
        <viewpoint name='Total payments' />
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Total payment and medicare payment'>
      <viewpoints>
        <viewpoint name='Payment per discharge'>
          <highlight field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top N Hospital' />
        <viewpoint name='US MAP ZOOM'>
          <zoom type='entire-view' />
          <highlight field='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' type='size'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='2' />
          <geo-search-visibility value='1' />
          <map-navigation value='1' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='VUMC and others'>
      <viewpoints>
        <viewpoint name='Hospital Difference' />
        <viewpoint name='Other Hospital'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Discharges'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='VUMC'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Inpatient Dat 2016'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' hidden='true' name='Alaska'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_1187120747802767369:qk]' type='color' />
            <card pane-specification-id='4' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Continent US]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Continental US'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' type='size' />
            <card pane-specification-id='4' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Continent US]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Zip Code:ok]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Average Total Payments:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <geo-search-visibility value='1' />
        <default-map-tool-selection tool='2' />
        <map-navigation value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Hawaii'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_1187120747802767369:qk]' type='color' />
            <card pane-specification-id='4' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Continent US]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Hospital Difference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='6' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092264902662:qk]' type='color' />
            <card pane-specification-id='4' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation_47147092374011929:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation_1187120747796152328:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation_47147092374011929:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Hospital payments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='1' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Other Hospital'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Bin End Values (copy):nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation1 (copy):qk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation_47147092241047553:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation_47147092242702338:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Capped Bins (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Payment per discharge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]' type='color' />
            <card pane-specification-id='3' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_47147092305801227:qk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Top N Hospital'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092324999182:ok:1]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092327211024:nk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Total Discharges'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:DRG Definition:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Name:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation1 (copy):ok]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Calculation_1187120747774832641:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Total discharges'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Total payments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[usr:Calculation_47147092290310154:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>94901750853.931961</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='US MAP ZOOM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Total Discharges:qk]' type='size' />
            <card pane-specification-id='4' param='[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[Continent US]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[attr:Calculation_1187120747802767369:qk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider City:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider State:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Provider Zip Code:ok]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[sum:Average Total Payments:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='VUMC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[VUMC Parameter]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation_47147092239908864:ok]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation_47147092241047553:nk]</field>
            <field>[federated.0kpf1x50gp8tuq11mgasg1b2hsgf].[none:Calculation_47147092242702338:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Inpatient Dat 2016' width='384'>
      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
      d1E6bNWqVdTV1TFnzpzuLoogCFewKz4BuFwuzGYzISEh3V2UDmtqakKlUuHv79/dRREE4Qp2
      UZ3AvYm7Sak3CQwM7O4iCILgAXrFUhAd/JByyXV1OXrKfQmC4JkuuBMYTg99XLNmDd9++y1D
      hgzBarUydepUfv7zn+Pr60tubi5ZWVnceuutXHPNNdTU1LBt2zY2bNjAO++8w4kTJ4iNjaW2
      tlYZSnry5ElOnDhBeHg4gYGBrFixgszMTJ599lmKiorYsWMHI0eO5KGHHiIuLo7IyEhyc3PZ
      vXs3WVlZfPrpp6xdu5arrrqKwsJCcnNz2bZtGwkJCQQHB7N69Wq+/vprRo4cyYkTJ5g3bx5T
      pkwhNzeXtLQ0HnvsMfbt24fBYECWZT766CNWrVpFTU0NOp2OF198kR07dlBXV8epU6doaGjA
      5XLx+OOPc8MNN/DWW28RHBzMk08+yQ033MC6desICQkhKCiI1atXn/e+XnzxRQoKCjh8+DBN
      TU28++675OXl4evrqyxX8cknn5Cbm8uJEyfo168fO3fu5OWXX2bSpEkcO3aMXbt2kZSUdClf
      L4IgXEEu6hNAcXExN954I48//jhqtZpvv/2WGTNmsGXLFgBlbaCBAweycuVKnE4nTqeT2bNn
      079/f2bPnk10dDR9+vRRvnfvvfdisVhwuVwANDY2snPnTsaMGcNDDz1EcHAwBoOBxMREtmzZ
      gizLVFdXK9cqKSnB398fq9VKcXExY8eO5dFHH1XG71ssFkwmE3a7nQ0bNpCSkqKU1T3SZ/78
      +Zw6dYqYmBhmzpxJRkYG06ZN4/PPP2fBggU89thj7NmzhwEDBrBz50527NhBWFgYDQ0NmM1m
      ZFkmOjqar7/+GqvVqtzL+e6rrKyMqqoq7rrrLm699VZsNhuTJ0/mkUce4bvvvsNisaDRaJg9
      ezb9+vVj9uzZqNVqtm/fzqBBgygvL8fhcGCz2S72dSAIgge6qAQwa9Ys8vLy+MMf/qAEtKSk
      JPLy8lodFxISQkhICCUlJR0+93vvvceyZcuoqqqirq6OqKgoAKKioqitrcXPzw+Hw0FxcTED
      Bw4ETk+Uqq+vR6vVsm3bNn79619z6tQpnnrqKcrLy5Vzjxo1iu+//566ujrCwsLavX58fDw1
      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
      fbXD1/n666/bPKHC6SYDk8lEXl4eDzzwACtXrsTpdCrlOZeqqirefvttXn75ZbRabatOvLi4
      OKXTKyAgoN1RRH5+fvj7+5OUlARAUlISKSkpaLVahg8fzq5du3jmmWf44x//eNanlxEjRrB0
      6VKGDBnCqFGjlO+HhIRQWVmp/LuyspKQkJBWv3vttdfy7LPPEhkZyU033dTqZ5mZmWzdurVN
      s05LEyZM4J///CdqtfqcnzwCAgKYPHky0dHRrF+//px9P+0du2nTJsaPH09paSlBQUH88MMP
      OByOdhM6QHJyMpGRkeTl5Z31OhciIyMDPz8/AEpKSrDZbPj4+NDU1ERdXR1arRag3afMc9Vx
      fn4+ycnJSt9MRkYGGzZsYNq0aWetizOd6/zncvToUXx9fc/ZmZmYmEhhYaHyuqqtrcVisSj1
      npmZyWeffUa/fv2A081CX375JSdOnFAedtx8fX2ZPn260kx6psDAQDIzM5V/h4aGAnSonlUq
      FTk5OQwdOpS77rpLGQTw4IMPMnr06A7Xids333xD//79lb4UrVbLoUOHSEtLu+BzeYJONwGl
      pKSwatUqKioqePXVVxk/fjwAERERfP/995SVlVFdXY3FYsHX15eysjLeeuut85738OHD7Nix
      g7///e988skn3HHHHW2OefPNNzGbzWRmZqJSqXC5XGRkZPDmm29SWlrKunXrznp+m82Gt7c3
      drudb7/9lvz8/HaP0+l0+Pv7s3DhQt59910+/vhjAPr27UtlZSVNTU2EhYWxf/9+qqur+fTT
      Tzl06BCpqalERETQ1NTE8ePH+eijj9qc29fXl759+/LWW2+1CtZXXXUVy5cv59ChQxw6dIi3
      336bq6++utXvhoWF4XQ6OXz4cJsX92233cbixYvZtGkThw4d4r333mtz7YEDB3LgwAGKiorI
      zs5Wvv/hhx9y8uRJTp48ybPPPktBQQGHDh3ik08+Ud7k7mPcznbsqVOn0Gq13HrrrUyfPp3p
      06czdOjQczYDAcyePfuswaar3HLLLTz11FMcP36cPXv28Oqrr/KrX/2q1THnquP169dz7733
      Kvc1b948Nm7ceM56O9O5zn+m8vJyCgoKWLNmDY899hgPP/zwOY+fOnUqr7zyCnv27OH48eM8
      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
      IcT89P8BvZ5K6obVricAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Select types' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXRj130n+C8I7iu4gwtYIEBwZ7HIKlaxKNG1qEqlxZYdlzqO00rb3fG4
      46Q9J8k5OaeTSZ85Mz2TPifd52ROO4nHTtQaj5d4JFtHbS2RMqpoVFKqLLkWVpEEdxIkuADg
      Tuzbw/xReRC4VQFFgHjg+37+kVgE+H58D7y/++6973cVoVAoBCIikp20ZAdARETJwQRARCRT
      TABERDIliQTg9/uTHcKevF5vskPYkxTjCgQCCAQCyQ5jFymeK0CacUn1Gko1LileQyC2uCSR
      AIiI6PAxARARyRQTABGRTDEBEBHJFBMAEZFMMQEQEckUEwARkUwxARARyRQTABGRTDEBEBHJ
      FBMAEZFMMQEQEckUEwARkUwxARARyRQTABGRTDEBEBHJVHo8f5jL5cI//uM/AgBOnjwJt9uN
      W7du4ezZs9BoNLh+/TrW1tbw7LPPIisrK56HJiKiGMX1DmBhYQFlZWW4fPkyKisr8f777+OF
      F17Ae++9h5mZGbhcLpw4cQLXrl2L52GJUobT48P/+d9v4d/8+dv4H//r3+PuxFKyQyIZi+sd
      gNfrxf379zE5OYkrV66gtLQU2dnZyMvLg8ViQXNzM7RaLW7evAngs60gg8EgBEGIZyhxEQwG
      JbntmxTjEq9fMBhMciTbSe1c/eLjMfz9J5MAAIfbh+++cQv/89f6UVaUk+TIpHsNpRqX1D5b
      oljiimsCaG9vR3t7O8bGxnDv3j243W4AD/b0zM7Oht1uh9frRVragxuPjIyM8Hsj/18qvF6v
      JIeqpBiXuGdrenpcP1IHJrVzNbm4se3r1S037O4AaiqSH6NUr6FU45LaZ0sUS1xxPaO//OUv
      MTs7i42NDTz99NNYWVnBq6++ioKCAjQ3N+Pll1/GzZs3cfHixXgelihlNNaW4tboYvjr0sIc
      lEqg90/ypAiFQqF4/sCd2drtdiMn58EHPBgMIhgMIjMzc9t7/H4/7wBiIMW42EuLjtPjww//
      4T4+ujeHsqIcfP3ZE+gyVCU7LADSvYZSjUtqny1RLHHFPQE8DiaA2EgxLv6RxkaKcUn1Gko1
      LileQyC2uPgcABGRTDEBEBHJFBMAEZFMMQEQEckUEwARkUwxARARyRQTABGRTDEBEBHJFBMA
      EZFMMQEQEckUEwARkUwxARARyRQTABGRTDEBEBHJFBMAEZFMMQEQEckUEwARkUwxARARyRQT
      ABGRTDEBEBHJFBMAEZFMMQEQEckUEwARkUwxARARyRQTABGRTDEBEBHJFBMAEZFMMQEQEckU
      EwARkUzFPQEEAgG8/fbbAICBgQG89dZb+PDDDwEA169fxxtvvAGv1xvvwxIRUYzingDee+89
      DA8PAwCMRiMuX76Mvr4+zMzMwOVy4cSJE7h27Vq8D0tERDFKj+cPW1hYgNfrhVarBQC4XC78
      5Cc/QUtLC0KhEJqbm6HVanHz5k0AgN/vBwAEg0EIghDPUOIiGAxK8m5FinGJ1y8YDCY5ku2k
      eK4AacYl1Wso1bikeA2B2OKKawK4fv06BEHAzMwMPvnkE3zjG98AAPz1X/81zp49C7vdDq/X
      i7S0BzceGRkZ4fdG/r9UeL1eZGVlJTuMXaQYVyAQAACkp8f1I3VgUjxXgDTjkuo1lGpcUryG
      QGxxxfWMfvWrXwUA/OxnP0NPTw++//3vo7y8HAUFBWhubsbLL7+Mmzdv4uLFi/E8LBERPQZF
      KBQKJeqHh0Ih+Hy+cDYKBoMIBoPIzMzc9jq/3887gBhIMS720mIjxbikeg2lGpcUryGQxDuA
      nRQKxbZAlEollEplIg9JRERR4nMAREQyxQRARCRTTABERDLFBEBEJFNMAEREMsUEQEQkU0wA
      REQyxQRARCRTTABERDLFBEBEJFNMAEREMsUEQEQkU0wAREQyxQRARCRTTABERDLFBEBEJFNM
      AEREMsUEQEQkU0wAREQyxQRARCRTTABERDLFBEBEJFNMAEREMsUEQEQkU0wAREQyxQRARCRT
      TABERDLFBEBEJFNMAEREMhX3BBAIBPD2228DAKanp/Hqq6/CbDYDAK5fv4433ngDXq833ocl
      IqIYxT0BvPfeexgeHgYAvP/++3jhhRfw3nvvYWZmBi6XCydOnMC1a9fifVgiIopRejx/2MLC
      ArxeL7RaLXw+H0pLS5GdnY28vDxYLBY0NzdDq9Xi5s2bAAC/3w8ACAaDEAQhnqHERTAYlOTd
      ihTjEq9fMBhMciTbSfFcAdKMS6rXUKpxSfEaArHFFdcEcP36dQiCgJmZGdy5cwdutxvAg2Gh
      7Oxs2O12eL1epKU9uPHIyMgIvzfy/6XC6/UiKysr2WHsIsW4AoEAACA9Pa4fqQOT4rkCpBmX
      VK+hVOOS4jUEYosrrmf0q1/9KgDgZz/7GXp7e2EymfDqq6+ioKAAzc3NePnll3Hz5k1cvHgx
      noclIqLHoAiFQqFEHsDtdiMnJwfAg1uTYDCIzMzMba/x+/28A4iBFONiLy02UoxLqtdQqnFJ
      8RoCSbwD2IvY+AOAUqmEUqlM9CGJiCgKfA6AiEimmACIiGSKCYCISKaYAIiIZIoJgIhIppgA
      iIhkigmAiEimmACIiGSKCYCISKaYAIiIZIoJgIhIppgAiIhkigmAiEimmACIiGSKCYCISKaY
      AIiIZIoJgIhIppgAiIhkigmAiEimmACIiGSKCYCISKaYAIiIZIoJgIhIppgAiIhkigmAiEim
      mACIiGSKCYCISKaYAIiIZCruCSAQCCAYDO75PUEQEAgE4n1IIiJ6DOnx/GEzMzO4ffs2AoEA
      Lly4gIGBAbjdbhQVFeHJJ5/EG2+8Ab/fj6eeegqVlZXxPDQREcUorncAFRUVuHTpEsrLy7G0
      tISFhQX09fWhv78fExMTqK2txZUrV3Djxo14HpaIiB5DXO8A8vLy8Oabb2J0dBRf+9rXYLPZ
      cPPmTQQCAVRXV6OqqgqlpaXweDwAAL/fDwAIBoMQBCGeocRFMBiE1+tNdhi7SDEu8frtN/yX
      LFI8V4A045LqNZRqXFK8hkBsccU1AWxubuLZZ5/FsWPHcOfOHXR3d6O0tBTf+9730NbWhvn5
      eeTl5SE3NxcAkJGREX5v5P9LhdfrRVZWVrLD2EWKcYlzO+npcf1IHZgUzxUgzbikeg2lGpcU
      ryEQW1xxPaOzs7MYHx+Hz+dDf38/bty4AUEQ0NLSAr1ej8HBQczNzeHSpUvxPCwRET0GRSgU
      CsXzBwYCASgUCiiVSoRCIQSDwXDmFgQBoVAISqVy23v8fj/vAGIgxbjYS4uNFOOS6jWUalxS
      vIZAEu8AgO0XSaFQbPs6LY2PHRARSQVbZCIimWICICKSKSYAIiKZYgIgIpIpJgAiIpliAiAi
      kikmACIimWICICKSKSYAIiKZYgIgIpIpJgAiIpliAiAikikmACIimWICICKSKSYAIiKZYgIg
      IpIpJgAiIpliAiAikiFBEOK/JSQREUmb2+3G8PAwEwARkVwIggCz2QyTyYTW1lYmACIiOXA4
      HLh37x6KiorQ29uLrKwsJgAioqNMEARMTk5ifn4eHR0dKC8vD3+PCYCI6IhaX1+H0WhEUVER
      nnjiCWRlZW37PhMAEdERIwgCJiYmYLVa0dLSsq3XH4kJgIjoCNnY2MDk5CQqKytx5syZXb3+
      SFEngFAoBLvdjsLCQmxtbaGwsDAuwRIR0cEFAgFMTU1heXkZra2tKCkpeeR7on4QzGKx4Je/
      /CUA4P3334fH43n8SImIKG5WVlZw584dKJVKdHd3R9X4AzHcARQUFOD+/fvIz8/H5OQklErl
      YwdLREQH5/V6YTKZsLm5iaamJhQVFcHr9Ub9/qjuAAKBALKzs3H16lX4fD589atfRXr67tzh
      cDgwNDSEkZER+P1+rK+vY2BgAJubmwCAmZkZDA0NIRAIRB0gERHtZrVaMTAwAKVSiVOnTqGo
      qCjmnxHVHcDU1BR8Ph8++OADAMD9+/fxrW99CxkZGdtet7KygkAggNnZWXi9Xty7dw9dXV14
      ++23cenSJdy8eRNqtRoOhwO9vb0xB0tEJHdutxvj4+NwuVxob29HQUHBY/+sqBJAQ0MDnE4n
      Tp06hTNnzgAA0tJ23zxotVp88sknMJlM6OjoQHZ2No4fP47BwUGYTCb09PRAp9PhtddeQ29v
      L4LBIIAHS5akeFfAuKInCAIASDIuqcUESDMuKV9DQJpxHWZMoVAIKysrGBsbQ2VlJVpbW6FQ
      KHbFEEtcUSUApVKJzMxMvPPOO8jPz0dWVhYMBgMUCsWu15aXl6O2thY2mw2hUCj87wqFAoIg
      bPs3IiJ6NI/Hg9HRUXi9XnR3dyM3NzcuPzemZaAnTpzA5OQkFAoF9Hr9rruAwcFBhEIhZGVl
      wePxwOv1YmBgAAqFAvX19Xj33XcxNzcHnU4HAOGJZEEQ9pxTSLZgMMi4oiT2OKQWlxTPFSDN
      uKR6DaUa12FcQ0EQsLy8jLGxMdTW1kKr1e45+vK4cUUdvcfjQUVFBT73uc/hnXfegcvl2vUs
      gEajgdlsxrFjx6DX69HW1oa5uTk8//zz4UeRXS4Xmpqaoj0sEZEsiWP9Ho8HPT09yMnJifsx
      okoAoVAIr7zyCsxmM4xGI1ZXV3Hp0qVdr1OpVFCpVOGvMzMzUVxcHP66vr4+DiETER1dgiDA
      arViamoKOp0O1dXVCTtW1HcAL730EsbHx1FaWoqSkhJkZmYmLCgiIjkSN2rJyMhAT0/PQ8s4
      xENUCUChUCAnJwe3b99GRkYGysrK8MILLyA7OzuhwRERyYEgCFhcXITJZEJTU9O+xdviLeo7
      ALvdjtLSUjidTiwuLoaXZhER0eOL3KjlMHr9kaJOAFVVVaiursb4+DhOnjyZkAkJIiK5EAQB
      JpMp/NzUYfX6I0WVACwWC959911kZ2dDpVJhYWFBksvYiIhSwebmJoaGhvbdqOWwRL0KaHZ2
      FlVVVairq0NdXd0j16ISEdF24kYtFosFra2tSen1R4qqFa+qqsKf/umf4tKlS1hbW8OPfvSj
      cBkHIiJ6tPX1ddy8eRPBYBC9vb1Jb/yBKO8A7HY73n//fayurqK6uhovvfQSy0ETEUVB7PVv
      bGygpaUl6lr9hyGqOwCbzYaPPvoIDocDU1NTuHbtGu8AiIgeYW1tDb/61a+gVCpx8uRJSTX+
      AKAIRVGdLRQK7WrwlUrlnsXgHoff799VWloKvF5v0iZnHkaKcUm1XosUzxUgzbikeg2lGtfD
      rqHf78f09PS2jVqkENdOUZ9RDvkQET2a1WrF7OwsSkpK0N3dLbnEFSmqyAYGBvDRRx9t+7e9
      NoQhIpIrr9eLiYkJ2O32A2/UcliiSgDHjx9Ha2srFhcXYbfbAfCOgIgI2F6yWa1W48yZMymz
      TD7qDWHsdjt+/OMfIxQKIRQKobW1NWV+SSKiRIjcnrGrqyslev2RYtoPoLm5GZubm3C73XA6
      nYc6sUFEJBWCIMBms2F6eho1NTXo6OhIyQ5x1AmgrKwM3d3dcLvdGBkZQV5eXiLjIiKSJLHX
      b7fb0dPTE7ftGZMhqpQlbkY8Pj4OvV6PQCAAp9OZ6NiIiCRD3Kjl9u3bKC4uTvnGH4jhDuAH
      P/gB5ufnMT4+DoVCwTsAIpINt9uN0dFRAAiXbPZ6vUmO6uCiSgAejwff/OY3MTs7C7VaDYCr
      gIjo6IvcqEWv16OqqirZIcVVVAlgYWEBfr8f9+/fx/379wEAv/mbvynpBxyIiA7C7Xbjzp07
      Sdmo5bBE1YI3NDQgFAphbW0NVqsVjY2NbPyJ6EgSN2oxm82SKNmcSFGvW7LZbLh9+zba29vx
      9ttvH4nxLyKiSJubm7h58ybsdrtkSjYnUtQJICsrCw6HA/Pz8/B4PPjggw+wsbGRyNiIiA6F
      IAgYGxvDwMAAGhsb0dnZeSSHfHaKehwnNzcXly5dgiAIOH/+PPLz8zkRTEQpb319HUajEcXF
      xejt7ZVFwy+KOgH4fD6sr69jdXUV8/Pz+P3f/31kZmYmMjYiooQRN2pZW1uT3EYthyXqBOBw
      OGA2m+HxeKDRaOB0OpkAiCglOZ1OjI2NobCwEKdOnZJlZWO32x19AqioqEBdXR2qq6vh8XhY
      B4iIUk4wGMTCwgIsFgvq6+uP/CTvXtxuN0wmEwYHB6NPAMFgENPT05iZmUF6ejq6u7sTGSMR
      UVxtbm7CZDIhLS0NHR0dyMnJSXZIh8rr9WJ2dhaDg4NwOp1oaGiIPgEsLS2huLgYX/nKV/Dy
      yy9jc3MTxcXFiYyXiOjAAoEAzGYzlpaWUF9fD7VaHbftbFOB3+/H/Pw8BgYGYLfbodVqceHC
      BZSUlESfANRqNaxWK37wgx/A6/WisLBw12t8Ph9MJhN8Ph8aGxuxtraGra0tZGZmQqvVYmZm
      Bk6nE83NzXyQjIgSKhQKYXNzE+Pj48jKykJ3dzeys7OTHdahEQQBFosFd+7cwcbGBurq6nDu
      3Lltk91RtcLimNH58+exsbGB4uLiPTPo3NwclpeXsbW1BZfLhfHxcXR2diItLQ02mw03b96E
      Wq2Gw+FAb29v/H5TIqIIfr8fc3NzsFgs0Ol0sur1C4KApaUlDA4OwmazQaPRoK+vb89VTlEl
      AJfLBaPRiOHhYVRWVqKsrAwtLS27NkDQ6/VQq9V45513YDAY4HK5YLPZYDAYYDKZ0NPTA51O
      h9deew29vb0IBoPhgAOBQBx+9fhiXNETBAEAJBmX1GICpBmXlK8hEH1cW1tbGB0dRXZ2Nrq6
      upCZmRlua+Idl5TOlVi2f2BgAMvLy6itrcVTTz2FsrIyKBSKPWONKgGUlpbi6tWrSE9PR2tr
      KwwGw56v83g8eP3119HT0wO9Xg+VSgWn04lf/OIXOHPmDARBQCgUOthvSUS0B7/fD7PZDJvN
      Br1eL5sVPqFQCMvLyxgaGoLFYkFxcTEuX74cbvgfJqoEYLPZ8Oabb2J2dhZTU1MoKirC1772
      tV3j+Hfv3kVOTg4CgQCWl5dx+/ZtaDQa5OTkoL6+Hu+++y7m5uag0+kAfFZSWhAESc4JBINB
      xhUlsXchtbikeK4AacYl1Wv4qLgix/pVKhV6e3sP5XdI9jUUN6MfGhrC/Pw8ysvLcfHiRZSU
      lES9UY0iFEWX3OfzYW1tbdu/VVZW7souq6urWFlZAQCUl5fD4XBgc3MTNTU1KCkpwczMDFwu
      F5qamradOL/fL8kHMbxeryQfC5diXFJtPKR4rgBpxiXVa/iwuPx+P0wmE9bX12EwGA51ZWKy
      rqEgCFhdXYXRaITJZIJKpcKJEydQU1OD9PT0mOKKKgEADy6Cy+Xac/XPQTEBxEaKcUm18ZDi
      uQKkGZdUr+FecYVCIayvr2N8fBxlZWXQarWHHncyruHKygpGR0cxPT2NgoICdHZ2QqPRbGs/
      Y4kr6jPm8Xjwd3/3d/jGN77BInBElDRerxdjY2PweDxobW1NSKdUahwOB4aHhzExMYG8vDz0
      9vbi2LFjB05AUScAhUKB2dlZfPe730VOTs6ecwBERIkSCoWwtLSEiYkJaDQatLa2Hvk2yOFw
      YGJiAuPj48jMzMTp06fj0vCLoj57OTk5+I3f+A24XC4UFBTwLoCIDo3b7cbk5CT8fj+6urqO
      fK9f/H2NRiPS09PR1dUV14ZfFHUC2NzcxIcffoi0tDSoVCrU19dHPdNMRPQ4QqEQFhYWYDKZ
      cOzYMdTW1h7pXr/b7cbMzAyMRiMAoK2tDXq9PmF1i2LaDyA3NxdOpxOLi4u7HgIjIoont9uN
      0dFRBINBHD9+/EjXHhMb/qGhIQSDQXR0dECn0yW8kx1TOegTJ05gamoKzc3NklvBQERHgyAI
      WFhYwOLiImpra1FWVnZkh5wjSzP7fD4YDAa0tbUhPz//UI4fdQKw2+147733kJ+fD4vFgpaW
      Fkku3SSi1GW32zEzMwOFQoHjx4+HHyw9arxeL6anp2E0GuF2u6HT6dDW1nbo+6xElQAEQYDT
      6URdXR2uXr364I1HeByOiA5XIBDA4uIiLBYLNBoNKisrj+Qws9/vD9fkF0szd3R0JG14K6pW
      /N69e/joo49gs9nwN3/zNwCAb33rW7wDIKID29zcxMzMDNLS0nD8+PEjWbJZEATMzs5ieHh4
      39LMyRBVAjh+/Dj0ej0WFxeh1+vDEzNMAET0uORQslkQBFitVgwMDGB1dRV1dXX7lmZOhqgS
      QFpaGt5//32MjY2hp6cHH330Ef7oj/4o0bER0RG0c6OWkydPHrlev1io7d69e+HSzKdOnZJc
      hdKoB/LLy8vhcrlQUlKC3/qt3zq0WWoiOjrEMXCLxYKGhoY9i0qmssgKnUtLS6iursbTTz+N
      0tJSSc5pRJ0A/H4/7HY7bt++jZ6enkTGRERHTGSvPycnB6dPn0ZmZmayw4qbnaWZ1Wo1zp8/
      j+rqakk2/KKoEsDk5CSmp6fx4osvIhAI4JVXXkFTU1PCnk4joqNDHOtfXV099JLNiSaWZr5/
      /z7m5+dRXFyM8+fPh0szS11UEXq9XhQUFKC4uBiBQACZmZlHcm0uEcVPKBTCxsYGJiYmoFKp
      0N3dnRKNYjTEhn9iYgKzs7MoKChAf38/6urqUup3jCrS5uZm3L9/H9/5zncQCoXQ3t7OOQAi
      2pff78fU1BQcDgeam5uPVPG2zc1NDA4OhhNbvEozJ0PUG8KEQiF4vV6kpaXFfeyOG8LERopx
      SXUzESmeK0CaccXjGoZCIdhsNoyPj6O2thYajebAnwmpfLbE0sxGoxG5ublobGxEQ0OD5K5j
      QjaEUSgUR26pFhHFj9vtxtjYGNxuNzo7O49Mr9/lcmFqaipcmrmnpwfHjh0DAMk1/rGSVneN
      iFKOWLJ5ZmYGtbW1aG9vT3pvPR4iK3SKTylrtdrw4hev15vkCA8u9a8SESVNZMnmo9LrT1Zp
      5mRgAiCimIm9/tnZWWi1WlRWVqZ8rz+y4ff5fGhra4PBYDjSC15S+4oR0aFzOp2YnJwMl2wu
      KChIdkgHItbkNxqNcDqdaGpqQnNz86GXZk4GJgAiikowGMTCwsKRKdns9/sxMzODwcFBOJ1O
      NDQ0oKWl5Ug9qPYoTABE9Eibm5swmUxIS0tDR0dHSlcBEMs2DAwMwGq1QqvV4sKFC5Kp0HmY
      mACIaF+BQABmsxlLS0uor69P6ZLNoVAIa2trGB4ehtlshlqtxuc//3lZNvwiJgAi2kUs3jYx
      MYHMzEx0d3en7HNA4u9iNBphMplQXFyMc+fOQa1Wp/zE9UHJ+7cnol2OSslmseEfGxuDyWRC
      fn4+zp49i9raWklWHkgGJgAiCtvc3MTU1FRKl2yObPinp6fDv0tNTU1K/j6JxARAROEVMTab
      Dc3NzSgrK0t2SDGLbPgnJyeRmZmJzs5O6HS6lB2+SrS4JgCfzweTyQSfz4fGxkY4nU7Mzs6i
      vr4eRUVFmJmZgdPpRHNzs+zH3oikILJkc0FBAXp6elKuvk0oFILD4cDY2BgmJibCK5UMBkNK
      r1Y6DHFthefm5rC8vIytrS24XC6MjIygq6sLb7/9Ni5duoSbN29CrVbD4XCgt7c3nocmohiJ
      JZu3trbQ2NiYkk+82u12TE5OYnx8HADQ1NSEpqYm5OXlJTmy1BDXBKDX66FWq/HOO++gvr4e
      2dnZOH78OAYHB2EymdDT0wOdTofXXnsNvb29CAaDAB6sy5XiBjOMK3qCIACAJOOSWkxA8uOK
      LNnc2dkJpVIp6WsIbI/L5/NhcnISo6OjCAQCMBgM28o2HMbvkOxruJ9Y4oprAvB4PHj99dfR
      09ODhoYGDAwMhL+nUCggCAKi3H6AiBLA4/FgbGwMHo8HnZ2dKVfGQVyhNDw8DJ/PF2742eN/
      PHFNAHfv3kVOTg4CgQA2Njbg9XoxMDAAhUKB+vp6vPvuu5ibm4NOpwMAKJVKAA8ylhTnBILB
      IOOKklQ27dhJiucKOPy4dpZs3mujFqlew0AgAL/fj/n5eQwNDcHtdkOv16OxsTGp1UdT9bMl
      CAI2NzextLQU/Y5g0VhdXcXKygoAoLy8HAqFAnNzc9BqteFJYJfLhaampm0Bckew2EgxLqk2
      HlI8V8DhxhVZsvlhjaYUr6G4obzY8NfX14e3mEz2swmp9tlyu90wm81YWVlBZmYmqqur45sA
      HhcTQGykGJcUGw9AmucKOJy4xF6/2WxGXV3dI0s2S+kaij3+4eFhrKysQKfToa2tDSUlJUlv
      +EWp8Nnyer1YW1uDzWaD3W5HdXU1KioqwnMlyb/SRBR3O0s2p8oYud/vx+LiIgYHB7G2toba
      2lo8/fTTKC8vl2QnUYrEIZ7FxUWsr6+jsLAQGo0GhYWFu5I7EwDRESKWbLbZbKipqUmZks1+
      vx9LS0sYHh7G8vIy1Go1Ll++jMrKyvAqIHo4t9uNlZUVzMzMID8/H6WlpdDpdA+9S2ECIDoi
      Iks2t7e3p8TTr8FgEMvLy7h37x5sNhsqKipw8eLFbYXamAD2JwgCrFYrLBYLnE4n1Go12tra
      UFpaGtX7mQCIUpw4UWqxWKDT6VKiZPPO0sxlZWW4cOECK3RGQRAE2O12LC4uwul0Ii0tDXV1
      dVCpVEhPT49ps3qeaaIUJda+GR8fR1ZWFk6ePCn5Xr9YemJkZISlmWPk9XqxurqK2dlZpKen
      o6KiAlqt9kDlLnjGiVJQqpVs3lmhs6ioCE888QSqq6s5ufsQgiBgdXUVFosFdrsdKpUKzc3N
      cdu2kgmAKIVE9vpToWTzzoY/Pz8fvb29LM38CA6HA4uLi1hdXYVSqYROp0NLS0vc75KYAIhS
      hN/vh8lkwvr6OgwGg6Q3L99ZmjknJwcnT55EXV2d5IepkkUc4pmfn0daWhpKSkrQ2dmJ3Nzc
      hB2TCYBI4kKhENbX1zE+Po6ysjJ0d3dLdrw8FApha2sLExMT4dLMJ06cgE6nYwxix9kAACAA
      SURBVGnmPUSWZVhbW0NRUREaGhqgUqkOZfmuND9FRATgQa9QLN7W2tqa1No3jyKWZh4bG4NC
      oUBbWxv0en3KPIR2mPYqy2AwGA59PoQJgEiCQqEQlpaWMDExAY1Gg9bWVsn2+t1uN6amprbV
      GzIYDClXaTTR9irLcPz48aTuwyDNTxSRjInF2/x+P7q6uiTb6/d6vZibm8Pg4CD8fn+4NDMb
      /s9Ertl/VFmGZEh+BEQE4LPibSaTCbW1taitrZVEI7GT3++H2WwOV+hkw7+bWJZhfn4eWVlZ
      UZVlSAbpfbqIZCiyeJtUN2oRK3QajUY4HA5otVrJlGaWgp1lGcrLy9He3i7JayliAiBKIrF4
      m8VigUajkWTxtsjSzJubm6ivr0dfXx9UKpXsG35BEOB0OjE/P4+trS1kZGRsK8sgddKPkOiI
      iize1tHRIbllkpENv1iaube3FyUlJZJLUofN6/ViaWkJS0tLyMjIQHl5+YHLMiQDEwDRIQsE
      AjCZTFhdXUV9fb3kirdFlma22Wyorq4Ol2aWc8O/syxDbm5uXMsyJAMTANEhEZ+OnZiYgEKh
      QHd3t6SeihUEAYuLixgbGwuXZr506RLUanV4/245crlcmJ+fx8rKCtLT08NlGYLBoOQmdWPF
      BEB0CHYWb1OpVJJp/EOhEJaXl3H//n0sLCxArVbLvjRzZFmG9PR0qFSqXWv2g8FgEiOMD3le
      XaJDsl/xtlhqticyto2NDQwNDcFsNkOlUuHChQuorq6WZcMvlmWwWCxYXV099LIMySC/q0x0
      SKRavE1MSkajEXNzc+HSzOJQj9waf7Esw/r6OpRKJdRqNRoaGmRRplpeV5roEEi1eNvO0syF
      hYU4c+YMamtrkZGRgUAgkOwQD40gCFhZWcHS0hLsdjsqKirQ1taW1LIMyZD8TyXRESLF4m37
      lWbWarWyqskfCoXgcrlgtVrDRdjq6uokU5YhGeT5WxPFmRSLt4mlmcfGxjAxMYHMzExZlmb2
      +/3Y2NjA/Pw8PB4PSktL0dLSIukndA8LEwDRAUmteFsoFILD4Qj3+BUKBTo6OmAwGGTT8It3
      PQsLC9jY2AgXYSsuLpb1ktadmACIHpMUi7e5XC5MTk5iZGQEAGRVmjkUCsHtdmN5eRnLy8sI
      BALQaDTQ6/WSWXIrNUwARI9BasXbxNLM9+/fRyAQkFWFTnGIZ2FhAV6vFyUlJWhsbER+fv6R
      Xb4ZL0wARDGQWvE2n8+H2dlZDA8Pw+v1yqbhF4e5xJU8OTk5UKvVKC8vT/pdWCrhmSKKkpSK
      t0UWanM4HGhoaEBjY2PS5x8STaxTZLFYEAwGUV1dja6uLtnMbcRb3BPA8vIyFAoFysrKYLFY
      sLW1hczMTGi1WszMzMDpdKK5uZlZ+gjzBYL4+P4cPh1ZQGlhDp7tNaC2PHUbJnEDFIvFkvTi
      bZENv91uR319PZ544okjXZo5EAhga2srXGe/sLAwnOw4xHMwcW2FLRYLrl27hsrKSly6dAnv
      v/8+Ojs7kZaWBpvNhps3b0KtVsPhcKC3tzeehyYJ+af7c/jrN34Ff0AAAEwvbeCPX3oShbmp
      VThLXEkyOjqK3NxcnDx5MmnFv3aWZtbpdEe6NHPkmv3FxUXk5uaiqqoKLS0tsnhC97DENQGU
      lZXhmWeewd27dwE8WJFgs9lgMBhgMpnQ09MDnU6H1157Db29veFiSoIgSPIpRKfbhzf+aRLj
      86torC3Fc2f0yMlK/p2LFM+XIDxo7AOBAH5pnA83/gAwOb+GBdsmcmtLkhLX45yrQCAQ7vU3
      NDSgrKwMCoUibuc92rgCgQCWlpZgNBphs9lQU1ODS5cuoby8HAqFAoIghM99PGISj5ksgUAA
      a2trWFxchM/nQ0lJCVpbW7dN6Erlsy/Fv0Mgtrji2pqlp6dvuw398pe/DKfTiV/84hc4c+YM
      BEFAKBSK5yET6qcfjOC9X00DAG6NLmJ104lvfqE7yVFJX2nh9vHY3Ox05GanRq8tsmRzcXEx
      Tp8+nZR142JpZrHhV6vVuHz5MioqKo5cj198YE1cs19QUIBjx46hqKgIaWlpcUtwtFtcE8Dq
      6iomJyfD+2LevXsXGo0GOTk5qK+vx7vvvou5uTnodDoACP9hCYIgyTmBfxqa3/b1jaF5/O6v
      nU5SNJ8JBoOSO19ijyM9PR3PnW3EjGUTk/NryM1OxxefbEZteRGUysNvuGI5V36/H1NTU9ja
      2kJLSwtUKtWhxyUIApaXlzE8PIyFhYVtNfkTfc0jr2GiiWv2xbIMCoUCVVVVaGxs3LVm/zDj
      ioUU/w6B2OKKa/RpaWlQqVQ4deoU0tLS0NbWhs3NTfzar/0aSkpK8MQTT8DlcqGpqSmeh02Y
      0qIcONy+iK9zkxhN6qgtL8Qfv/QkLKsO5GSlo7q0ICmNf7RCoRBsNhvGx8dRW1ublOJtoVAI
      a2trGB4ehtlsRllZ2ZGsyS+u2TebzfB6vSgrK0NzczPy8/OP7CS2lMX1k1VcXPzQkrf19fXx
      PFzC/avLHfj+W3exuuVGaWEOvv5sZ7JDShmFuVkpMekbWcahs7Pz0JdRijX5R0ZGYDKZUFxc
      jHPnzh2phl9cs2+1WmGz2ZCfn4+qqiqu2ZcARUgCg/J+v1+SM/terxdb7gBWN90oLcpBuSov
      2SEBeBCX1Laik+pt+n7nKtllHDweDzweT7g0c1FREdra2lBdXZ20v4V4X8O91uxXVFTEvGY/
      1T5byRZLXNI6oxJUrsqTTMNP8ZHMMg7iJLO4C1dOTg56e3tRU1NzJEoz+/3+8ISu2+1GQUEB
      1+xLGBMAyUYyyzjsrMmflpaGzs5O6HS6lC9UtnPNfn5+PiorK1FWVibJO3v6DBMAyUKyyjhE
      lmaemJgIH7+uri6hq4wOg9/vx+rqKpaWlsJr9qVQGI+ixwRAR5rf7w/3+g+7jIPdbsfk5CTG
      x8cBAE1NTWhqakJeXp4kNoV/HDvr7Eeu2Wed/dTDBEBHkthQDQ4Ooqio6FDLOHi9XkxMTGB0
      dBTBYDDlK3Tut2afdfZTHxMAHTl+vx9zc3OwWq2or69HTU3NofT6j1pp5r3q7HPN/tHCBEBH
      RigUwvr6OsbHx1FSUoLTp08jGAwmvLESq4UODQ3B7XZDr9enbGnmUCgEu92+bc1+ZWUl1+wf
      UbyidCR4vV6MjY3B4/GgtbU13PiKBQcTYWdN/vr6ejQ3N6OwsDDlesji72K1WhEKhVhnXyaY
      ACilhUIhLC0tYWJiAhqNBq2trQnvqe5Vmvns2bMoKSlJqYZfXLNvtVqxubmJvLw8GAwGFBcX
      c82+TDABUMoSyziEQiF0dXUlfMjF7/djcXERg4ODWFtbQ21tLXp6elBeXp4yDWbkmn2r1Yqc
      nBxUVlbCYDCEk1eq/C50cEwAlHL8fj+Ghobg8XjQ3d2d8NU9brcbIyMjGBoaAgB0dnbiypUr
      KfWQk8vlgtlsxsLCAoqLi6HT6cJVeUVSrG1PicUEQCllfn4eU1NTMBgMqK6uTuix/H4/JiYm
      cOfOHQiCgI6ODrS2tkqy/steBEEIny+lUomGhgacP3+ePXwKYwKglOByuXDv3j0olUr09vYm
      tBEWBAHT09O4c+cOPB5PyjX8YskJp9OJ8vJyPPnkkyl1t0KHhwmAJE3sxc7MzCS81y8IAmZn
      Z/GrX/0q5Rp+t9uNubk5mM1mlJaWoqGhASUlh78FJ6UWJgCSLJfLhaGhIWRlZSW01y8mmbt3
      72JjYwMtLS1ob29Hbq60NwASBAFWqxUmkwkejwc6nQ7nz5/nen2KGj8pJDmCIMBsNsNkMqGj
      oyNhPdnIhn9lZQXt7e146qmnkJ+fn5DjxYvL5cLY2Bg2NjZQWlqKzs5OyScrkiYmAJIUu92O
      W7duoby8HP39/QmZsIxs+K1WKwwGA86fP4+ioqK4HytexOEpk8kEpVIJg8GArq6uZIdFKY4J
      gCRBEAQMDQ3BZrOhp6cnIY2xIAhYXFzEwMBAeE+AF198UbJj5YIgYG1tDVNTU/B4PKiuruaE
      LsUVEwAl3fr6Om7fvo1jx47h4sWLCen1W61W3LlzBwsLC6iqqsIXv/hFlJeXx/048SBO6M7O
      zoY3TZfy3QmlLiYAShrxgS6/34/+/v6ETPKurq7CaDRidnYWarUazz//PKqqquJ+nIMSBAEW
      iwULCwtwuVzQ6/W4ePEiJ3QpofjpokN3GEs77XY77t69i5GREdTW1uK5556TZMPvcrlgNBqx
      sbGBiooKtLW1cUKXDg0TAB0qcWlnenp6QpZ2OhwO3L9/H2NjYygvL8eVK1eg1WrjeoyDCgQC
      mJmZgdVqhVKpRFNTE06dOpXssEiGmADoUIi9fpPJBIPBEPfeuMvlwuDgIEZHR6FSqXD58mVU
      V1fD7/fH9TiPSxAErK6uYnJyEi6XCzU1Nejr6+OELiUVEwAlnFjGoaCgAH19fXEd1xYbfqPR
      iIKCAvT390Or1Uqm3s3OJ3RbW1tRVFQEr9fLxp+SjgmAEkYQBExMTMBsNsd9aWdkw5+ZmYkz
      Z86gsbFREpOm4oTu7OwsfD4f9Ho9n9AlSeInkmK2sLyFuxMWlBbl4GRjNTIzlLteIy7trKmp
      ievSzsjSzGlpaTh58iRaWlok0ZveOaF7GKWqiQ6CCYBiMjRjw5/98CM4PQ/G1j/XWYdvf/kM
      0v55I6zIWv3xXNop/tzh4WFJlWYOBALhIR5O6FKqSUgCCAaDUCof9ApdLld4WVswGEQgEEj6
      Hy09vnc/mQw3/gDw6cgi5mybOFZRgPn5eczNzcV1aac4jHTnzh34/X5JNPyRE7oejwdarZYT
      upSS4poAVlZW8Oqrr6KxsRGXLl3CT3/6U6Snp0OpVOLKlSt45ZVXkJ2djf7+fjQ2Nsbz0JRE
      LpcLt2+Px7VWvxRLM+83oUuUquKaAPLz8/Hrv/7rGBgYgCAIEAQBL774In70ox9hZGQEFy5c
      gMFgwOuvv84EkKKeOdOAOxNLcLr9CIVCqFMBy+ZJNDU2QK1WH3iiU1wueuvWLTgcDrS2tqK1
      tTVpD0dxQpeOsrh+irOzs+FyuQA8GO7JzMwEACiVSvj9fpSUlCAjIwOCIABAeI12MBgM/5uU
      BINBeL3eZIexSzLjMlQX4c++cQE37k/DOjuB/pM6tLY0Q6FQwO/3IxgMPtbPFQQBCwsLGBgY
      wOrqKtra2nD+/Hnk5eUBwGP/vo97rlwuF0ZGRrC5uYnKykq0tLQgJycn/DMf9/c8aFyJJP4N
      HvR3izepxiXFawjEFldcE4AgCOHGXKlUYnV1FS6XCw6HA1VVVRgcHIQgCCguLgaAbWOmUhw/
      9Xq9kpyvSGZcgiBga3keFcoNPP+V58JDIOKG4rH2jPcqzXz58uW4Da3Ecq7EYae5ubnwhG6i
      CsZJ8bP1uNcw0aQalxSvIRBbXIpQKBSK14Gnp6cxPDwMANDpdMjJycGtW7dw9uxZaDQaXL9+
      Hevr63jmmWe2Bej3+5kAYpCsuKxWK4xGI44dO7brYatY/0jF0sx37tyBxWKBTqdDd3d33Esz
      P+pc7Sy5rNFooNFoEv55lOJnS6oNrVTjkuI1BJKYAB4XE0BsDjuuyPo9bW1tex472j9ScRvD
      27dvw2KxoKqqCqdPnz70nvbOCV2dTneoE7pS/GxJtaGValxSvIZAbHFJ64ySpMS7aufKygru
      3LmDubk5VFVVHXppZnH55vT0dHj5Jid0Sc74yac9xXNDdrE088TERFJq8rtcLkxPT2N5eRkl
      JSXo6OhgyWUiMAHQDpH1ew46Ju9wODAwMICxsTGo1epDrckv3r2Mjo4iOzsbDQ0NaG1tlUyR
      OCIpYAKgsJWVFQwMDBy4fs/O0sxXrlxBdXX1oTS+DocDRqMRW1tbqKiowNmzZ1FQUJDw4xKl
      IiYACg/3ADhQ/R632w2j0Qij0QiVSoXz589Do9EkvOEX6/HMzMwgPz8fer0eZWVlAB7/+QEi
      OWACOGS2DSe+8/NPMW5eRaOmFN++ehoVqrykxbO0tITx8fEDTfK6XC4MDAxgZGQkXOpDq9Um
      dHJ1Zz0enU6Hc+fOcUKXKAb8azlk3/n5p7g/ZQUA3J+y4js//xT/8bcvHHocgUAA4+PjcDgc
      jz3JK5Y/NhqNCIVC6OnpQWtra0IbYXH55uzsLMrKyliPh+gAmAAO2bh59aFfHwaz2Yz79++j
      q6sLra2tMb/f7XZjdHQ0XJq5s7MTjY2NyMjISEjjv1dv/+LFi+ztEx0Q/4IOWaOmNHwHAABN
      mtJDO7bL5cKtW7dQUFCAK1euxNyA+v1+TExM4N69e7tKM4sP68Q7XrPZDIvFApVKhfb2dk7o
      EsURE8Ah+/bV09vmAP7d1dPbvu90+/DR4BwAoL+jDnk5mQc+pjjcs7i4iDNnzsTciAqCgOnp
      ady5cyfhpZkjq28Gg0HodDoYDAYu3yRKAJaCeIjDftTb6fbhD/7yPVjXnQCAypI8/MXvXdmV
      BGKJa319HQMDA9BoNGhoaIgpHrE42t27d8OlmTs6Og5UCmI/LpcLY2NjWF1dRUVFBZqamuJy
      7o/C4/qHRaolF6QalxSvIcBSECnro8G5cOMPANY1Jz4enMOV07E13MCDP5obN24AAPr6+mL6
      oEZW6NzY2EBLSwva29vj/vSseJypqSkolUoYDAZ0dXXF9RhEtD8mgCNobGwMZrMZJ06cCK+H
      j0Zkw7+ysgKDwYCnnnoK+fn5cY0vcvN0tVqNJ598UpJ3gERHHROAhPR31OH16yOwrn02BPRk
      R13U7xeHe6qrq3Hp0qWo37ezJr9Op0N/f39cSzPvVWufm6cTJRfnAB4iGWN8TrcPH//zJPCT
      +0wC74wrEAhgYGAAPp8PHR0dMU3yLi8v45NPPoHFYoFGo0FPT89jNfz7jdOKpRncbjfUajV0
      Ot2hXuujME57WKQ61i7VuKR4DQHOAaS0vJzMmMb8P7hxB9c+/hRPnXsSF/qi71GLS0ITUaEz
      srefnZ29rTQDEUkHE8AhePPGOH7+oREAcPVcK77Q13jgn7m+vo7v/91b+Id7y8gvrcbgfx+C
      I5j5yJ8dCARw+/ZtGI1G5Obm4umnn4ZGozlwPADgdDoxOjoa3lmrr69Pknd2RPQAE0CCDZuW
      8bdv3Ql//bdv3YG+uhit2sfbAUtswAFgwKpEfuln9Xt+/qFx3wQQCAQwMjKCW7duITc3F/39
      /TEvC92L2NufnJyESqWCwWCI+7aORJQYTAAJNrFHqYc/+9FH+MrF9pjvBCYnJzE2Nobjx49D
      o9Hg+x/a4PJ7Hvoe8SGwW7duISsrC319fdDr9QceT3U4HBgeHg739sWVPFIbpyWi/fGvNQbD
      pmVMmFdh0JSiLcoevGGPUg92ly+mO4HI1T3PP/98uMTx1XOt2+4uXjz3WV0fseG/e/cugsEg
      Tp06hcbGxl0N9L1JC8y2LXQZ1KgpL3xoHJFj+wUFBdt6+4koBUFEicUEEKU3b4xva2y/8fnu
      qHrwbdpyfOPz3fh//nEIdpdv2/fGzasPTQDicE8wGMSZM2d2PYj1hb5G6KuLw2UlWrXl2xp+
      n8+HEydO7Fu2IfJ3ysvJwJ+81I/2+opdrxPX7TudTqjVao7tEx0RKZEAHqfnHW/iJG7k19EO
      4XyhrxG66mL8yfevbfv3xn0KwUXW7nnUw1yt2nIcqyzC9Xsm3L03BN+6GcHAg+WgJ06ceOhy
      sMjfyen2491PJsMJIHJD+IyMDDQ2NnIlD9ERI/kE8Lg9b6kR7wQiVwPt1ftfWVnB4OAgNBpN
      VA9zbTnd+Naf/Rhjw4MI+Dyo1erwyv/2b1FeonqsOHc+pcvePtHRJfkEcJCedzw9bLw9Wl/o
      a9w39vX1dQwODiI9PR39/f1RTaaazWa8/HdvYvjuPeSXVKGo8hiUWTm4M7mCK6cfnQDE3ykU
      CgG+LaiCVty6dQsGg4FP6RLJgOQTgFTsNd4eD+Jwz8bGBrq6uqJ6itdms2FwcBCLi4vIKVCh
      pqUX6Vk5MR/72dM6+O02jE/Nou9EF86c7JTkk41ElBiSTwDx6HnHS6u2PK4N/9TUFCYnJ3H8
      +PGoduZaWVnBp59+irm5ObS2tuIrX/kK0tKzMPVX78VUP8hut2NychI2mw0nm5vxpct9rLdP
      JEMpUQvIaFqOuecdj6dvE1XrY2VlBePj4ygtLUVTU9O27+21Icz6+jpu374Nk8kErVaL48eP
      o6KiYtt7HlU/CAAWFxcxNjYGpVKJ1tbWuE7qsl5LbKQYl1SvoVTjkuI1BGKLKyUSQKyGTcu7
      Vtz8p28+FXPvPd4XWFzPn5WVhZMnT+762Ts3hCnJVeDFkyrMz5mg1+vDK4JiiUscYjKbzdBo
      NNDr9Qn50PKPNDZSjEuq11CqcUnxGgIsBrfn07ePWnMfi1jvLiKrdZ46dWrfcX5xQxi/x4mN
      pRmYNqzQ5Z7CN//ll1BZWRlTjOvr6xgZGYHL5YJer8eVK1diej8RHX2HmgCCwSACgUDCs+Ze
      T9/ut+Y+VrHU9onsfZ88eRJlZWVwun1499NJALv3/HU57FiZNcK5bkVGdi4q9Sdw+smnom78
      A4EAlpaWYDaboVQqYy4NTUTyktAE8MMf/hC5ublQqVQ4e/YsXnnlFWRnZ6O/vx+NjYlbyjm9
      uL7t69622rj1/qO5u4ic4G1tbQ33vncO8bx+fQR/8XtXIAS8uHv3LpbGRpCt8CBX245cVXnU
      G8KIhd7m5ubQ1NSE06dPS+52mYikJ6GthMPhQG9vL+rr63Hv3j1cuHABBoMBr7/+ekITwM5n
      B8bmVuL2sx91d2G1WsMPcj3//PPbXrdzz99F6xq+9+NfoFhpR25uLq5cfgpf//q/jmpCF9j+
      7IBer0dHR8dBfz0ikpGEJoCLFy/CYrHgnXfewZkzZ1BSUoKMjAwIggDgweQv8GBoSPy3eNhr
      WlssoCZa3nDhr964hanFDTTUqPC7XzyFctX2WjvBYBDz1vVdr/vt507g9Y9GAQBf7m+GvqoQ
      VqsV9+7dQ3FxMfr6+qBUKncdMxgIPohPELC1PIdN6yxWVc149stPQ6fTidHjfKcm/P+7fkYw
      CLPZjPn5eWRnZ6OtrS28Z+/O1x4m8foFg8GkxbCXYDCY1POyHynGJdVrKNW4pHgNgdjiSlgC
      EAQBfr8fZ86cwdDQEKqqqjA4OAhBEFBcXAwA21b+xHMV0Ivndz87sHPe4Xtv3YBx9sFwzrBp
      Fd97awD/8bcvbHuN1+vF994a2PN1LzzZDOBBL/zGjRvIysrCuXPnHjq/8eTxOrz8s3+AaWIU
      acp0tHR04U/+8OsP7eWLIucTampqcO7cOUkN80Su1HB6fPjhe/fx0f05lBbl4F8/ewJdhvjs
      Nharo7BS47BIdbWNVOOS4jUEJLIKSKFQYGtrC2+99RYuX76MY8eOYXZ2FkNDQ3jmmWcSdVgA
      u5/aPVZZtGvidXzHWP7Or/f7d/FrcfgFwLaVPXsVrous0PmFziJknn8RJRU1+Fyn9pGNv/jQ
      1urqang1j9frldwfQ6S3bkzg7z95cL4dbh+++8Yt/O//w0WUq/KSHBkRRUpoAujr69v2b5/7
      3OcSdbhdxKd295t4bdSU4v6UNfz6pn1WCe18XU66gP/6ys+gys/Grz1zbtsqm52F6/7Ns50w
      lIbCNfk7OjrQ0dERVeMd+cxAS0sLurq6Yj4HyTI+vz1prm65sbrpZgIgkhjpdiPjZOfEq3XN
      iY8H5/AbT7Vva9i/8lT7nu//9tXT+M7PP8XI9CK2VuaxOufG8voxpGcFUFyzhC/0fZYAxMnn
      kCDAsbaI//KXn6KzvgSTGxkor9GjuCEPXQ9p/Hcu49xrD4BEieewTWNtKW6NLoa/Li3MQWlR
      7LWKiCixZFsA5qfXhh76tSg/U4EvdhbgD5+vR0lFDUrrmsOF13auNgoJAhyri1gc/QRr8xPI
      zC/FbOgYskqOYcsdwN++dQdG0/KuYwQCARiNRly7dg1erxenT59+ZOM/bFrGGx+NYniPn/c4
      xGEbh9uHWcsmvvvGLSxvOB/9xj18vs+AZ3sbUJCTCa26CN/60in2/okk6MjfAfR31OH16yO7
      iqX9t3cGtr1u51i/y+XCvXv3EAgE0NLSgrKyMnz/Qxvc9r334J2cnES1YgH3zGMPSjOrj0Gn
      UWPOurnrOK0RcwMjIyNYXFxEYWkVPp7PxH+7OYBGjRnfvnoaFfs0mm/fnMAP/uGzhBWPPRLi
      OWyTl52J33nhFH7nBZaUJpKyI58A8nIy8Re/d2Xb2noAyM/JhMf32T624hyA3W7H2NgYfD4f
      tFotqqurw6/ZqzKp1WrFjRs3sLq6imef7MSXv/h5LKx50agpRQjYcxcwu90Ok8kEq9Uanhf4
      Dy9/EB6Suj9lxXd+/umuVUmiN/5pYtvX8dgjgcM2RPKTsglgr6qZ+8nLycSV0w3h9/3BX76H
      lU1X+PtVpfn42tMtuHHjBgKBADo6OlBcXLxrLW3k6qKS3BAc1km8+eYiGhsbcenSpfCEcE/E
      eyJ3AbvUWY2NxQlsLAItLS3bHtyKdlVSony+z4B1hxsf33swB/D1Z09w2IboiEvJBLDfyp5o
      1tPvnBT2e5yYHZ+G1VwSVe2cqqJ0mMdmMT5mhl6vx9WrV8PPNezlC32NeLKlHAMDA1AqPejo
      2HvTl2hXJQHAl54wbBsCisceCRy2IZKflEwA+63sEXv50fB7nNi0zkKhSIPW0LxryeqbN8bx
      s//PCIXiwdDPky3luH37NqampqDX6/GlL33pkfX0I5dyPqwKKPDZaiPx2YV/d/X0vq99/qwB
      zdrKuO9OJiU+fxC3xxexuulGl0GNmvLCZIdEdOSkZAI4iJbqPPhWJuH0AcXVeigzsvAbl7u3
      vSay4qff48R/+sv/G0+3q3D6RCu+9KVHl2YWG/7c3NyolnI63T7cGV/CqJSCJQAACY5JREFU
      Ex0a/PvffCKqO5l47k4mNT5/EN95/RNcv/dgiC8vJwN/8lI/2usrHvFOIopFSiaA/Vb2iHY+
      jSuurx8bG0NpaSl+/J9/Hx8PLWBl04XVTTfS09PgdPvCDe+EeTV8h+BYW0JWbiHq257Gc889
      /EG2lZUVDAwMoKCgAH19fVE9jh3rcJbT7cMHd2cebB7/iLmPVDVn28SnI59NSDvdfrz7ySQT
      AFGcpWQC2Gtlj9gQRj6NGxIEPHtcBV2pEnq9HufPnw8/hftUd3244f14cG5baeaN+VEsjn6K
      jOxcVNQfR66qHD2dLfvGI27ZWFBQgP7+/pjqg8QynHWQuQ8iop1SMgEA21f2RPr5h8ZwtU2v
      cxP/b+AYXv8vv7PrdXuVZv5X//6vMDczjprKUvzLf/EFDFseLBO9eq51z+GWyKGeWBv+xxGP
      uY9UUFdRhNMt1duGgJ45c7R+RyIpSNkEsJf19XVYTaNwuH3IK65EUaUWhQXZD31PSBCwaTVh
      a9kMZXomVDVNCBWrsSXk4Xt/uPcwTuTkbrRDPft51HBWrGJZHitVmRlKfPvLZ9DXrnkwCdyo
      Rk0ZJ4GJ4i1lEsCwaRnjcysIAcjNztjWuK2srGBwcBBZWVn4+otP4ycfjIfft98SybOtNfj+
      T/8eM+NGKNMzUappQl6xOvz9vdbhiw1/POv0PGw4a6dHJYujNESUmaHE2TbNo19IRI9NEQrt
      tX3K4fL7/fvuB/DmjXG89sEwNp3bH8pSIASlbx0t6mzkFxXjyud60NVUCwAwmpb3XSL5i49H
      8YPXr2F5YQrH9ZU423saJRU1+GjQjOGZz+rqdOor8T+99KB3b7fbcffuXaSnpz/0WYHD6H0/
      mASeRkZ6+q5k8e6nk/juG7e2vf53v3TqUIaIWLM9NlKMS6rXUKpxSfEaAhLZDyAedm7ADgAB
      nxvOdSu8zk3kFVdicK0EWPPi5szH4Zo4kUskxRVB+moVFswz+F/+4icICQJUVfWYE6rxu8fb
      0aotx8nmml3r8IPBIG7dugWXy4Wurr0f4BLt1fv+t184BbNtc9veAAeVl5OJyyfrJfnBI6LU
      IukEELkBu7gsM02ZHh7f30ksuSD+t76qGLdHF+BYW8SmdRaq3DQUlNWgoKwGacoHdxxicbYK
      VV649o64gcvg0hI6OztRVlaGN2+M4+cfPqjrc/Vc67baO7YNJ/78J/+0a4L2f/3Bh+Gv41Gw
      7VHiPZ9AREebpBOAvloF57oFro0VpGdlhx/c2o/T7d+2BNRsmsaGZQZBvw8FZTUorjPALyi2
      vadRUwrbhhPf+fmnGJtbhjrHg/5GFXp7uqDX65GVlbXrTkT8/2BQgEFTip9eG8LE/NpDf5ed
      BdseNqfxuGKZTyAikmQCELdBtNlseOnp4/jAuAFFWho+13kMqvxs3Bye33OS1hcIIiQIcG0u
      Y9Nqgt/jQn5JFVRV9VBmZCFNqcTFExp8cNeE3KwMfPVSB1q15fgPL3+ATwdGYV+Zx5qqHEXl
      GvwLjSZcDG5kj5r7kQkhTaHY9f2H2blzGPD4E7Y7H3rbb3nsQbAsA9HRJKkEELm8Uq/Xo6ur
      C7YNJ6bWHozNzyxtoKI4b8/Gv7ggG4sLC1hfnAw3/BX1x8ObtwAPEsQ/3jEBAJwePwBgybqM
      69c/RHp2IcqOtUGRlhZzJU4hinn0yNVIOzeSAR5vTf/ORJKIYSaWZSA6uiSTAN5//30UFBTs
      Wl75nZ9/uq1O/l68zk0sLhlhs1r3bPhFke100O/FX/1fP0OaAihU68NzAsDuSpwtj5jALcrL
      wjG1CuPmVRTlZW2bCwCAly534PMJGP/fmUjisS/ATizLQHR0SSYBXLp0ac9/f1hv3OeyY8My
      A7d9FXmqStS09O7Z8EcS9+v1uRwortIiLWP7g2K66uJdlTjbtOXb6vo31ZXhl8Pz4e//+oW2
      cAPvdPvwB3/13raJ2Od6Ddt+3s6NZcTXccKWiA6TZBLAfnbWyQcerAjaWJqBa3MZuUXlqG46
      jYzsh29eEhKEBxPKm8soKKtFQVktFIrtdwUA8MxpfXgrxtUtN777ixvhpaF//q3L4e+Jzxqo
      CrJx7fYMfvgP99GoKcW3r55+5ESsuLHM2D9PAudlZ+z5up3j+zvttUNZvLEsA9HRJekHwXau
      rRcbfueGFTkFJSiubkBm7sM3cAEe3ClsLc8hO78Y+aXV+76usiRv20Rs5DaNAHBcX7lrm8Zo
      XvM4Hja+H/mgx8MeeouXbZPA+5Rl4MM6sZFiXFK9hlKNS4rXEDhCD4KJxc8iG/6s3EJU6k8g
      p3D/HbNEfo8TWzYzAKBU0wJFWtpDX//FJ5q39cKj2aYxUVs5Rju+fxj7ArAsA9HRJOkE4HLY
      sTJrhHPdiozs3Kgb/shx/qLKY2jUVqO7qQrvfToJu8u37/vSlbufEXjUNo2xbOVIRCQlD+8S
      x9n169fxxhtv7NpsfSeXy4Xr169jaexTZCs8KDvWgurmM9sa//z9NkxZt8I2fQ/pmTkoP9aC
      7lYt/vi3nsRvPX0c/8e3n9n3fXtNwn7rhS4c11ciOzMdx/WVe27T+O2rpx/5msdxdcd4fiLG
      94lI3g5tDmBmZgZjY2Nobm6G0WjEc889F/6eOAcQCARw+/9v73xaUgmjOPzYwKDCpRZSjNHF
      MJA2MSARuAn8Fn4EP5RrP0VwV7qx4l5okFr0D4SoCBEaZHqlRYxUV2Hm3pw52Hm2jvAwP8bz
      znucM8fHeJ5HPp+nWq3ibP7k6OQSf/zCtrPG08gH3pqr13dDzm8f2dpY5ezihj+/Tzk82MP+
      sT495nNj9WH4zK/TKwD2dzfpX9/PPTbtPb55+/tpe81C92njIdFLaoZSvSRmCPG8EisA3W4X
      x3EolUq0220ajcb0syAI6Pf79Hq96Q//zk60f5qERcMYg+u6XzKiOWQZAk4KvUjjIdFLaoZS
      vSRmCEKbwNlsltFoxHg8ZmVGM9bzPGq1GuVyOVLQ4cC2wWCA67oUCoVFaCuKoiwtid0B+L5P
      q9XCtm3q9fqHFX4QBGQymcgVPhwZUSwWqVQqi1JeigqfFLpKi4dEL6kZSvWSmCEIvQPI5XI0
      m02MMdj2343YqKv+TqcD8N+vYlQURfnuJFpSLcvCsqzY39PtHkVRlK8n1SeBg+BtIqcx5p8K
      w6JRr+hMJhOAmf2dNJF4rkCml9QMpXpJzBDieaW6qfZ+/MO8dwKnjXpFwxgDIPKCkHauQqR5
      Sc1QqhfIyzAkqtcrO8bxftx+Rg0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Total payment and medicare payment' width='384'>
      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
      4t577+Xbb7/F39+fqKio6153bKk9Ly9P/62xoaGByMjIDre/lvbq6mg/RUVFbT58O+Lh4UFN
      TQ0VFRWkpqbqr3lC85v27NmzPPvss0Dz5FtjY2On9l1UVISfn1+n6h8wYID+w7+zr1cLFxcX
      NBoNFy5c4K9//SsTJkzA0dFRf1lq4sSJbNq0iaqqKo4cOcKmTZuuWXfL61daWsqxY8c4duwY
      ADY2NvoznSu3FcoQGBiIhYUFMTExLF68mJycHPbt20d4eDgVFRVs3ryZ+fPnM2TIEI4cOcKw
      YcMYOXIkly5dApr/n1dVVTFt2jSio6NZv349P/30E25ubgQEBNCvXz98fHw4duyY/j3n5ubG
      pUuXGD9+PB4eHnz33XeMHDmSQYMGceTIEcrLy5k9ezavv/46Dg4OzJ8/n+DgYCO/UsZ3QwOA
      SqVCq9VSVlaGk5MTp06d0l8XtrCwaHN5IyYmhrVr1+Lp6Ul6ejqffPJJp46RkJCgv74fHx+v
      f96WLVv028ycOZOlS5eSnJzM888/3+navb29eeaZZ3BwcECn01FeXn7VhGxrjY2NaLVazMza
      XinrqK72DBgwgNjYWGbNmgWg/0BsT1RUFBs2bGDMmDFtPtR8fHxwdXVl3bp1mJmZUVtbi1ar
      ZcCAAZw5c4Zp06ah1Wppamq6ap/Dhg0jNjaWadOm6b85d1R/62N29Hp15MCBAwQFBREbG8uC
      BQuYPXs2tbW1xMTEAM2TfHfddRfr168nMDCQfv36XfN1a+Hn50djYyOPPPII0PzhcK3nXvk+
      FD2vf//+eHl5YWdnh6enJ0uWLOHBBx/k73//O6tWraJ///44OztTWVmJg4MD69ev57PPPmuz
      j5KSErKzs/WfN3Z2dmzbto177rmH48ePM2PGDE6dOsUvv/zCgw8+yNtvv83jjz/Oxx9/jFqt
      ZvLkyWzcuJFHHnmE/fv3M27cOL7//ntsbW1xdHTE3t7eSK+OsnRqAGj9wfDII4/w2GOPERQU
      RGpqKq+88goAo0eP5o9//CPp6elMmzaNyMhI1qxZg5eXF2VlZdcNaqxduxZHR0fy8/P164EH
      DRrEX//6V+rr6yktLeXuu+8GwNLSkltvvZWkpCTc3NyuW3PLnx9++GFWrFjBoEGDuHTpEg88
      8AABAQFXPa9l+1tuuYU//vGPeHp68re//U2/TUd1tbefiIgIvv76a5566inq6+tJSUm5atuW
      AWb69Om8/vrr+uv3LXW4ublxyy238Ic//AFPT0+KioqIjo7mvvvuY+XKlRw4cICioiJ9krK1
      JUuWsGrVKvbs2UNRUREvvvhip+rv6PWaOnWq/ueFhYU8++yzaDQaLC0tWbduHdnZ2fztb3/j
      1KlT5Ofnt/m2ftddd/HBBx/w/vvvt3u81r9zy7+nTZumv7SkVqtpbGxk48aN7b7WcPX7sHW9
      wjjUajXTp08nKSkJFxcXfHx8CA8PZ926dVhZWekXNLTW8uXsrbfeYv/+/SQnJ2NpaYmvry/b
      tm3jxx9/5OGHH+b48ePMmjWLLVu2MGvWLGJiYsjKyqK+vh4nJyeqqqoYO3Yst956K3v27MHf
      3x9/f3+DTlqbkg5zANdSV1fHxYsX8fb2xsLCQv94Q0MDpaWluLm5YWZmRmlpKVqtFldX12vu
      Lzo6mv/3//4fdnZ2ODk5tblsU1BQgJ2d3VXX7P75z38ydOhQoqKibqj21mcwV36zb09ZWRkW
      FhZtjn+tutqj0+koLCzExsbmpq491tfXU11djaOjo/41ampqoqCgAHd39zb/L9r7PWxsbLC0
      tLyh+q/1ej366KO89tprqFSqNn+Ja2pqKCsrY8CAAW0G4srKSv785z/z4Ycf3vBlm6qqKlQq
      VZv8REeufB+K7nOtyd7vX75f/+eysjK2bt3K8uXLeeaZZ/D09OTkyZN88sknLFy4kDvvvJPE
      xES8vb357rvv2LlzJ5999hmPPvooOTk57Nmzh4cffhiATZs2UV5ezpEjR3jttdfIzMxk27Zt
      fPrpp/z+97/n448/1v975cqVBAYG6hcBzJ8/n+zsbKKiooiJiSEgIIBt27axZMkS/WrDvqxL
      A0B3i46O5pFHHsHT07NT2z/11FNotVpef/31br0jobgxjz76KB988EGntt2/fz+ffvopjz76
      qH55pzA9nR0ArpSXl4eXlxdmZmbU19dTX19P//79KSkp6fAsvoVOp6O0tBQXFxcaGhpYu3Yt
      kZGR/M///E+Hz6moqKB///7t3iCuvLwcGxuba35h6isUMQDcqIaGBvmfZ2KamppQqVTyjVzc
      lPr6ehISEtrkXETXmeQAIIQQ4ubJ1zEhhOijpB+AEKLT9n6/vcOfzZwzvwcrEd1BzgCEEN3u
      ww8/1Gdsfv755w5vThgXF8ehQ4f44YcfaGxs7NKx4uPj+ec//8mXX355zVxPV5w/f75b96c0
      cgYghOh2mzdvxsXFhXnz5vHGG28wf/587O3t2b9/P5MnT2bo0KH88MMPHD16lFGjRunvMHDs
      2DFSU1P53e9+x969e6murmbu3LmcPXuWuro6PDw8SEpKoqGhgXvvvReVSkVcXBxBQUFkZWWx
      ZcsWBg4cyPnz54mKiiIzM5OpU6eSk5NDeXk5aWlp1NTU4O7uTklJCQsXLuT06dPExcVxxx13
      UFBQQFZWFlqtluDgYP7617+ycOHCdm8J0xtIT2AhRKdlpp7t8GdDgobr/3z69Gmys7NxcnIi
      Pz8fDw8PPvnkEyZNmsTGjRtRq9UkJibi7OyMnZ0dJ06cYOjQobz33nuEhYXh5uZGeno6BQUF
      ZGZm8umnn1JeXk5tbS3JyclcvnyZ8vJyAgMD9bdYz8nJwdnZGWheOrplyxY0Gg0qlYrvv/8e
      rVbLsWPH0Ol0pKenU15eTr9+/XjjjTeYNGkSn3zyCdXV1VhZWfHbb78xZMgQjh07xowZM666
      nUpvIZeAhBDdztLSEhsbG3bv3q2/Dcr58+fZs2cPHh4eXLx4kfvvv7/NvazOnTvHhAkTuOOO
      O6ivr+enn37CwsKCpqYmbGxsWLduHVqtlrS0NIqKitr0D8jPz2f06NHcf//9bN26lYqKCior
      K7nvvvvYsWMHWVlZDBo0iFGjRjF8+HDGjh1LQEAA5eXllJeXs3fvXv2tpufPn8+wYcNwd3fH
      ycmJyZMn9+yL14NkABBCdDu1Ws3UqVPJyMjQ3y9s/PjxuLq6olKpCA0NZf369ezYsQNAf9uU
      vXv38tprr3HmzBksLCzIysrS769lHyqVCg8PD/2cQUuryjvvvFN/v7JLly7R1NSEr68vtbW1
      zJw5U19b6xS6nZ0dHh4e+Pj4tGkyA823aGlsbLzmrUtMneQAhBCddrOrgMrLy7G3t8fMzIzL
      ly9jYWFB//799T/XarVUVFTg6OhIeXk5/fv3v6olakNDA7W1te3eQwia75ar1WqxsbEhPT2d
      l19+mbfffvuatz25fPky9vb2V92ipKmpicuXL+svLfU2MgAIIXqtnJwc1Gr1Vd3sRDMZAIQQ
      oo+SOQAhhOijZAAQQog+SgYAIYToozpMAufn5/dkHUIIIbrZgAEDrvnzDgeA6z3R2PLz8xVb
      Y11dXad73vY0pdam1Lqgc7VVVlYCdLg00VBa1sK31/ikNx7XWO8TUzxuZ77Em+y9gDJSkkk6
      HmvsMoQJGDtxCs6u1+461R0St8WirWgw+HGEaRh4SwB+EcOA5jxBVVWVvjd6ZWUlVlZWHTa2
      0ul01NbWYmZmRstCzRtto9oZihwAjh49iq+vL97e3iQlJRESEkJ2djbW1tZ4eHgYuzwhhOi0
      iooKFi9eTGBgINbW1ri6upKRkUFOTg7vvvsuPj4+HD16lG+//Zbi4mL69euHpaUlubm5vPDC
      C3z66aesXLnSIFkGxQ0AWq2WxMRELly4wD333ENSUhJ+fn78+OOPLFu2TL/db3laDp+Vb1ui
      E479fNO7GOHvzrplUd1QjOhrGhsbsbGxYfLkyezfvx8zMzMiIyOpqamhtrYWgIiICCIiIliz
      Zg333nsv77zzDg8++CDbtm3DysqKiooKg9SmuFVAaWlpjBo1iurqanQ6HQ0NDbz99tvMnTu3
      x683CiHEzdJqtWi1Ws6dO4e1tTV2dnZkZGRQVVXV5rJORUUFOTk5hIaGMnv2bHbv3s2FCxc4
      e/Ys0dHRFBcXd3ttihsATp06RVpaGmVlZWRkZGBhYcGcOXOIjZXr/UII05OZmUlwcDArVqwg
      Ozub+Ph4Hn30UaZPn05ycjKpqakAvP/++zz66KMAzJkzh/DwcP73f/8Xe3t7Ro0aRXl5ebfX
      priv1LW1tTz44INUVlayd+9eVCoVISEhZGRkcPbsWYKDgwEY723GSPv2J1CEaO1mJ4GVvEJJ
      KF94eDgJCQmsWbOGVatWYWtry6uvvoqXlxdLly5l69atBAYGMnToUCIiIvTPa7kVdVlZGfn5
      +QwdOrTbazPZewH9sn8ftZWXjV2GMAE9MQBUVlbKKiDRRutVQF11s8tAu5wDULohQcMlB9AF
      Sq1NqXXdiJH3REoOwMBMcT2+kiluDkAIIUTPkAFACCH6KJO9BCRJ4N6pp1K7hiBzAL3P5Cdm
      t/v4lcneFlVVVZiZmdG/f380Gg1WVlb6NpVmZsr7vq24AeDIkSNUVlYybNgwhgwZQkNDAwcO
      HKCpqYlp06ZhZWVl7BKFEH3MZ599xrlz5zh8+DCrV6/mww8/1Cd7X3zxRQC++eYb9u3bh7u7
      OwsXLmT16tX4+fnx2GOP8dFHH/Hyyy8b+be4muIGgNzcXH0IQqfTkZCQwOjRo3F1dW0z4SRJ
      4F6qG1K7N0MSv6I9DzzwABYWFixYsIAJEybw5Zdf6pO9LbZu3cr999+Pv78/6enpLF26lB9+
      +IG3336bO+64A41Gg7W1tRF/i6sp7pzEzMwMe3t7brvtNtLS0qirq2Po0KE4OjpKElgIYTQ7
      duxgzpw56HS6NsneFlVVVdja2vLaa68REBDArl27MDc3p7CwkIMHDxIdHW284juguAGgRWFh
      Ifb29jQ0NNDU1GTscoQQfdzXX3/N/ffff1Wyt7y8nIKCAnx8fAgNDSUwMBCVSsWGDRtoamoi
      PDycu+++m6qqKmP/CldR3Ffq0tJStm7dSnV1NQsXLsTV1ZWPPvoIOzs77rzzTuzt7QFJAvdW
      pjwJLHqvy5cvs3z5cszNza9K9hYVFVFWVsYLL7zAW2+9RUBAAIGBgSQnJ/PEE0/g7u7Om2++
      yYoVK4z9a1zFJJLATU1NaLXaNvfOliRw76TEAUCSwH1XyyogUwyg9ZoksFqtRq1Wt3lMksBd
      o9TalFrXjZAksOH1hveJkih2DkAIIYRhyQAghBB9lElcAmqPJIF7j7ETp2BjZ2/sMm6azAH0
      ftfq86vValGpVB327m3p82ttbW3QPr83QpFnAIWFhfruN2fOnAEgJSXFmCUJIYReRUUFc+fO
      5aWXXmLNmjXExsYyYcKENsGwhoYGJk6cyKpVqzh48CArV65k0aJFpKam8tRTT5GXl2fE36CZ
      Is8AioqK0Ol0uLq6kpSUxIgRI0hMTCQoKEi/jSSBe5EeSv++9FAUoYPde+RYone7ss9vYGAg
      f/vb39pkljIyMhg2bBhLliwhJCSEL7/8kgcffJCtW7catM/vjVDkAACwf/9+zpw5Q25urrFL
      EUKINq7s8+vs7HzV5RwvLy/mzZvHJ598gouLC7Nnz2bXrl0AlJSUEB0dzfvvv4+rq6sxfgVA
      oZeAAKKiorj//vsZOHCgsUsRQog2rkwDNzU10djYSGNjI1qtltTUVAoLCwkKCmL58uVcvHhR
      3+f3gQceMGif3xuhyDMAlUqlnyS5cv1/C0kC9x4tk8CyvluYiivTwLt27SI+Ph4ADw8PUlNT
      mTlzJv/4xz+oqalh9erVwH/7/BYUFBisz++NMIkkcHskCdx7KH0AkCSwaNEdfX5vhCSBOyBJ
      4K5Ram11dXXGLuGmSRLY8EzxlgxKptg5ACGEEIYlA4AQQvRRJnsJSJLAvYuTiyvjJk01dhk3
      ReYARItrJYYrKyuxsrJqc3djaL6sZm5uflViWKfTGSwxrLgB4MoewJaWluzcuZM5c+YYPTYt
      hBA3oqKigsWLF+v7B7u6upKRkUFOTg7vvvsuPj4+VFRU8Je//AULCwvef/99Vq5cSW5uLq+8
      8gr/+Mc/ePLJJ/Hx8TFIfYobAL7//vs2PYDT0tLIysoiIyOjzZIpSQL3Nhdh99ddfrb08hVK
      dGVi2MzMjMjISGpqaqitrQXAxsaGDRs28PzzzwOg0Wj0iWELCwuDJoYVNwdwZQ/gxMREHnjg
      ARISEoxdmhBC3JArE8N2dnZkZGRQVVWlv6KhVquxsbHRP2f27Nns3r2b3NxcUlNTiY6O1t8b
      rbspbgBo3QNYq9WSmZnJ/v37SUtLw0QjC0KIPurKxHB8fDyPPvoo06dPJzk5mdTUVLRarf5z
      r6mpqU1i2M7OzqCJYcVdAoqMjNT3AA4ODmbSpElMnDiRQ4cOkZ2djb+/PyBJ4N6mN0wCC3Gl
      KxPDtra2vPrqq3h5ebF06VK2bt2KWq3m888/x8nJia+++orFixfrE8N5eXlcunTJYIlhRSaB
      2+sBfCVJAvcuSh4AJAksblR3JYb7ZBK4vR7AV5IkcNcotTZJAneNJIF793ENTXFzAEIIIXqG
      DABCCNFHKfISUGdIEth0Kfl6/82QOYC+afITs/V/vjLl29TUhEqlwszsv9+1q6qqMDMzo3//
      /mg0GqysrFCpVGi12jbb9QRFnQFoNBoOHToENE9gXLhwgeTkZADOnTtHVVWVMcsTQogOvf32
      2zz33HPce++9XLhwgfr6eiIjI9m5c6d+m2+++Ya//OUvvPLKK5w9e5ZFixbx5JNPkpmZyXPP
      PdfjNSvqDECj0RATE4OPjw9lZWU4Ozvzyy+/MHDgQA4cOMDDDz+s31aSwKbs5lK/7ZF+v8LY
      SktL26R8169fz7x589pss3XrVu6//378/f1JT09n6dKl/PDDD7z99tvccccdaDQarK2te6xm
      RZ0BAEyZMoUDBw7o//u2225j/fr1TJs2Te4FJIRQrNYp35SUFE6cOIGrqyvnzp3Th1irqqqw
      tbXltddeIyAggF27dmFubk5hYSEHDx4kOjq6R2tW3ABgYWFBcHAwp0+fBsDf35/BgwczbFjP
      deERQogb1Trle+7cOebNm0dWVhYFBQVcvnyZgoICfHx8CA0NJTAwEJVKxYYNG2hqaiI8PJy7
      7767xy9zK+oSUIvIyEj27t2r/+/+/ftftY0kgU1Xe5PAvXWdteg7oqOj9Snfxx9/HHNzc7Kz
      s6mtraWoqIiysjJeeOEF3nrrLQICAggMDCQ5OZknnngCd3d33nzzTVasWNGjNSsyCdwZkgQ2
      XaY2AEgSWFxL61VA3a1PJoE7Q5LAXaPk2kydJIENT5LA3UtxcwBCCCF6hgwAQgjRR5nsJSBJ
      AitXb036Xo/MAfRNN5oE1ul0NDU1YW5uLkngFj/++CMNDc1/eU6dOsX58+fJzDwzN5kAACAA
      SURBVMwkLS0NgKSkJGOWJ4QQ19SZJDDAiy++yB/+8AdJArf266+/4unpSVhYGHv37mXcuHE0
      NDSQmJjIE088QVJSEiEhIfrtJQmsZN2b9JWUrzAFnUkCJyYmUl9fj7OzsySBWwsJCeHs2bOc
      P38ePz8//eMTJ07k8OHDRqxMCCGu73pJ4KamJh577DFmz55NYWEh48ePlyRwC7VajYWFBceO
      HWPs2LH6xwMDA8nOzu4VDUOEEL3X9ZLA+fn5PPTQQ2RmZlJYWIhGo5EkcAszMzNCQ0PZs2eP
      fi21mZkZKpWKmTNn8sEHH7TZXpLAytWVSeDeus5a9B2dSQI/8MADAHh5eTFo0CBJAneVJIGV
      q7cNAJIEFtciSWAjkCRw1yi5NlMnSWDDkyRw91LMHIAQQoieJQOAEEL0USZ7CUiSwKartyaF
      ZQ5AdGTgLQH4RTT3NGloaECj0WBvbw80zx9ZW1u3uZym0WjQ6XSo1Wp0Oh21tbVYW1vrG8t0
      V3MsxQwAp06dwsnJiYEDB1JUVERaWhpjxoxh3759WFlZER4ejoODg7HLFEKILisuLmb58uW4
      uroyefJkHB0d2b59O6WlpXz99ddYW1uTkJDA+vXraWpq4pFHHmHHjh3k5ubyyiuv8OGHH7Jy
      5Up8fHy6pR7FDADJycnodDoWLlzIr7/+SmFhIUFBQajVakJCQvjiiy9Yvnw5arUakCSwaet8
      UniEvzvrlkUZuB4hekZiYiK33XYby5cvZ9myZZibm/PRRx+xbds2fv31V6ZPn86RI0d45JFH
      GDNmDKtWraKhoYEHH3yQrVu3YmVlRUVFRbfVo5g5ALVajbm5OXV1dVRWVuq/7avVary8vAgI
      CKCkpMTIVQohRNdFRkZy5MgRFi9eTG5uLubm5qjVahwdHdFoNADMnTuXjRs3snz5cmpra5k9
      eza7d+8mNzeXs2fPEh0dTXFxcbfUo5gBAGDkyJHs2rWrza0gWhQXF2Nra2uEqoQQonv069eP
      N954g6effppRo0Zha2tLUlISe/bsITg4mNTUVNzc3Pj3v//N7373O8aNG8ecOXMIDw/ngQce
      wN7enlGjRlFeXt4t9SjmEhDAsGHD2Lx5M6tXr2b37t1A8ylTYWEh7u7ubXoDSxLYdJlaS0gh
      uotOp2PDhg2Ym5vz3HPP0djYyGuvvcbo0aMZMmQIX375Jc7Ozrz66qsMGDCARx99FAAnJycm
      T55MQUEB+fn5DB06tFvqkSSw6HGmNgBIEljcrNargG6EJIE7IEngrlFybaZOksCGJ0ng7qWo
      OQAhhBA9RwYAIYToo0z2EpAkgZVt7MQpOLu6GbuMHiVzAH1b6+v8TU1NVFVV6Zez19XVUVtb
      2ybM2tDQQF1dHba2tgZN+16L4gaAo0ePcv78eW655Rb8/Pz48ccf0el0BAcH4+/vb+zyhBDi
      mioqKli8eDGBgYFYW1tz11138dZbb+Hj48Ozzz6Lk5MTZWVlLF26FFtbW5YvX8727dsNlva9
      FkUNAGfPnqWsrIw5c+bw8ccfs2zZMsrKyrj77rv5/PPPWb58uX5UlCSwwh37+aZ3Ib2AhSlq
      bGzExsaGyZMns3//fj788EPmzZuHs7MzTk5OAPz888/88Y9/ZMqUKTz99NNoNBqDpX2vRVFz
      ALm5uYSHh9OvXz+GDh1KWVkZly9f5uzZs0DPnBIJIcTN0Gq1aLVazp07h7W1NbW1tVhYWLB7
      92727t0LQE1NDY6OjlhZWaHVag2a9r0WRQ0A/fv3p6ysDICysjL69++PmZkZ8fHxTJw40cjV
      CSHE9WVmZhIcHMyKFSvIzs5m6NCheHp6Mm7cOCorK0lNTWX48OHExMTw66+/4u3tbdC077Uo
      6hJQWFgYn3zyCYmJiTQ1NWFjY4OLiwtz587lk08+wc7OjkGDBgGSBFa6G50E7q3rrEXfEx4e
      TkJCAmvWrGHVqlUEBASwfv16+vXrx1NPPcU333zDwoULOXHiBD/++CPPPPMM0H7at66uzqC1
      Ki4JrNPpqKmpwcbG5prbSRJY2XrTACBJYNEZXU37XkufSwKrVKrrfviDJIG7Ssm1mTpJAhue
      JIG7l6LmAIQQQvQcGQCEEKKPUtwloM6SJHDP6629fLuLzAH0PpOfmN3u41cmfaF5/rK8vBx7
      e3vUajUajQYrKytUKhVarRYzM+V931bcAJCSkkJQUBBNTU2kpaWRnZ1NQ0MDKpWKkSNHMnDg
      QGOXKIToYz777DPOnTvH4cOHWb16NR9++KE+6fviiy8C8Oqrr6LRaIiPj2fdunW88MIL+Pn5
      8dhjj/HRRx/x8ssvG/m3uJriBoDExET9AJCSksJdd93FN998wz333NNmBJUksDF0vpfvzZA+
      wEJpHnjgAWpraykqKiIqKor33nsPCwuLNuHUP/zhD2zevJl+/fpRVlbGmDFjSE9P5+WXX2bI
      kCH6L7dKorhzkpZVqS3/VqvVmJmZ6f8thBDG8O9//5slS5Zw8eJFgoKCuOOOO9r0KbeysmLE
      iBFYWloSFBSEv78/9vb2WFhYMHToUDZt2mTE6tunuDMArVZLSUkJZWVlWFtbd7idvSV428mt
      IXqSuYUFdg6OBtl362uk/l6GOYYQXVVbW0tcXByPP/446enpaDQaKisraWhoIDMzk/Lyco4e
      PUpAQADQPEcwZcoUkpKSGD58OHl5eW1a2iqF4oJgWVlZHDlyBIBZs2bh5ubGoUOHmDJlSpvT
      LQmC9TxDTgIreZ21BMH6rpZJ4IqKCoqLixk8eDA6nY4TJ05QUFDAuHHjsLS01F8eysnJwdfX
      lzFjxlBYWAiAra0tv/zyC2FhYbi739jNDQ0dBFPcAADNIROVSoVare5wmxNHf4VGZf5l0+p0
      mCn0xnU3U5udgyOBoaO6uaJmvWEAyDiUhFltz/516sl7xyvhuD39d2vkPZGAaQbQTDIJDJ1L
      Fw4YOEiSwF2g5NpM3ZCpIZIENjB5/3YvmVUVQog+SpFnAJ2hqammtLjI2GW0q6GhAQsLZd6p
      tLtrs3NwwMLCstv2Z8qqii7TdLm+R4+pbWoCwOwal0t703GN9Xero+Na2VtjZa+8yd3OMokB
      oLGx8apTzfzzOWQmJRqpItGiL/b+7UjmoWSZBO5jWt8BNC4ujgsXLhAREYGHhwdVVVWcOXOG
      iIgIoPlzLC4ujsLCQiZOnMjly5dJT08nKiqKvLw8HBwc2iSLe4IiBoDz589TWVlJYGAg//rX
      v3j44Yc5ceIEw4YNw9LSkn/+85888sgjba79VdbpKKzQGrFqAWCTW4Zdxc1PfHq79Jdru8Jk
      FRYWsnHjRhYsWMBLL73EO++8wzvvvMOhQ4eIiYkBmlc4Hj16FBcXFzZu3EhRURHOzs5YW1uz
      ZcsW1q1b1+N1K2IAcHFx4dixY1hbW1NeXk5hYSFpaWmMGTOGkydP4uHhQXJyMmFhYfrnnC3W
      cfhskxGrFgCcje+W3ax5cCLODrbdsi8hepqtrS2FhYX85z//wdnZmfj4eGpra9skf4cMGcKy
      Zct49913GTJkCAUFBVhaWrJjxw7UajXbt29nyZIlPRp4VcQksI2NDRqNhnPnzjF79mxSU1PR
      6XSo1WrOnDnDuHHjSEhIMHaZQgjRrvz8/Dbp4HXr1uHi4kJiYiKnTp0CmsNha9asYcCAASxa
      tIjHH38cZ2dn1Go1paWlnDlzhgsXLvRo3Yo4A4DmEfTixYvMnDmTTZs2MWzYMGpra6mpqeHi
      xYtUVVW1WQImSWBlsO2mSWAbK5lIFqZLq9W2SQevXbuWxsZGfvvtNzw9Pdm2bRt+fn5kZ2cz
      bdo0Tp8+zejRo9m+fTvLli3jxRdfpKampscnuBUzAISEhJCVlYVarcbT05Pg4GCKioqYNm0a
      wcHBODk5UVRUhI+PDwBBbmYMslJM+X3W2Ilju2US2NC9T4UwpICAAB566CEKCgqIjo7Gy8sL
      gOjoaDw8PAgMDMTT05M//elPAPovsvPnzycgIICnn36aiooK/fN6iiKTwJ0hSeCu6e7aAkNH
      dcv9gZQc8JEksHKOa6y/Wx0d12O4Dx7DfQ123D6ZBO4MSQJ3jZJrM3WSBDY8U7wlg5IpYhJY
      CCFEzzPZMwBJAndNd9RmYcDbQpsySQIbniSBu5diB4CmpqZr3g1UksDGI72B2ydJ4L7nRpLA
      AMeOHaOsrEyf/pUkcDvi4uLIysrC1dWVmpoa8vPzcXV1JSwsDD8/P0CSwMZ0WVVPv8zCm96P
      jZUFgwc4dUNFQhhXZ5LA6enpbN68maCgIIqKioiNjZUk8JXq6upITExk0aJF1NfXY21tzTff
      fMOdd97ZJiEnSWBjKoGj+296L9L7V/QWnUkCHz9+nAULFjBhwgSefPJJmpqaJAl8paqqKjw9
      PbG0tMTW1lZ6AgshFK8zSWAzMzO0Wi1abfOVC0kCt8POzo78/Hzq6+tpaGjAxsam3e0kCWw8
      3dUbWHr/it6iM0ng8ePH8+qrrxIfH09ERAQhISGSBL6SpaUlI0eO5IcffsDe3p4ZM2bg4eFx
      1XaSBDYeJxcXmQQWopXOJIH9/f35/e9/T3l5OdOmTQMkCdwhrVaLSqXqMGkoSeCu6Y7aDNEb
      WMlBG0kCK+e4kgTuPJNOAl/ver8kgbtGybWZOkkCG54kgbuXzKoKIUQfpdgzgOuRJHDXGKI2
      SQY3kySw4SktCdwRU0kIm8QAID2BlU2Swc0kCSxadJQQtrS01GcFIiMj9XMoBQUFlJWVERwc
      TFZWlj4hfOHCBVxdXQ2WEFbMAHDixAlKSkq4/fbbKSkpYfv27Tz88MNoNBrpCaxwXU0G+3s5
      YmstjWBE73VlQtjBwYHRo0fz5Zdf4ujoyPDhwykvL+ett96iqqqK9957j/Xr1+sTwl9++SWv
      vvqqwepTzABQVlZGWloaM2bMICEhgerqagCSkpKkJ7DidS0Z/NJDUYQOdjdAPUIow5UJYTc3
      N3799VfS0tJwcXEBwN7enrVr1/LMM88AtEkIm5mZGTQhrKhJ4ICAADIyMigoKNCv8JGewEII
      U3VlQvj8+fPceeedREZGkp2dDTSveLS0/O+ZcE8mhBVzBgAQGhrKrl278PPzo7y8XHoCm4iu
      JoNtrJQ5US5Ed7kyIdzQ0EBFRQU1NTU0NTWxbds2pk2bRnx8PNnZ2Zw8eZKwsDB9Qvhvf/ub
      QRPCihkAXFxcsLe3x8XFhbCwMJKTk6UnsImQZLAQ7bsyIWxpaUlsbCxz5swhIiKCpKQkVCoV
      FhYWPP744/pb4LckhJ966ik0Go3BEsKKTQJfjySBu8YQtXVHMljJQRtJAivnuEpLAnekuxLC
      fTYJfD2SBO4aJddm6iQJbHiSBO5eipoEFkII0XNM9gxAksBd01212Tk4YGEha/hbkySw4Sk9
      Cezo49ID1XQfkx0AJAlsXGMnTsHZ1c3YZSiKJIHF5CdmA825ptaJ37y8PI4fP05wcLC+S1hK
      SgopKSkMGjSIESNGcODAAQICAvDz8yMpKYkRI0YYvF7FDQA//vgjs2bNQqvVcuDAAerr66Un
      sALZ5JZhV9G1CU9JAIve7o033tAnfm1sbNi4cSOLFi2itLRUv01ycjIODg6sXbuWFStW8Msv
      v/Ddd98xb948srOz++YAoNVquXTpEjU1NajVam6//XbpCaxEZ+O7/FRJAIveztPTU5/4ra6u
      Ji8vj6NHjxIZGanfZtKkSWzevBkAtVqNpaUl1dXVfPXVVwwZMoSUlBT8/f0NWqfiJoHDwsI4
      deoUp0+fZvTo0dITWAhhclonfjMyMggODmbBggV8/PHH+m2srKwYMWIElpaWBAUF4e/vj729
      PRYWFgwdOpRNmzYZvE7FnQF4eXnx008/YWZmhpOTU4fbSRLYuGxvYhJYEsCit2ud+PX19SUm
      JobMzExsbGzIzMykvLyco0ePEhAQADTf/2fKlCkkJSUxfPhw8vLy6N/f8LeTVtwAoFKpGDhw
      IFZWVvrHpCew8oydOFYmgYXowHPPPadP/EZGRjJw4EASEhJ4/vnnsba2pl+/fkyYMIGcnBye
      euopvL29KSwsZOXKldja2vLLL7+wcOFCg9epyCSwVts8uXutSz6SBO6a7qotMHRUtzaBUXLQ
      RpLAyjmu0pPAI++JvO42N6JPJoE7c61fksBdo+TaTJ0kgQ1PksDdS2ZVhRCij1LkGUBnSBK4
      azpTm6R8u0aSwIZnzCSwm79njx/X0Ex2AJAksOFIyrdrJAncu7l1kPJNSUkhLS2NW2+9FXt7
      e/32BQUFFBUVERwcbJSUb2cobgD49ttvMTMzw97enilTpnDw4EF9e8jbbrsNa2trQJLAhnQz
      Kd8O92llweABHS/rFcJUtE75WlpasnHjRu688042bNjAmjVrgOZlnevWrUOj0fD73//eKCnf
      zlDcAFBfX8/cuXM5duwYiYmJlJSUcOeddwK0WRoqSWADuomUb0dG+LuzbllUt+9XiJ7WOuVb
      VlbGxIkTWbBgAStWrNBvs2PHDsaOHcupU6dobGxsN+Xbck8gY1LcJLBKpaJfv36MGDGCS5cu
      0djYyL59+9i3b59+5YEQQhhL65RvTk4OTf83H9KyNLa+vp433niDpqYmzpw5g4+Pj1FSvp2h
      uDMArVZLXV0dCQkJeHt7U1FRwezZzdfe1K0mnCQJbDg3k/LtiL9X92UGhDCm1infwYMH89FH
      H+Ho6Ii3tzeZmZmUlJSwadMmVCoVBw8exNnZ2Sgp385QXBDsyjmAAwcO6OcAZs2apb8M9Mv+
      fdRWXjZmqb2WMSaBlbzOurNBsMRtsTIJ3Iu13Oq5pKSE2NhYnJyciIyMJDU1lfT0dKZOnUpD
      QwO1tbV4e3sDkJmZyeDBgyksLATQp3zDwsJwd7/+DRENHQRT3ADQWZIE7prO1NbdKd/O6A0D
      gCSBDc+YSeDR907o8eP2ySRwZ0gSuGuUXJupkySw4RkzCdwbKW4SWAghRM8w2TMASQJ3TVdr
      k3Tw9UkS2PCkJ3D3UuQA0Jm7gUoSuGdJOvj6JAkspCdwNzh8+DAqlYqpU6dy4sQJ8vLyKCgo
      YN68ebi5NX8ISRK4Z3U1HSwJYNEXSU/gLtLpdOTm5qLT6dDpdIwZM4bBgwezc+fONh3CJAnc
      w7qYDpYEsOiLpCdwF128eBFLS0vUajUFBQUA7Nmzh1mzZvX4igMhhOgK6QncRSdPnsTJyYmm
      piYSEhJwd3fH3d0dNzc3dDqdft2xJIF7VlfTwZIAFn2RqfQEVlwQ7KeffmLmzJn6P5eXl6NW
      qzE3N2fixIn6OQBJAvcsQ08CKzmfIElg0VkdpYWzs7NJSEhg/PjxWFtbU1tbS1FRETk5Ofj6
      +jJmzJh208IODg6SBG6PJIG7pqu1GTod3BsGAEkCG570BO48SQIbial/mImukSSw4UlP4O6l
      uElgIYQQPcNkzwAkCdw1XalNUsCdI0lgw1NyEtjUUsBgwgOAJIF7jqSAO0eSwH1bRyng+Ph4
      Kisr8fT01KeAc3NzOXHiBGFhYfj4+BitZ7CiBoATJ05QUVFBVFQUBw8eZPDgwVy+fJnQ0FBO
      nDiBv78/Li7No6wkgXvOzfQIliSw6Gtap4AdHR154403WLRoUZs7ikZHR3Pffffx3HPPsXz5
      cqP1DFbUAFBWVkZaWhpjx46lsLCQiIgIDh8+TGhoKElJSYwePVq/rSSBe9BN9AiWJLDoa1qn
      gO3t7amoqCArK6tND+CysjIGDBiAhYUFBQUFRusZrLhJ4GnTprF//37gv03gy8vLsba2liSw
      EELxWqeAc3NzefPNNwkLC2PNmjX6bf70pz+xc+dOsrKymDp1qtF6BivuE9XT05OkpCSKi4sB
      CAwM5Ntvv21zDw2QJHBPupkewZIEFn1N6xTwpUuXOH78OL6+vri6uupTwBYWFowdO5asrCzc
      3NyM1jNYUQOAi4sLFhYWTJ8+ne3btwMwYsQIfv31V31kukWQmxmDrBRVfq81duJYmQQWopOe
      e+45YmNjmTNnDuPGjSM+Pp7i4mKef/55VCoV/fr1o7i4mOLiYtauXat/bOXKlfoU8MKFC3uk
      VpNIAjc2Nl51+UeSwF3Tldp6okewkoM2kgRWznGVnATu7hQwSBIYaD9tKEngrlFybaZOksCG
      J0ng7qW4SWAhhBA9wyTOANojSeCu6WxtFhYWBr/s09tIEtjwlJYENsX0b2uKHACamppQ/98b
      S6vVotVqrzrVlCSwYTm5uDJu0lRjl2FSJAnc97SX/g0PD+fo0aOUlZURHh6Ol5cXoJz0b2uK
      GwDi4uLIysrC1dWVsLAw9uzZA8Dw4cPbvECSBDasy6p6+mUW3tQ+JAUs+orW6V9zc3POnTuH
      p6cna9eu5f333weUk/5tTVEDQF1dHYmJiSxatIj6+noOHDhAZGQk7u7ufP75521eIEkCG1oJ
      HN1/U3uQFLDoK1qnf/38/AD44osvGDZsmH4bpaR/W1PUJHBVVRWenp5YWlpia2tLVVUVPj4+
      9OvXT58KFkIIpWmd/s3OzsbV1ZVx48Zx/vx5/TZKSf+2pqgzADs7O/Lz86mvr6ehoQEHBwdy
      cnLw8vKitra2zbaSBDYs826YBJYUsOgrWqd/c3JyOHv2LC4uLhQXFysu/dua4oJgx48fJzc3
      F3t7e8LDw4mJiQEgJCSkzSUg6QlsWD09CazkddbSE1h0pL0ewKNHj+a3336jqqqKMWPGYGVl
      RW1trX4wiIiIwMvLq90ewO7u7m32b+ggmOIGAGhe+aNSqVCpVGi1Wpqamq5agiVJ4K7pbG12
      Do4Eho7qgYqa9YYBQJLAhqe0JLAh0r+t9ckksJmZWZs/t/7vFpIE7hol12bqJAlseJIE7l6K
      mgQWQgjRcxR5BtAZkgTuGukJbDiSBDY8pSWBr2RqyWCTHQAkCdxzpCdw50gSWHTUFzgvL4/j
      x48THBysX+uv0Wg4dOgQFhYWTJ061SjJYMUMADExMcyaNYudO3cyatQonJyciIuLo6Ghgdtu
      u40DBw4wbtw4/TVWSQL3nK72BJYksOirWieDbWxs2LhxI4sWLaK0tFS/zbvvvounpycuLi78
      9ttvRkkGK2YAuHTpEk1NTVy8eBFLS0vc3d1xd3cnMTGRc+fOkZ+fj62trX57SQL3oC72BJYk
      sOirWieDq6urycvL4+jRo206G+7bt4/p06dTVVWFtbV1u8lgf39/g9apmElgDw8PkpOTCQgI
      oKysjKysLAYPHszMmTP58ssvmTFjRo8vORNCiK5onQzOyMggODiYBQsW8PHHH+u3cXR0ZN68
      eWRkZODq6mqUZLBizgACAwPZsmULDzzwAKWlpVRXV2NtbY21tTUBAQF4eHi02V6SwD2nqz2B
      JQks+qrWyWBfX19iYmLIzMzExsZGnwwePnw4J06coLKyEhcXF6MkgxUzAPj6+mJvb4+XlxdB
      QUH6lByAj4/PVdtLT+CeIz2BhbgxrfsCR0ZGMnDgQBISEnj++eextramX79+PPnkkxw8eJA/
      /OEPDBgwgMLCwh7vC6zIJHBnSBK4a6Qn8I2TJLByjqu0JPCVujsZ3CeTwJ0hSeCuUXJtpk6S
      wIYnSeDupZhJYCGEED3LZM8AJAncNdIT2HAkCWx4Sk0CW9lbY2Xf87dzvlkmOwBIEtiwpCfw
      jZMkcN818JYA/CKau3/FxcVx4cIFIiIiMDc35/Tp0wBERERgZWVFdXU1sbGx1NfXM3HiREpL
      S0lPTycqKoq8vDwcHBxwcHDokboVNwBkZ2fz22+/ce+993Ls2DHGjh2LhYUFhw8fZsqUKfrt
      JAlsWDfbE9jfyxFba7l/kOhbCgsL2bhxIwsWLOCll15i3LhxVFZW4u/vj1bb/HlVWlpKUVER
      DQ0NfPDBB5w/fx5nZ2esra3ZsmUL69at67F6FTcAVFdXc+HCBbKzsykqKtL3AigoKGiznSSB
      De3megK/9FAUoYPdr7+hEL2Ira0thYWF+vsAFRUVUV1djbe3N5aWzV+IfH19cXJy4vPPP+e+
      ++4jKysLS0tLduzYgVqtZvv27SxZsqTd2+B3N0VOAk+ZMoVffvlFP2LCf5edCSGEUuXn5xMU
      FMQdd9xBSUkJS5cu5Z577uHAgQPExcXpt/P29mb8+PGcO3eOxx9/HGdnZ9RqNaWlpZw5c4YL
      Fy70SL2KOwMAsLa2xs/Pj99++40ZM2bQ0NBAVVVVm20kCWxYN9sT2MZKmZPgQhiSVqtFo9FQ
      WVlJQ0MDe/fuxc7OjsbGRmxtbdm2bRu+vr76yz6nT58mJCSE7du3s2zZMl588UVqamp6bKJb
      cQNAyw3fAgICSEpKIi8vj4SEBP0tVFtIEtiwnFxcZBJYiBsUEBDAQw89REFBAdHR0TQ1NXHq
      1CmWLFnC8OHD0Wq1+Pj4UF5ejlar5ZlnngFg/vz5BAQE8PTTT1NRUYGXl1eP1Kv4JLBOp6O+
      vh5LS8s2qUNJAneN9AS+cZIEVs5xlZoE9hjug8dw324/bp9PAqtUqnZfAEkCd42SazN1kgQ2
      PEkCdy9FTgILIYQwPMWfAXREksBd09napA/wjZMksOEpNQkMptcPGEx4AJAksGFJH+AbJ0ng
      vq2jfsDx8fFUVlbi6empX8ySm5vLiRMnCAsLw8fHxyj9gEFhA8BPP/2Eh4cHo0aN4tChQ4wd
      O5Zt27bh6OhIQEAAISEh+m0lCWxY0gdYiK5p3Q/Y0dGRN954g0WLFlFXV6ffJjo6mvvuu4/n
      nnuO5cuXG6UfMChsACgtLSUvL4/hw4dTWFhIfX09np6eTJw4ke3btzNkyBCsrKwASQIbnPQB
      FqJLWvcDtre3p6KigqysrDZL2cvKyhgwYID+Lgft9QO+cum7IShqEtjMzIxx48Zx7NixNo/Z
      2dnh7e1NRUWFEasTQojra90PODc3lzfffJOwsDDWrFmj3+ZPf/oTO3ful2CjxgAAIABJREFU
      JCsri6lTpxqlHzAo7AwAICQkhM8++wz1/00uabVaKisryc3NZerU/waTJAlsWNIHWIiuad0P
      +NKlSxw/fhxfX19cXV31/YAtLCwYO3YsWVlZuLm5GaUfMChsAHBzc8PMzIxJkyaRkJCAubk5
      Fy9e5OeffyYiIkJ/MyWQJLChSR9gIbqmdT/gcePGER8fT3FxMc8//7w+11RcXExxcTFr167V
      P9bT/YDBBJLAHZEkcNd0trae6APcmpKDNpIEVs5xlZoEhu7vBwySBO6QJIG7Rsm1mTpJAhue
      JIG7l6ImgYUQQvQckz0DkCRw10hPYMORJLDhKTkJDKaXBlbkANDU1KRfBdQRSQIblvQEvnGS
      BBYdpYHz8vI4fvw4wcHB+vX9KSkppKSkMGjQIEaMGGGUNLDiBoCffvqJ6upqPD09CQ0NlSSw
      kXS1J7AkgYVomwa2sbFh48aNLFq0iNLSUv02ycnJODg4sHbtWlasWGGUNLDiBoBz586xePFi
      VCqVJIGNqms9gSUJLETbNHB1dTV5eXkcPXqUyMj/rhSaNGkSmzdvBkCtVrebBvb39zdonYqb
      BJ44cSK7du3i9OnTgCSBhRCmp3UaOCMjg+DgYBYsWMDHH3+s38bKyooRI0ZgaWlJUFCQUdLA
      ijoD0Ol0+Pr6EhgYyL///W99CzVJAve8rvYEliSwEG3TwL6+vsTExJCZmYmNjY0+DXz06FEC
      AgKA5nlPY6SBFRUE02q1fPfdd+h0OpydnRk7dizbt2/HycmJYcOGMXz4cP22v+zfR23lZSNW
      27v19CSwktdZdzYIlrgtViaB+7iWSeCSkhJiY2NxcnIiMjKS7OxsEhISGD9+PNbW1tTW1lJU
      VEROTg6+vr6MGTOGwsLmObeWNHBYWBgODg4GDYIpagCA5rMArVZ73VVAkgTuGukJfOMkCayc
      4yo5CQzdnwbuc0lglUp13Q9/kCRwVym5NlMnSWDDkyRw91LcJLAQQoieobgzgM6SJHDXXK82
      SQB3nSSBDU+JSWAre2us7Hvm9s3dzWQHAEkCG4YkgLtOksB908BbAvCLGAZAXFwcFy5cICIi
      Ag8PD6qqqjhz5gwRERFA82qf//znP1RVVTFp0iRKSkpIT08nKiqKvLw8HBwccHBw6LHaFTMA
      vP/++zz44IPU1tZy8eJF6urqKCkp4fbbb6ekpITt27fz8MMP67eXJLBhdDUB3MLfyxFb6xtv
      JCOEqSssLGTjxo0sWLCAl156iXfeeYd33nmHQ4cOERMTA8Dx48f54YcfCA0NZdOmTWRnZ+Ps
      7Iy1tTVbtmxh3bp1PVqzYgaAuro6Dh48yJgxY7h8+TIajYa0tDRmzJhBQkIC1dXVbbaXJLCh
      dC0B3OKlh6IIHezejfUIYRpsbW0pLCzU3wMoPj6e2traNr193d3dOXPmDFVVVfqQmKWlJTt2
      7ECtVrN9+3aWLFmCmVnPTM8qZhLY29ub6upqSkpK9I8FBASQkZFBQUGBYlf8CCEENC+7DAoK
      4o477qCkpIR169bh4uJCYmIip06dAiAtLY2pU6dy9913k5WVxeOPP46zszNqtZrS0lLOnDnD
      hQsXeqxmxZwBqFQqpk2bxtdff01YWBgAoaGh7Nq1Cz8/P8rLy9tsL0lgw+hqAriFjZUyJ7+F
      MDStVotGo6GyspKGhgbWrl1LY2Mjv/32G56enmzbto3+/fuj0WioqKigsbGRkJAQtm/fzrJl
      y3jxxRepqanp0UluxQwAnp6euLm5MWTIEBwdHenfvz/29va4uLgQFhZGcnJym+2lJ7BhOLm4
      yCSwEF0QEBDAQw89REFBAdHR0Xh5eQEQHR2Nh4cHgYGBBAcHY2NjQ3V1NX/5y18AmD9/PgEB
      ATz99NNUVFTon/f/27v3uKjuO//jr+F+E7mDgIJgFfAawHtNIl6SVWu6SdtsN+7apMma7GMb
      3XQvrumjaTb7y9Ztk22TdteaqG2T+NjYaNb1Ui8oREkAIyiXICpKYMSBoNyGywwwM78/XM7O
      cFEYZpgz8nk+Hnk8kDnw/cxkznw553zf5zMWVJcEHi5JAtvnXrWNdQK4j5qDNpIEVs+4akwC
      R6fFE5022Snjjrsk8HBJEtg+aq7N3UkS2PkkCexYqrkILIQQYmy57RGAJIHtM5zaJkyciLe3
      rOUfKUkCO58ak8Dgvmlgt50AJAnsPBlLHyQsItLVZbgdSQKPX0Olgb28vJTmVosWLVI6Gp49
      exaTyURSUhImk8llaWDVTgC//e1vCQkJISwsjAcffJAzZ87w4IMPKo9LEth5ArXNTGiz72Km
      JIHFeNY/DZyZmYler2fq1KmYzXc+r/R6PTt27ODP//zP6enp4Y033nBZGli1E4Cvry9r1qzh
      d7/7HcuWLaO+vt7mcUkCO9GlYrt/VJLAYjzrnwZubGyko6ODuLg4fHzu/GFUV1eHyWTi5s2b
      ZGZmYjKZXJYGVu1F4IaGBg4cOEBYWNiYLzUTQgh79E8Df+973+Nb3/oWOTk5FBUVAZCYmMir
      r75KREQEb775pkvTwKo9AggNDSUsLAyz2awcOlmTJLDzBI3iIrAkgcV41j8NfPLkSSZMmEBv
      by9BQUF89NFHTJs2jYsXL2KxWIiIiHBpGli1E0BiYiLLli3j9OnTaLVaIiNtL0pKEth5MpZm
      yEVgIezQPw1sMpkoKSlh48aNpKWlYTabSUpKorm5GaPRyHe+8x3AdWlgSQI7gTsngQFmzJ47
      5k1h1By0kSSwesZVYxIYnJcGliTwECQJbB811+buJAnsfJIEdizVXgQWQgjhXG57BCBJYPv0
      1eYfEIB/QKCry7mvSBLY+Vyxb/kF+6PxHdvnOVbcYgLo7e0dcKgpSeDRSZqRSnJKmqvLuK9I
      Evj+NGXh14h5IIG2tjaKi+9kZIKCgkhKSuLs2bMkJSUxe/ZsZXu1pHyHQ3UTQHZ2Nnq9Hl9f
      X1auXInJZGLnzp08//zzNufgJAk8Oub6djp97O/921+gnzdJsaEO+31CqI3FYqGjo4Pm5mYO
      HTpEQkICDz74IG+88QY/+9nPiIyMVFXKdzhUNwHcunWLJ554gs8++4xr167R0dFBdHQ0FRUV
      SqcwkCTwqF26Dlx32K+bNTWK//dclsN+nxBqM3HiRNauXcvPf/5zNm/ezH/+538SFxdHcnIy
      paWlrFixQlUp3+FQRxVWzGYzeXl5VFVVERkZSXl5OZmZmVy8eNHVpQkhxjm9Xk9ZWRmLFi3i
      H/7hHzh8+DAXL15UbvKmppTvcKjuCECj0TBjxgwyMjLw8fGhs7MTnU5He3u7zVIsSQKPjp+D
      LwJPnTS2uQEhXOGDDz5gw4YNeHh4YDAYWLp0KVeuXGHevHmqS/kOh+omgOjoaGV9v1arZfny
      5aSmphIaGkpjYyPx8fGAJIFHK2lGslwEFmKEli9fzrRp0wCIiIigtraWV155hcDAQGbMmKGq
      lO9wSBLYCdwhCRw7JYHYKYmuLkeh5qCNJIHVM64r9q3otHhCkqPcLoAmSWAXcfcPM2EfSQI7
      nyuTwPcj1V0EFkIIMTbc9ghAksD2sa5N0sCOJUlg53N1T2B37f07FLedACQJPHqSBnYsSQLf
      /4bq/RsVFUVZWRnx8fGEhYUp26s9FayqCaC2tha9Xs+MGTPYtWsXf/VXf8X58+eZPn06JSUl
      0hPYwRyZBpZewGI86d/79/HHH+ftt9/mhRdeYNWqVYC6ev8ORVUTQHh4OIWFhfj7+9PS0sJX
      X33F1atXSU9Pl57AzuDANLD0AhbjSf/ev4sWLcJgMGC9qNIdUsGquggcGBhIV1cXV65cYe3a
      tVy+fBmLxYLnGJ9nFEKIu+nf+9ff33/Aklh3SAWr6ggA7sysOp2OVatWsWPHDqZPnz7odpIE
      Hj1HpoGlF7AYT/r3/q2oqKC4uBiNRkNaWhoFBQVukQpW3QQwc+ZMqqur8fT0JCYmhtTUVADp
      CewEkgYWwj79e/+2tbWxZMkSADw8PNwmFSxJYCdwhyQwoKo0sJoDapIEVs+4ru4J7Kzev0OR
      JPAQJAlsHzXX5u4kCex80hPYsVR1EVgIIcTYcdsjgKZbjXS1tbi6jEGZTCbVrlwarLbQiEjC
      IiKH+AkxXA0VWposY7tLmc13sjBjvZTQVeO6at8aaty+UJi7ctsJoPlWIzp9q6vLuC8kgUwA
      DtBQcUOSwONM3wRw/fp1pUPYpk2bePvtt2loaGDDhg1KJ8M33niD9vZ2LBYLmzZtYseOHaxY
      sYKvf/3r7N+/n29/+9tjXr+qJoCmpib+9V//lX/5l3+hrKyM8PBwCgoKlHNvjz76KAEBd+7D
      Uddm4VqdBMEc4aqhgdA6+1PVUSGBrMiY6sCKhHAv27dv55//+Z/ZvXs3hYWFrF27lilTprBp
      0yb27t0LwAsvvIDFYuGpp56ioKCAtLQ0fv/733P16lWlx8BYU9UEAJCamkp2djbR0dFYLBY8
      PDzIyrrTa9bf31/Zrk5v4dwoPrSElboGoMHuH581NUomADGuZWVl8fjjj9Pc3MyWLVs4ePAg
      Tz31FNu2bVO2CQgIICcnh6ysLJKTk3nttdfw9vYmOzubY8eOYTQaWb169ZjWrbqLwFOmTKG5
      uZn29nbgzrm3wsJCCgsLMZnkL34hhPocPXqUkydP8qMf/YhTp07xZ3/2Zxw6dIj9+/fbbPfu
      u+/y7LPPMmfOHN58801iYmJISEjgpz/9KR9//PGY1626IwCA1atX89Zbb/HMM8/g6enJww8/
      DGBzESZugoYFcaqbv9xSaEQkoaO4BhAVIreUFuNbamoqP/rRj6iurubZZ5/lueeeIzg4mKio
      KM6fP49OpyM+Pp60tDTlNPatW7eIi4tj1qxZvPzyy6Snp4953aoKgnV1daHT6UhKSqKwsJDp
      06dTW1tLbW0tAKtWrcLPzw+As6ezMchFYIdQw22h1bzOerhBsNKP8uUi8DizbPNa5Wu9Xo+/
      vz9eXl50d3djNBrvmgsxm81oNBo0Gg0Gg0H5bLPm7CCYqiaAkSgvLcHfR533n5FloCN3P0wA
      DRVavGUZqFONt2WgkgQeQlhEpCSB7aDm2txddNpkSQI7mSSBHUtOogshxDjltkcAkgS2T19t
      ajjtc7+RJLDzqeEUkLunf625xQRgNpsHNIaRJPDoSPrX8SQJPD4Mlv598cUX0Wq15ObmsnHj
      RmVbNaZ/raluAnjppZfYunUrvb29XL9+ncjISM6cOcPEiRNZs2YNQUFBgCSBR2u06d8+WelT
      iQ6VZaBi/LFO/37++eccO3aMqqoqmwlAjelfa6qbAGbNmsWJEyeU9G9BQQHf//73BxxqShJ4
      lEaZ/u0za2qUTABiXOqf/l24cCEvvfSSzTZqTP9aU91F4AkTJhAWFkZNTQ1wZ5WBK5smCyHE
      YPqnf4eitvSvNdUdAQCsWLGCN998k2XLluHr68vVq1eJjIwkICAAHx8fQJLAozXa9G+fKPnr
      X4xT1unfbdu28fLLL5OXl8f27dtZsWKFatO/1lQXBKusrCQlJYWKigomTJhAdHQ0OTk5GAwG
      HnnkEUkCO4ga0r/W1LzOWpLAwtpQ6d/hGE7619q4C4KlpKQAkJb2fx9OjzzyyIDtQiMi8Vdp
      EMxdloEKx4pOi5cksJOpYRmotZEG/6xfr3t9+I8F1U0AwyVJYPuouTZ3J0lg55MksGPJSXQh
      hBin3PYIQJLA9rlbbf4BAcROSRzbgu4jkgR2PrWdAhrMxPhwQuLDnVyRY7jtBCBJYMcLDY+Q
      CWAUJAksAKaAMgHs2rWLL774gqeffprS0lKqqqqwWCx897vfZcaMGcrP/OIXv2DDhg2Ul5eT
      m5vLtm3b+Pzzz5k0aRJJSUlOq1VVE8BPf/pT1q5dy6xZs/j444+ZMWMGGo2GtLQ0PvzwQ558
      8kllW0kCO55fk56rxvIR/YwkgYUYXG1tLSUlJbz++us8//zz7Nq1i97eXn7wgx/YXCvat28f
      H374IWvXruX9999nxYoVHDlyhD/+8Y+89dZbTq1RVRNAYmIiBQUFzJw5U2n/2NLSQktLCz09
      tn9ZSRLYGdrh6sgmAEkCCzG4+Ph4CgoKWL9+PevWrcPX15fGxkYCAwOVBSy3b9/myJEjbNiw
      AQBvb28OHDhAcHAwAD/4wQ/YsWOH0057qeoisIeHB5mZmZw7d0753pUrVygoKODWrVsurEwI
      IUamqKiIb33rW5w4cYKSkhLgzqmeLVu2KNv8/ve/p7OzkwMHDrBnzx7+/d//nRdffJHk5GR8
      fHyYOXMmV69edVqNqjoCAJg3bx7vvvsuISEhAGRmZjJr1ixaW23P90sS2PH87LgILElgIQaX
      kJDA2bNnaWpqIioqipaWFlpbW0lOTgbglVde4dVXX+Vv//Zv2bFjh9Ly9oMPPuBnP/sZmzZt
      4tSpUzzzzDNOq1FVSeC+FHBtbS16vZ7o6GjMZjNRUVFcunSJ1NRUZVtJAjteaHgEmV9/yCVj
      q3mdtSSBxUhMWfg15ZbRJpOJ9vZ2Jk6cOOyfN5vNeHh40Nvbi8FgUO6APFJulwTuSwFPmTJl
      wGPWH/4gSWB73WsZqLCfJIGdz12Wgfbx9PQc0Yc//N9r6uXlhbe3c/ueq2oCGAlJAttHzbW5
      O0kCO58kgR1LTqILIcQ45bZHAJIEts9gtUl/YMeQJLDzqfUUkLv2CXbbCUCSwI4j/YEdQ5LA
      49dQfYJ37drFzZs3mTt3Lt/85jcBOHjwILm5uTzwwAM8+eSTvP766y7rE6y6CeDkyZPU1tby
      /e9/H61Wy69+9Su2b9/O/v37eeKJJ5TtJAnsOPb2B44KCWRFxlQnVCSEe+rfJ7ioqIg33njD
      5uhh2rRprF27lr/4i7/A19fXpX2CVTcBAPT09NDd3U1xcbHygvQlg/tIEtiB7OwPPGtqlEwA
      Qlix7hP8wgsvcOPGDZ5//nk2btzIypUrAfD19eVP//RP8fPzIzU11aV9glV5EXjOnDmUlpaO
      eP2sEEK4knWf4Ly8PA4fPszu3bvZsWOHss20adPYt28fgYGBhISEuLRPsCqPAGbMmMGePXtY
      vHgxdXV1g24jSWDHsbc/cFSIpICFsGbdJ/jFF19kw4YNREREMHfuXM6fP49Op+PIkSOEh4ej
      0+kIDg6murraZX2CVTcBTJs2jaCgIJYvX05qaiqhoaEAzJw502a7uGAN4Rp1rrRxN0kzolXV
      H1gId7V161abPsEPPfQQHR0dNvmQdevW0draSnBwMB4eHsydO5d58+ah0Wh46KGHxrRVpKpu
      BTES5aUl+Ps4NyVnL1kGOnJqDtoM91YQDRVaSQI72XhbBjrumsIPlySB7aPm2tydJIGdT5LA
      jiUn0YUQYpxy2yMASQLbp682NZz2ud9IEtj51HQKyJ16/w7FbScASQKPjqR/HU+SwOPLUL1/
      29vb2b9/P5MmTWLLli14enrS2NjIr371K4xGI3/913/N9evXbXr/JiQkEB8fP+bPQTUTQFNT
      E6+99hr/9m//hre3Nz/+8Y956qmnKC4uVs69PfroowT87y2LJQk8Ovamf/tIL2Ah7ujf+/ef
      /umfeO211/j5z39OUVERCxYswNPTk+eee4729nbefvttmpubbXr//uY3v3FJ7aqZAOBOB52y
      sjIiIyMJCwsD7hxiZmVlAeDv769sK0ngUbIz/dtHegELcUf/3r8JCQk888wz1NTUsHXrVgDC
      wsLYtWsXO3fu5MMPP+Sdd96x6f37wgsv8Otf/3rMT2+p6iJwamoqlZWVFBcXk5GRAdw591ZY
      WEhhYeGA20EIIYSr9e/9GxQUxHvvvcef/MmfkJOTo2z393//9/zhD3/gnXfeGdD7NzU11am9
      f4eiqiMAT09PfHx8aGtrIyEhQfneww8/rHzdR5LAo2Nv+reP9AIW4o7+vX9ff/11Ojo6uHDh
      Ak888QSvvPIKS5Ys4fDhwxgMBtLS0gbt/fv000+Pee2qCYJ1dXWh0+nw9/ens7OTwMBAfHx8
      0Gq11NbWAihNk0F6Ao9W0oxUVaV/1bzOWnoCi8HcrfdvW1sb/v7+Ni0du7q6sFgsynVM696/
      Fotl0PaP4yYI5u/vT1JS0oDvh4WFMXfu3AHfl57A9rFeBiocS3oCO5/aloH26d/7t+/cvjXr
      a5hg2/vXVVQzAYyUJIHto+ba3J0kgZ1PksCOJSfRhRBinHLbIwBJAttnsNr8AwKInZLomoLu
      I5IEdj41nQIaijv1B3bbCUCSwI4TGh4hE4ADSBJYwOD9gZ944gl2794NQExMDJs2bQLuLCH9
      8MMPmTZtGhs3bhzQH3j9+vVOrVVVE8DmzZvZtm0b0dHR7Nixg7S0NFpbWyktLSUlJYWMjAwS
      ExMBSQI7kl+TnqvG8mFvL72Ahbg36/7AdXV1/N3f/R1ffvmlTepXq9Xy8ssv88Mf/hBPT88x
      7w+sqgkgNTWV8+fPk5WVhclkwmw2841vfIOuri4ef/xxNBqNsq0kgR2pHa4OfwKQXsBC3Jt1
      f+AtW7bg7+/PO++8ww9/+ENlm29+85v813/9F729vcyfP39Af2C9Xs+6deucVqOqLgKHh4fT
      3NxMSUkJDzzwgKvLEUIIu1n3Bz516hQ6nQ6j0aiEXAHef/99Kioq2L17N3PmzBnQH/jgwYNO
      rVFVRwDwf/fV+O53v8ulS5eG3E6SwI7jN8KLwNILWIh7s+4PvH37dv7jP/6DzZs3Ayj9gffs
      2UN6ejr/+I//yNatW7l165ZNf+BZs2Y5tUbVJIEBKisriY+Pp6qqiunTp/PVV1+RmJhIRUUF
      qampNqeAJAnsOKHhEWR+/SGX1qDmddaSBBYjsWzzWuVr6/7Aw2E2m9FoNGg0GgwGAxqNZnwk
      gQFSUlIAmDdvHoBywTctbeAtCyQJbJ+hloGK0ZMksPO5wzJQayMNBlq/nn5+fhiNxhGPORKq
      mgBGQpLA9lFzbe5OksDOJ0lgx5KT6EIIMU657RGAJIHtY12b9AV2LEkCO58aTwG5c29gt50A
      JAk8etIX2LEkCTw+DdUbePbs2dTX1/PRRx/xN3/zN8Cd5O/hw4exWCzMmTOHsLAwl/YGVu0E
      8Ic//IFVq1axa9cuoqKiiIqK4pFHHlEelyTw6NnbF1iSwEIM1L838Pvvv8+Pf/xj2tralAlg
      zpw5pKSkcOLECXQ6HUePHnVpb2DVTgAWiwWz2czs2bNZvXo1+/btQ6/XKxfZJAnsAHb2BZYk
      sBAD9e8N/PHHH7Nw4ULKysqUbby9vfH29mbfvn3s2bOHsrIyl/YGdpuLwCEhIRgMBleXIYQQ
      g+rfG/g3v/kNFRUVnD59mhMnTijbffrpp6Snp+Pn5+fy3sCqPQLo09PTg06n4+rVq6xcuVL5
      viSBR8/evsCSBBZioP69gX/3u98BsGXLFlavXs0rr7zCq6++yrvvvstbb70F4PLewKpKAlur
      qKhg6tSpZGdn4+/vz/z5821arkkSePTU1BdYzeusJQks7uZuvYGH4269gcdNT+D++tK/3/jG
      NwZ9XJLA9um/DFQ4jiSBnU+ty0D79O8NPByu7A2s2gngXiQJbB811+buJAnsfJIEdiw5iS6E
      EOOU2x4BSBLYPvFTk11dwn1LksDOp4ZTQO7U8/deVD0BVFZWkpKSQnl5+YD7YksS2D4yATiP
      JIHHh8F6/r744ototVpyc3PZuHGjsm1+fj779u3jscceY/HixQN6/n7729921dMAVD4B9PUC
      /uKLLwZMAJIEtk9D7iU8R3neNit9KtGhshRUjG/WPX8///xzjh07RlVVlc0E8Mtf/pLf/va3
      /OVf/iXNzc1j3vP3XlQ9AdyNJIHtc66uctS/Y9bUKJkAxLjXv+fvwoULeemll2y2aW9v58CB
      A7S3t+Pr68vevXttev4ajUZWr17tomcgF4GFEMIu/Xv+DmbPnj0EBQUREBDAww8/PKDn78cf
      fzzGVdtyiyOAmpoa9u/fz/z585kyZQogSWB7JUybPupTQFHy178QNj1/t23bxssvv0xeXh7b
      t29nxYoV6HQ6dDodX375JYmJiQQEBHD58mWbnr/p6ekufQ6qTQLfiySB7fPgo+tUuZ5Zzeus
      JQksrI2k529PTw9tbW2Eh98Ji/Xv+evn53fXscZtEvhevHz9uPtLJwbT0NDgksThvfT29qqy
      LhhebUajEc8ofzwm+oxRVcJVbt68afNvvV4/4p8ZrtHsF8Opy22PAIYzu7lKT0+Pzf081ESt
      tam1LhhebX0721gngU2mOyvhxnptvKvGddX7xB3HHc5npJxEF0KIcUqdx9xubqzTkSOh1trU
      WheouzaNRjOuxnXV/4v7dVyZAJxArbeBAPXWpta6QN213a8fTENx1f+L+3Vc9f5pM0zd3d1j
      Ol5PTw9qu2xiMpmUc7JqYjablbtGqoHa6hHC1Tx/8pOf/MTVRdhDr9fT0dHBe++9h7e3N5Mm
      TeLixYucPXuW2NhY/P39HT5mW1sb77//Ph0dHSQkJFBSUsL58+fR6XQkJiYC0NHRweHDh2lp
      aWHy5Mlcv36dkydPEhwcTGBgIMeOHaO6upqpU6c65DDaaDTy3//931y+fJnk5GQsFgtnz55l
      0qRJeHl5DfqafPXVVxw9ehSNRkNkZCTnz5+nrKyMuLg46uvrOXnyJN7e3srSNXv09vaSn59P
      bm4usbGx+Pn5UV5eTm9vL8HBwVRUVFBYWEh9fT2xsbF4enrS0dFBdnY29fX1xMXFUVdXp9Qy
      YcIEzpw5w5UrV4iLixvxhbH+9RiNRnJycqiqqiI2NpaGhoYBz3sk9fTdHO3atWucOXOG0NBQ
      5YLw7du3OXHiBF1dXQQFBZGdnY2Pjw9eXl5cu3aNyMjB+zJYLBaqqqr45JNPaG9vJyIigrNn
      zw54DbRarVKX2Wzm9OnThIWFYTAYqK+vJzQ01K7/h9evX+fGjRvjSAwQAAAJnklEQVSEhoYO
      +to7Y9zbt29z8uRJ6uvriY6OJi8vj/r6eiZPnqxsY/2e1mq1fPbZZyQnJ3P9+nU0Go1d+35e
      Xh6FhYWEhITg6elpsw87Y9yOjg7OnDlDUlISAGfOnOHChQtMnTqVpqYmm/0T7rx/rT87zp8/
      T2VlJUlJSVy8eJHw8PABRwvWPdSH4tZHAAcPHiQ2NpaQkBA6OjooLS3lkUce4ejRo04Z7/Dh
      wwQHBxMVFQXc6Vq2atUqlixZomxz/Phxli5dik6no6GhgezsbNavX8/x48cpLCwkPj6eCRMm
      UFpa6pCa8vPzMZvNxMbGYjabuXDhAlVVVXR1dQ35mhw9epQ1a9aQn59PS0sLNTU1REdHc+7c
      OT799FOWL19OcXEx7e3tdtd148YNrly5Qnx8PJ6enmi1WiorK9HpdABUVVWxePFiFi1apCxz
      O3fuHImJifT09HDp0iWbWs6fP4+vry/R0dFcvHhx1PU0NzeTmZlJaGgoJSUlgz7vkdbT3NxM
      RUUFy5Yt4+zZs8pR2ZkzZ5g/fz5arZbTp08TGRlJcXExRUVF+PgMvWzUZDJhMBhYvXo11dXV
      5OXlDRizu7vbpq68vDxiYmIoLi4mPz9faTY+Uq2trRw/fpza2louXbo0JuOaTCZOnTrF0qVL
      mT9/PpcvX8bX11fZl4AB7+mCggJiYmIoKysjPz+fkJCQEY/b1NTEjRs3WL9+PceOHRuwDztj
      3IKCAqX3b3V1NZ2dncybN49Tp07Z7J89PXdyJf0/OyoqKujs7OTatWtUV1fbvVLIrSeAjIwM
      ysvLaW1tpbGxka997WsEBwc77fzkokWLqKioUN4UnZ2d7N27l6KiImUbo9FIdHQ0KSkpaLVa
      wsPD8fPzIzAwkPr6elJSUkhJSaG+vt4hNc2ePZva2lpu3LiBl5cXCxYsICEhAWDI18TX15fA
      wEASEhKUv4Dj4uK4desWEydOJDw8nMjIyFFNAFFRUXh7e1NVVQVAYmIiGRkZaDQazGYzXV1d
      HDx4UJnAAAwGA7GxsSQmJnLz5k2bWnQ6HZMnTyYuLo6Ojo5R15OcnExHRwdffPEFMTExgz7v
      kdbT3t5OTEwMUVFR+Pn5YTAYMJlMmM1mYmJimDRpEhqNhosXL3L79m2qq6vJzc1VaurPy8uL
      tLQ0ioqK8Pb2xtPTc8CYnZ2dNnWZzWaKi4u5efMmjY2NHDp0iK+++mpEr5XZbCYvL48FCxbg
      5+eHXq8fk3E7Ozu5efMmR48e5Y9//CO3b99m8uTJNvtL//e0p6cnxcXFlJWVYbFY2Lt3r/J+
      Gq7Q0FCqq6v59a9/TUJCgs0+7KxxV6xYQUREBIDyuZCYmEhra6vN/tnS0mKzTV9NXV1d1NTU
      UFhYSGtrK4cOHRrRc+7j1hNAZmYmS5YsoaioCJPJpKzFdtZ53qSkJJYvX05rayvXrl3j2Wef
      5emnn6a4uFjZxmw2K7VMmDCBrq4upSZ/f3/0ej3t7e33TAAOV3h4OI899hg+Pj7k5+fbPNY3
      Xt/4ffq+1uv1hISE0N7ejtFoxMfHB4PBgNlsxmAwjGrdc0BAAGvWrCE+Pp6cnBybxzw8PHjy
      ySf53ve+R2NjI01NTcr3jUYjnZ2dBAQE2NTi6+uLwWDAaDTaNcH3r6empoa8vDyefPJJoqKi
      Bn3eI63Hy8uLrq4uent76e7uxsvLS3nMaDRiMBiYPXs2jz/+OFFRUQQHB7Nw4UKuX78+ZN2f
      fPIJJpOJ9evXDzmmdV3Lli1j3bp1hIaGEhgYyPz587l27dqIXqvGxkauXbtGRUUFxcXFNDU1
      jcm4np6eTJkyhaeeeoqQkBBl3L60LQx8T3/nO98hKyuLyMhIPD09iYmJGfHEU1NTQ3p6Ops3
      b0ar1drsw84ct0/fJNv3+lrvn32fE/0/OzZu3MjChQsJCwsjJiYGvV5v17VJt74GcOzYMcrK
      yvD39ycrK4vTp09TWVlJcnKyzbk7Rzl58iSff/453d3dLFiwgPfee4/a2lo0Gg3BwcF8+eWX
      TJo0iaNHj1JbW8vKlSu5fPkyFRUVBAQEkJmZyf79+6msrGTlypUOuU5RVFRETk4OjY2NLF68
      mNLSUkpKSmhoaGD69Ol8+umnymvS0NCAyWTCaDRSWFiIXq8nKyuLzz77jMuXL7N48WKam5vJ
      z8/Hw8ODefPm2X00dfPmTQ4cOEBdXR2pqam0t7fz2WefUVNTg5+fH2fOnOHSpUt0d3cTGRlJ
      VVUVkyZN4tSpU2i1Wh566CHq6+uVWhYuXMiJEye4du0aGRkZIz7k7l9PTU0Ner2eGzduEBIS
      YvO8o6KiuHz58ojqCQgIUK5zXLhwgejoaHp7e2lpacHLy4tPPvmEtrY2FixYQG1tLb6+vkyc
      OJGCggISEhIGfb8aDAaOHz+ORqOhtraWhIQEcnJylDEvX75MQEAAjY2NSl3p6emUlpaSmJiI
      wWCgtLSU1NRU5a/N4QgKCmLhwoXEx8ej0WhIT0/n+PHjTh/X29uburo6zp07R2trK4sWLSIn
      JwetVsvKlSs5cuQI6enpnDp1SnlPJyYmcuzYMdasWUNxcTENDQ0sWbJkROlZDw8PcnNzqaur
      w8fHh5kzZ9rsw84Y98iRI1y6dImmpibS09P5n//5H8rLy1m6dCkmk0nZPxctWsShQ4fIyMiw
      +ewICgri5MmTPPbYY2RnZ2MymcjMzLQZYzjXALC4qbq6OovFYrHk5uYq3zObzZauri6njpuX
      l2cxm83KeAaDwWKxWCynTp2ydHR0WCwWi8VgMFhMJpPyM52dncrX3d3dlu7ubofWdOXKFUt9
      ff2gj1m/JkeOHFHq6uzsVJ5HT0+PUlPf9n2PjcatW7csFRUVd63LbDZbzp07Z9HpdBaLxWIx
      Go2Wnp6eQWuxrlNt9bS1tVna2tosJpNp0NfPYDBYent7ld/T95/RaBzRaz3Ya9C/Luvf31f7
      aI3VuGaz2dLZ2am8Vj09PTb7kvW4ffoeN5lMys+NlMlkstlP++/Dzhq3T29vr8VoNCr/tt4/
      +/T/7Ogbv7e3d9Dx+z4j70ZuBSGEA7jqVhBCDEVuBSGEEGJIMgEIIcQ4JROAEEKMUzIBCCHE
      OCUTgBDCLdgTABR3JxPAfSY7O5udO3eSk5Pj0JvW3b592+6gixhbdXV1fPDBB7S2ttLS0sLe
      vXuV9Hp/R44c4cKFCxw4cACDwTDGld5de3s7Wq1W+ffWrVvZsWMHO3fuZOfOnTQ3N9tsX15e
      Puh7fvfu3cPqjjUara2t1NbWOnUMZ/j/ofDpbNDBx+UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='US inpatient payment and discharges' width='384'>
      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
      0nrkbqG+vr6TQ7WnnnoqIvx1XaeyshK32x05LAXh7ZWVlZUkJibicDgi16uqqmhubiYnJyey
      WyhanXRdj5Th8XiIj4+PpK2vryc9PR0gcj6hoqKChoYGcnNzI4JRCEFlZSWappGamgqET0sL
      IaIKzy1btrBy5cpIn77zzjv861//6iC0n3jiCXRdJzExkbfffpvZs2djsVh47LHHmDJlCnV1
      dXz88cc8+OCDJCUlEQwGef755/nss8/4y1/+0iGvYDDIn//8ZzweD263m/nz5/PQQw/hcDiY
      M2cO48ePJyEhga+//poRI0bw1Vdf8fLLL7NhwwY+/PBDeXZBIumCw0oBdEd9fT233norI0eO
      pKSkhKOPPprLLrss4sv+nnvuwe12c9999/HGG2+wdOlSBg0axLp167j77ruZMGFC1HxDoRB3
      3303Xq+X5ORkfvjhh8i966+/npdffpnq6mpuueUWxowZQ3l5OTNmzOC8885j8+bN3HfffQwf
      PpzS0lIee+wxAObOnRvxj5Oens6vf/3rLuv0xBNPcPTRR/PCCy8wevRofve73/H888+zfPly
      Ro4cybp16/i///s/Tj75ZF5//XWWL1/OsGHDKCoq4q9//Ss2m41bbrkFl8tFKBQiISGBe+65
      h3//+9+UlJREjZVw0kkncdJJJwGwePFitm7dSm5uboc0l1xyCXl5eWiaxuOPP05RURGqqjJu
      3DhuueUWmpqauOOOO6ipqSEpKYnly5dTUVER1dtnSUkJpaWlPPzww8TFxXH33XezZs0aYmNj
      mThxIrNnz454GgWora3l2muv5S9/+YuM4CaRdMOAUQCvv/46F198MWeffTamaXL99ddzzjnn
      8PDDD3P77bfzpz/9KZL2wgsv5JJLLgFg9erVfPzxx10qgA8++IChQ4dy0003ATBnzpxOadat
      W8dxxx3HrbfeCoRHtBAeJT/wwAPk5eVFDloB3HjjjRxzzDEIIbjyyiv3WKdnnnmGuXPnkpub
      S0FBAatXr+aVV15BVdVIUBaPx8Pnn3/Oyy+/jKqqvPjiiyxcuJATTzyRxsZGnnrqKRRFidTt
      oosuwjTNbvvUMAxeeeUVrr/++k4niseMGYOu6yxcuJDVq1czc+ZMbDYbH3/8Mc8++yzV1dUk
      JiaSmZlJRUUFb731Ftdddx3/+c9/OpVTX19PSkoKycnJKIrC+PHjKS0tjcxq5s6di8Ph4Nxz
      z2X48OHMmjULgOeee67b+kskA50BowA2b97MxRdfDIQDxxx99NFs3bqVyZMnd0pbWFjICy+8
      gKqq+Hw+UlJSusx3zZo1e/ROOWXKFN59912uvfZapk6dykUXXYTNZqOxsTHiE6i9AG0zESmK
      EjHvdFenOXPmREbgRUVFTJs2rZNALi0txe/3R4LD7Ny5E5/Px1lnncWECRO47LLLmDJlChde
      eCFDhgzpkdnrm2++QVEUjj322E73fD4fL774IqtWreLGG29kzJgxEd9BLS0tkYVyXdd57bXX
      yMvLY+TIkZHYBKZpRtoQDAax2+0RBdnmLtrn8+H1epk+fTqFhYWRmdLerLlIJAOZAaMA3G43
      tbW1EcFZU1MTOei2u5ng0UcfZe7cuWRkZLBjxw6ef/75LvONjY3F5/N1W7bL5eIvf/kLDQ0N
      fPLJJzz88MP84Q9/QFEUdF3vkY/77urU3l6enJzMpk2bIn+3tc3lcpGamsqFF14YuRcXF4ei
      KMyePTsSgnH27Nm8+eabezylbJom//jHP/jlL38ZVeB+9NFHbNu2jQceeIDBgwcD8Nlnn3Hq
      qady+eWXo+s6c+bM4csvv6SgoACn08kf/vAH1q9fT3NzM/Hx8ZE4Bm63m7q6OoLBIFarNeIu
      WghBXl4e06dP58QTT+T999+nqampR/GdJRLJYbYNtDtmzpzJk08+SUlJCcuWLaOgoICxY8fi
      cDiorq5m7dq1FBUVAWHh1ub++K9//Wu3+f7P//wPTz/9NFu2bOHLL7/s4Ku/ja+++or//ve/
      +P1+0tLSIkL55JNPZu7cuRQWFvLRRx91u/2zp3U65phjWLNmDX/605945plnePvttwEYPHgw
      LS0t/Pjjj5HA7N9++y0VFRU8//zzVFZWkpqaGln0/e677/jkk0+6LGflypX4fL4O3jkrKyv5
      4osvAFi4cCE/+clP8Pl8bN68mdraWuLj49m4cSPbtm1j3bp11NfXk52dzdy5c7n33nv5f//v
      /5GXl8dFF11EdnY269atY/369QwaNAifz8eCBQv4/vvvWbt2LWPHjuWII47gn//8J5s2beKH
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='VUMC and others' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydeXhU5dm471kzSyaZSSYJSQgJAQJEFBAQ0KIggti6YF27SKmitrXqV0u1
      /qzWfrVVW6ufH0WLqLiLdakLoIAoiyxCIARCIpiEkEBC1tkns8/vj3jOl5AdEhLIe1+Xl2Tm
      zDnPec85z/Oe530WRTQajSIQCASCQYeyvwUQCAQCQf8gDIBAIBAMUoQBEAgEgkGKMAACgUAw
      SBEGQCAQCAYp6o6+2PTFJyQlp51OWQQCgUBwGunQACQlp5E7btLplEUgEAgEpxHhAhIIBIJB
      ijAAAoFAMEjpVQPQ0NBAIBDozV3K+w0Gg72+346IRCLU1NSctuMJBAJBf9AtAxAKhXjmmWe4
      +uqrue6669i6dWu72/3qV7+irq6uy/3Z7Xbeeeedbgt51113UVtb2+3tO+Ivf/kL7777bpfH
      P3jwIH/4wx/kv8PhMC+++OIpH18gEAgGEh0uArfkgw8+wOl08sEHH1BeXo5KpcLv97Nu3ToC
      gQBXX301brcbr9dLeno6dXV1bNiwgbS0NC6++GKi0Sg7duygoqKCKVOmsHr1anbv3o3FYmHO
      nDkoFAo8Hg/btm3DZrMxbdo0hg0bBjQbC6fTyaFDh9ixYwdXXXUVGo2GHTt2UFpayiWXXEJG
      RgZHjx5l586dxMfHc/HFF7Nnzx7C4TBHjx7lsssuIyEhgYsuuojJkyezYsUK+fizZ89m586d
      VFZWMnLkSM4//3x2797NpEnNC+CRSIS3336bVatWMWzYMGbMmEFjYyObNm0iIyODGTNmyOMU
      DofZtGkTDQ0NzJ07F7Vazbp16wC48sorCQQC7NmzB6/XSzAYZMyYMeTl5XHhhReSmJjInj17
      cLlcqNVq5syZg9frbTMmmzZtYty4cezbt4+ZM2eydetWKioqmDt3LlartbfvD4FAcBajevTR
      Rx9t74u62mo5DPTrr79m8+bNmEwmJk2ahNls5q677iIhIYGvv/6aQCCA3W7H7/czZswY7rnn
      HsaPH89zzz3H9OnTWbJkCYWFhcTHxxMIBFi9ejXDhw8nNjaWc889F4CvvvqKw4cPU11dzbp1
      67jiiisA2L59Ozt37sRisfDmm28yZcoU3n33Xb766isMBgMvvPACs2bN4s4772TMmDHs27eP
      Cy64gDvvvBOTycT+/fspLCxk/Pjx/O53v2PevHm89NJL8vHj4+NZt24dOp2Ov/zlLyxcuJBX
      XnmFyy+/nPT0dDweDy+++CJWqxWDwYDRaOT+++8nNzeX5557jgkTJpCcnEw4HObee+/F6XQS
      jUZJSEhg8eLFJCcns2XLFhwOB263m2effRar1cqSJUvw+/0UFxdTU1NDOBxmyZIlDB06lBde
      eIFx48ZRUlLSakymT5/Obbfdxtdff018fDxfffUVBw4cIBQK8cUXXzB79uzTc9cIBIKzgm69
      ASxYsIDExETeeOMNduzYwZw5c6ivr0epVKJWqwkGg/Ks+a233iIpKQmn04ler6e4uJjS0lJe
      eeUVFAoFACtWrOCXv/wlqamp8jGCwSDl5eXU1NSQkZEhf757924WLVrEVVddxUcffYTZbGb9
      +vW8++67RCIRVq9ejdPpxOVyceTIEX7yk59QWVlJZmYmd999Nxs2bODrr79mz549TJw4kSFD
      hhAOh+XjFxYW4vF42LNnDwkJCUQiEQ4cOCAbptjYWHQ6HbfccguTJk1i8eLFLF68mOnTp1NY
      WIjD4QBg69atGI1GHnzwQQDefvttLrroIu644w7ef/99qqqqqK2tZeHChcyYMYM1a9bw8MMP
      8/jjjzNq1Ch2797NggULuPrqq9m7d688ri3HJD8/n+HDh/Pss8+iUCi46qqruPXWW7HZbKd1
      jUQgEJwddLkGcOzYMdxuN9dccw233347fr+f0tJSpk6dyvjx47nuuuuYO3eubABKS0uZPXs2
      48eP55577iEajZKZmYlCoSASieB2u/F4PK2Uf15eHh999BH33Xef7IaRkPZbVlZGSkoKdXV1
      ZGRkoNFoWLVqFdOnTycxMZF3330Xo9HI8uXL5d+EQiHef/99vve978mftTy+x+Ph4Ycf5ic/
      +Qnz5s1jwoQJHDp0iMzMTHQ6nSxDUVGRbBBKS0sZNWoU9fX17N+/nwkTJgBQVlZGVlYW0Ow2
      krYLh8OsWbOGGTNmyDLs3r1bPseWn02aNIny8nJKS0vxeDxtxmT37t3ceOONJCQkcOTIEUaN
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
